[{"/Users/Mahmoud/Documents/React/ERP/erp_logistio/src/index.js":"1","/Users/Mahmoud/Documents/React/ERP/erp_logistio/src/App.js":"2","/Users/Mahmoud/Documents/React/ERP/erp_logistio/src/reportWebVitals.js":"3","/Users/Mahmoud/Documents/React/ERP/erp_logistio/src/ProtectedRoute.js":"4","/Users/Mahmoud/Documents/React/ERP/erp_logistio/src/Pages/Login/SignIn.js":"5","/Users/Mahmoud/Documents/React/ERP/erp_logistio/src/Pages/Home/Home.js":"6","/Users/Mahmoud/Documents/React/ERP/erp_logistio/src/Auth.js":"7","/Users/Mahmoud/Documents/React/ERP/erp_logistio/src/Url_base.js":"8","/Users/Mahmoud/Documents/React/ERP/erp_logistio/src/Hooks/useGetUser.js":"9","/Users/Mahmoud/Documents/React/ERP/erp_logistio/src/Hooks/useToken.js":"10","/Users/Mahmoud/Documents/React/ERP/erp_logistio/src/Components/CustomAppBar.js":"11","/Users/Mahmoud/Documents/React/ERP/erp_logistio/src/Components/sideBar/SideMenu.js":"12","/Users/Mahmoud/Documents/React/ERP/erp_logistio/src/Components/sideBar/LockRoute.js":"13","/Users/Mahmoud/Documents/React/ERP/erp_logistio/src/Pages/Products/ProductsContainer.js":"14","/Users/Mahmoud/Documents/React/ERP/erp_logistio/src/Pages/Users/UsersContainer.js":"15","/Users/Mahmoud/Documents/React/ERP/erp_logistio/src/Hooks/useRole.js":"16","/Users/Mahmoud/Documents/React/ERP/erp_logistio/src/Pages/Products/Products.js":"17","/Users/Mahmoud/Documents/React/ERP/erp_logistio/src/Pages/Users/Users.js":"18","/Users/Mahmoud/Documents/React/ERP/erp_logistio/src/Components/Sections array/SectionsTableContainer.js":"19","/Users/Mahmoud/Documents/React/ERP/erp_logistio/src/Components/EmptyArrayHolder.js":"20","/Users/Mahmoud/Documents/React/ERP/erp_logistio/src/Pages/Products/ProductsTable.js":"21","/Users/Mahmoud/Documents/React/ERP/erp_logistio/src/Pages/Products/CustomModal.js":"22","/Users/Mahmoud/Documents/React/ERP/erp_logistio/src/Error boundry/ProductCardErrorHandler.js":"23","/Users/Mahmoud/Documents/React/ERP/erp_logistio/src/Components/Products Card/ProductCard.js":"24","/Users/Mahmoud/Documents/React/ERP/erp_logistio/src/Components/Sections array/SectionsTable.js":"25","/Users/Mahmoud/Documents/React/ERP/erp_logistio/src/Components/EmailModal.js":"26","/Users/Mahmoud/Documents/React/ERP/erp_logistio/src/Components/AccessoriesTable.js":"27","/Users/Mahmoud/Documents/React/ERP/erp_logistio/src/Components/VariantsTable.js":"28","/Users/Mahmoud/Documents/React/ERP/erp_logistio/src/Components/CustomSpan.js":"29","/Users/Mahmoud/Documents/React/ERP/erp_logistio/src/Components/UrlsTable.js":"30","/Users/Mahmoud/Documents/React/ERP/erp_logistio/src/Components/AttachmentsLink.js":"31","/Users/Mahmoud/Documents/React/ERP/erp_logistio/src/Components/Accesories row/CustomRow.js":"32","/Users/Mahmoud/Documents/React/ERP/erp_logistio/src/Components/Variants row/CustomRow.js":"33","/Users/Mahmoud/Documents/React/ERP/erp_logistio/src/Components/Products Card/Flag.js":"34","/Users/Mahmoud/Documents/React/ERP/erp_logistio/src/Pages/Stock/StockContainer.js":"35","/Users/Mahmoud/Documents/React/ERP/erp_logistio/src/Pages/Stock/Stock.js":"36","/Users/Mahmoud/Documents/React/ERP/erp_logistio/src/Components/Stock/StockTable.js":"37","/Users/Mahmoud/Documents/React/ERP/erp_logistio/src/Components/Stock/CustomRow.js":"38","/Users/Mahmoud/Documents/React/ERP/erp_logistio/src/Components/SvgComponent.js":"39","/Users/Mahmoud/Documents/React/ERP/erp_logistio/src/Error boundry/StockTableErrorHandler.js":"40","/Users/Mahmoud/Documents/React/ERP/erp_logistio/src/Components/Loader.js":"41","/Users/Mahmoud/Documents/React/ERP/erp_logistio/src/Pages/Orders/OrdersContainer.js":"42","/Users/Mahmoud/Documents/React/ERP/erp_logistio/src/Pages/Orders/Orders.js":"43","/Users/Mahmoud/Documents/React/ERP/erp_logistio/src/Components/Orders/OrdersTable.js":"44","/Users/Mahmoud/Documents/React/ERP/erp_logistio/src/Components/Orders/CustomRow.js":"45","/Users/Mahmoud/Documents/React/ERP/erp_logistio/src/Components/Orders/CustomModal.js":"46","/Users/Mahmoud/Documents/React/ERP/erp_logistio/src/Components/Orders/AddressTable.js":"47","/Users/Mahmoud/Documents/React/ERP/erp_logistio/src/Components/Orders/OrderItem.js":"48","/Users/Mahmoud/Documents/React/ERP/erp_logistio/src/Components/Orders/Variants.js":"49","/Users/Mahmoud/Documents/React/ERP/erp_logistio/src/Components/CustomSnackBar.js":"50","/Users/Mahmoud/Documents/React/ERP/erp_logistio/src/Pages/Purchases/PurchasesContainer.js":"51","/Users/Mahmoud/Documents/React/ERP/erp_logistio/src/Pages/Purchases/Purchases.js":"52","/Users/Mahmoud/Documents/React/ERP/erp_logistio/src/Components/Purchases/PurchasesTable.js":"53","/Users/Mahmoud/Documents/React/ERP/erp_logistio/src/Components/Purchases/CustomRow.js":"54","/Users/Mahmoud/Documents/React/ERP/erp_logistio/src/Components/StatusBadge.js":"55","/Users/Mahmoud/Documents/React/ERP/erp_logistio/src/Components/Purchases/CustomModal.js":"56","/Users/Mahmoud/Documents/React/ERP/erp_logistio/src/Components/Purchases/VariantsTable.js":"57","/Users/Mahmoud/Documents/React/ERP/erp_logistio/src/Pages/Home/Overview.js":"58","/Users/Mahmoud/Documents/React/ERP/erp_logistio/src/Components/CustomCard.js":"59","/Users/Mahmoud/Documents/React/ERP/erp_logistio/src/Hooks/useMonth.js":"60","/Users/Mahmoud/Documents/React/ERP/erp_logistio/src/Pages/Settings/Profile.js":"61","/Users/Mahmoud/Documents/React/ERP/erp_logistio/src/Pages/Home/Password_reset.js":"62","/Users/Mahmoud/Documents/React/ERP/erp_logistio/src/Components/user/UserListRow.js":"63"},{"size":562,"mtime":1610810806793,"results":"64","hashOfConfig":"65"},{"size":1117,"mtime":1612535455673,"results":"66","hashOfConfig":"65"},{"size":362,"mtime":1609753806154,"results":"67","hashOfConfig":"65"},{"size":752,"mtime":1610470700592,"results":"68","hashOfConfig":"65"},{"size":8962,"mtime":1613230726429,"results":"69","hashOfConfig":"65"},{"size":6664,"mtime":1613247473168,"results":"70","hashOfConfig":"65"},{"size":3223,"mtime":1613250880225,"results":"71","hashOfConfig":"65"},{"size":143,"mtime":1611762703844,"results":"72","hashOfConfig":"65"},{"size":120,"mtime":1609839876337,"results":"73","hashOfConfig":"65"},{"size":332,"mtime":1610052215616,"results":"74","hashOfConfig":"65"},{"size":3958,"mtime":1612863431556,"results":"75","hashOfConfig":"65"},{"size":8881,"mtime":1611566971714,"results":"76","hashOfConfig":"65"},{"size":1233,"mtime":1612865250868,"results":"77","hashOfConfig":"65"},{"size":748,"mtime":1611093652174,"results":"78","hashOfConfig":"65"},{"size":5203,"mtime":1612949493509,"results":"79","hashOfConfig":"65"},{"size":552,"mtime":1610370030973,"results":"80","hashOfConfig":"65"},{"size":21562,"mtime":1612958157842,"results":"81","hashOfConfig":"65"},{"size":11272,"mtime":1612949058391,"results":"82","hashOfConfig":"65"},{"size":3603,"mtime":1611760907140,"results":"83","hashOfConfig":"65"},{"size":359,"mtime":1610733788908,"results":"84","hashOfConfig":"65"},{"size":4169,"mtime":1610465081280,"results":"85","hashOfConfig":"65"},{"size":10600,"mtime":1613052212625,"results":"86","hashOfConfig":"65"},{"size":1322,"mtime":1610722853678,"results":"87","hashOfConfig":"65"},{"size":5456,"mtime":1612515249488,"results":"88","hashOfConfig":"65"},{"size":3057,"mtime":1611757420461,"results":"89","hashOfConfig":"65"},{"size":2357,"mtime":1610298503898,"results":"90","hashOfConfig":"65"},{"size":2346,"mtime":1610544070850,"results":"91","hashOfConfig":"65"},{"size":4001,"mtime":1612533165444,"results":"92","hashOfConfig":"65"},{"size":1566,"mtime":1612432160653,"results":"93","hashOfConfig":"65"},{"size":2031,"mtime":1610028563418,"results":"94","hashOfConfig":"65"},{"size":1427,"mtime":1610020807027,"results":"95","hashOfConfig":"65"},{"size":4976,"mtime":1611222080866,"results":"96","hashOfConfig":"65"},{"size":4404,"mtime":1611221906865,"results":"97","hashOfConfig":"65"},{"size":886,"mtime":1610820029667,"results":"98","hashOfConfig":"65"},{"size":2650,"mtime":1611650749213,"results":"99","hashOfConfig":"65"},{"size":6777,"mtime":1611650991165,"results":"100","hashOfConfig":"65"},{"size":3323,"mtime":1612957220259,"results":"101","hashOfConfig":"65"},{"size":6354,"mtime":1610826112321,"results":"102","hashOfConfig":"65"},{"size":7224,"mtime":1610661112843,"results":"103","hashOfConfig":"65"},{"size":1218,"mtime":1610723960804,"results":"104","hashOfConfig":"65"},{"size":1280,"mtime":1611320684364,"results":"105","hashOfConfig":"65"},{"size":1950,"mtime":1611587265400,"results":"106","hashOfConfig":"65"},{"size":1003,"mtime":1611584891884,"results":"107","hashOfConfig":"65"},{"size":8150,"mtime":1613121704220,"results":"108","hashOfConfig":"65"},{"size":2874,"mtime":1613121853820,"results":"109","hashOfConfig":"65"},{"size":9393,"mtime":1613121826161,"results":"110","hashOfConfig":"65"},{"size":3234,"mtime":1611066611789,"results":"111","hashOfConfig":"65"},{"size":7139,"mtime":1612952129758,"results":"112","hashOfConfig":"65"},{"size":5007,"mtime":1612949324843,"results":"113","hashOfConfig":"65"},{"size":1347,"mtime":1611092212821,"results":"114","hashOfConfig":"65"},{"size":2768,"mtime":1613050661274,"results":"115","hashOfConfig":"65"},{"size":831,"mtime":1611744100890,"results":"116","hashOfConfig":"65"},{"size":3148,"mtime":1613050702302,"results":"117","hashOfConfig":"65"},{"size":2609,"mtime":1613120716071,"results":"118","hashOfConfig":"65"},{"size":724,"mtime":1613055737287,"results":"119","hashOfConfig":"65"},{"size":5804,"mtime":1613120667855,"results":"120","hashOfConfig":"65"},{"size":4812,"mtime":1613051739373,"results":"121","hashOfConfig":"65"},{"size":16953,"mtime":1612522488643,"results":"122","hashOfConfig":"65"},{"size":1868,"mtime":1612191098516,"results":"123","hashOfConfig":"65"},{"size":1121,"mtime":1611835011269,"results":"124","hashOfConfig":"65"},{"size":7376,"mtime":1612543427071,"results":"125","hashOfConfig":"65"},{"size":3095,"mtime":1612520309631,"results":"126","hashOfConfig":"65"},{"size":956,"mtime":1612953010957,"results":"127","hashOfConfig":"65"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"131"},"bhrdnk",{"filePath":"132","messages":"133","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"131"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"131"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"131"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"131"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"131"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"131"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"131"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"131"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"131"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"131"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"131"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"131"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"131"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"131"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"131"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"131"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"131"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"131"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"131"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"131"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"131"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"131"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"131"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"131"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"131"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"131"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"235"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"131"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"131"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"246","usedDeprecatedRules":"131"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249","usedDeprecatedRules":"131"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":"252","usedDeprecatedRules":"131"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"255","usedDeprecatedRules":"131"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"258","usedDeprecatedRules":"131"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"261","usedDeprecatedRules":"131"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"264","usedDeprecatedRules":"131"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"267","usedDeprecatedRules":"131"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"270","usedDeprecatedRules":"131"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"275","usedDeprecatedRules":"131"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":"278","usedDeprecatedRules":"131"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"283","usedDeprecatedRules":"131"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"286","usedDeprecatedRules":"131"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"289","usedDeprecatedRules":"131"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"292","usedDeprecatedRules":"131"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"295","usedDeprecatedRules":"131"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"298","usedDeprecatedRules":"131"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"301","usedDeprecatedRules":"131"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},"/Users/Mahmoud/Documents/React/ERP/erp_logistio/src/index.js",["304"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["305","306"],"/Users/Mahmoud/Documents/React/ERP/erp_logistio/src/App.js",["307","308"],"import React from 'react';\nimport { Router, Route, Switch, Redirect,BrowserRouter } from \"react-router-dom\";\nimport { createBrowserHistory } from \"history\";\nimport SignIn from './Pages/Login/SignIn';\nimport ProtectedRoute from './ProtectedRoute';\nimport Password_reset from './Pages/Home/Password_reset'\nimport Home from './Pages/Home/Home';\nimport { AnimatePresence } from 'framer-motion';\n\nconst history = createBrowserHistory();\nexport const ConnectedUser = React.createContext();\n\nfunction App() {\n\n  const [user, setuser] = React.useState({});\n\n\n \n  \n  return (\n\n    <BrowserRouter>\n    <ConnectedUser.Provider value={[user,setuser]} >\n\n    <Router  history={history}>\n\n\n       <Switch >\n        <Route component={SignIn} exact path='/'/> \n        <Route component={Password_reset}  path='/password_reset/:id'/>\n\n        {/* <Route component={Home}  path='/home'/> */}\n        <ProtectedRoute  component={Home}  path='/home' />\n\n         {/* <ProtectedRoute  component={Dashboard}  path='/home' /> */}\n      </Switch>\n    </Router>\n    </ConnectedUser.Provider>\n\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","/Users/Mahmoud/Documents/React/ERP/erp_logistio/src/reportWebVitals.js",[],"/Users/Mahmoud/Documents/React/ERP/erp_logistio/src/ProtectedRoute.js",[],"/Users/Mahmoud/Documents/React/ERP/erp_logistio/src/Pages/Login/SignIn.js",["309","310","311","312","313","314","315"],"import React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useHistory } from 'react-router-dom';\nimport auth from '../../Auth';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport {ConnectedUser}  from '../../App'\nimport useToken from '../../Hooks/useToken';\nimport useGetUser from '../../Hooks/useGetUser';\nimport jwt from 'jsonwebtoken';\nimport logo from '../../Assets/img/Logistio logo.svg';\nimport Loader from '../../Components/Loader';\nimport CustomSnackbar from '../../Components/CustomSnackBar';\nimport axios from 'axios'\nimport {uri} from \"../../Url_base\";\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport { IconButton } from '@material-ui/core';\nconst lngc = window.localStorage.getItem('lang')?window.localStorage.getItem('lang'):'EN';\nconst lang = require(`../../Language/${lngc}.json`)\nconst initialState = {\n  username:'',\n    password:''\n}\n\n\nconst reducer = (state,action)=>{\n        switch (action.type) {\n            case 'userName':\n                return{...state,username:action.value};\n            case 'password':\n                return{...state,password:action.value}\n        \n            default:\n                return state\n        }\n}\n\nfunction Copyright() {\n\n\n  return (\n    <Typography variant=\"body2\" color=\"textPrimary\" align=\"center\">\n      {'Copyright © Logistio '}\n      {/* <Link color=\"inherit\" href=\"#\">\n        Logistio\n      </Link>{' '} */}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100vh',\n  },\n  image: {\n    backgroundImage: 'url(https://source.unsplash.com/random)',\n    backgroundRepeat: 'no-repeat',\n    backgroundColor:\n      theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\n    backgroundSize: 'cover',\n    backgroundPosition: 'center',\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    marginBottom: theme.spacing(5),\n    width:200,\n    height:50\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n    background:'black',\n    color:'white',\n    '&:hover':{\n        background:'#373738',\n\n    }\n\n  },\n  txtInput: {\n    '& label.Mui-focused': {\n      color: 'grey',\n    },\n    '& .MuiInput-underline:after': {\n      borderBottomColor: 'black',\n    },\n    '& .MuiOutlinedInput-root': {\n      \n     \n      '&.Mui-focused fieldset': {\n        borderColor: 'black',\n      },\n    },\n  },\n}));\n\nexport default function SignIn(props) {\n  const [setToken,getToken] = useToken();\n  const user_context = React.useContext(ConnectedUser);\n  const classes = useStyles();\n  const [userInfo, dispatch] = React.useReducer(reducer, initialState);\n  let history = useHistory();\n  const [loading, setloading] = React.useState(false);\n  const [status, setStatus] = React.useState('');\n  const [forgotPass, setforgotPass] = React.useState(false);\n\n  \n\n  const AuthHandler = ()=>{\n      setloading(true);\n    auth.login(userInfo,setloading,(token,ch)=>{\n        setToken(token);\n        console.log('DECODED__token:::',jwt.decode(token))\n        // history.push('/home');\n        user_context[1]({userName:jwt.decode(token).username,role:jwt.decode(token).role});\n        if(ch)\n          history.push({pathname:'/home/profile',state:'new'});\n        else\n          history.push('/home');\n    })\n\n}\n\nconst _reset = ()=>{\n\n      axios.post(`${uri.link}/password_reset`, {\n          username:userInfo.username,\n        })\n        .then(function (res) {\n          if(res.status===200){\n              setStatus(200);\n              console.log('RESTE RESPONSE -------->',res.data)\n          }\n              else\n              setStatus('error')\n        })\n        .catch(function (error) {\n            setStatus('error')\n        });\n}\n\n\n\nReact.useEffect(() => {\n  if(auth.isAuthenticated())\n      history.push('/home')\n    \n\n}, [])\n\n  return (\n    <Grid container component=\"main\" className={classes.root}>\n      <CssBaseline />\n      {\n                        status===200?\n                        <CustomSnackbar  content='An email has been sent!' type=\"success\"/>\n                        :\n                        status==='error'?\n                        <CustomSnackbar  content='Ops, password update failed!' type=\"error\"/>\n                        : null\n                    }\n                    \n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square style={{padding:'50px'}}>\n\n        <div className={classes.paper}>\n          <Avatar className={classes.avatar} src={logo} variant='square' />\n          <Typography component=\"h1\" variant=\"h5\" style={{fontWeight:'bolder',alignSelf:'flex-start'}}>\n            {lang.signin}\n          </Typography>\n          {\n              !forgotPass?\n            \n          <form className={classes.form} noValidate>\n              \n                <TextField\n                  variant=\"outlined\"\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  id=\"userName\"\n                  label={lang.userName}\n                  name=\"userName\"\n                  autoComplete=\"userName\"\n                  autoFocus\n                  className={classes.txtInput}\n                  onChange={(e)=>{dispatch({type:'userName',value:e.target.value})}}\n                />\n                <TextField\n\n                  variant=\"outlined\"\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  name=\"password\"\n                  label={lang.password}\n                  type=\"password\"\n                  id=\"password\"\n                  autoComplete=\"current-password\"\n                  className={classes.txtInput}\n                  onChange={(e)=>{dispatch({type:'password',value:e.target.value})}}\n                />\n            \n            {\n              !loading && \n              <Button\n                onClick={AuthHandler}\n                fullWidth\n                variant=\"contained\"\n                className={classes.submit}\n              \n            >\n              {lang.login}\n            </Button>\n            }\n            {\n              loading && \n              <div style={{textAlign:'center'}}>\n                <Loader />\n            </div>\n            }\n            \n            <Grid container>\n              <Grid item xs>\n                <Link onClick={()=>{setforgotPass(true)}} variant=\"body2\" color='textSecondary'>\n                {lang.forgotPass}\n                </Link>\n              </Grid>\n              {/* <Grid item>\n                <Link href=\"#\" variant=\"body2\" color='textSecondary'> \n                 {`${lang.forgot_pass}`}\n                </Link>\n              </Grid> */}\n            </Grid>\n            <Box mt={5}>\n              <Copyright />\n            </Box>\n          </form>\n          :\n          <form className={classes.form} noValidate>\n              \n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"userName\"\n            label={lang.userName}\n            name=\"userName\"\n            autoComplete=\"userName\"\n            autoFocus\n            className={classes.txtInput}\n            onChange={(e)=>{dispatch({type:'userName',value:e.target.value})}}\n          />\n          {\n              !loading && \n              <Button\n                onClick={_reset}\n                fullWidth\n                variant=\"contained\"\n                className={classes.submit}\n            >\n              {lang.reset_password}\n            </Button>\n            \n            }\n            {\n              loading && \n              <div style={{textAlign:'center'}}>\n                <Loader />\n            </div>\n            }\n            <IconButton aria-label=\"delete\" className={classes.margin} onClick={()=>setforgotPass(false)}>\n                <ArrowBackIcon fontSize=\"large\" />\n            </IconButton>\n          </form>\n}\n        </div>\n        <span style={{color:'#303030',float:'right',opacity:'50%'}}>v1.1.0</span>\n      </Grid>\n    </Grid>\n  );\n}","/Users/Mahmoud/Documents/React/ERP/erp_logistio/src/Pages/Home/Home.js",["316","317","318","319","320","321","322","323","324","325","326"],"/Users/Mahmoud/Documents/React/ERP/erp_logistio/src/Auth.js",[],"/Users/Mahmoud/Documents/React/ERP/erp_logistio/src/Url_base.js",[],"/Users/Mahmoud/Documents/React/ERP/erp_logistio/src/Hooks/useGetUser.js",[],"/Users/Mahmoud/Documents/React/ERP/erp_logistio/src/Hooks/useToken.js",["327"],"import React from 'react'\n\n\nfunction useToken() {\n    const token = window.localStorage.getItem('erpT')\n    const setToken = (givenToken)=>{\n        return  window.localStorage.setItem('erpT',givenToken)\n        \n    }\n    const getToken = ()=>{\n        return token\n    }\n    return [setToken,getToken]  \n}\n\nexport default useToken","/Users/Mahmoud/Documents/React/ERP/erp_logistio/src/Components/CustomAppBar.js",["328","329","330","331","332","333","334","335","336","337","338","339"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { Avatar, Grid } from '@material-ui/core';\nimport  avatar from '../Assets/img/avatar.png';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport { motion } from \"framer-motion\"\nimport Divider from '@material-ui/core/Divider';\n\nimport auth from '../Auth'\nimport { useHistory } from 'react-router-dom';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nconst lngc = window.localStorage.getItem('lang')?window.localStorage.getItem('lang'):'EN';\nconst lang = require(`../Language/${lngc}.json`);\n\nconst useStyles = makeStyles((theme) => ({\n    large: {\n      width: theme.spacing(6),\n      height: theme.spacing(6),\n      marginRight:\"7px\"\n    },\n  }));\n\nexport default function CustomAppBar({user}) {\n\n\n  const classes = useStyles();\n  const [isMenuOpen, setisMenuOpen] = React.useState(null)\n  const history = useHistory();\n  const handleMenuOpen = (event)=>{\n        setisMenuOpen(event.currentTarget)\n  }\n  const handleMenuClose = ()=>{\n    // auth.logout()\n        setisMenuOpen(null)\n}\n\nconst logout_ = ()=>{\n  auth.logout()\n}\n\nconst _profile = ()=>{\n  handleMenuClose()\n  history.push('/home/profile')\n}\n\nconst [isEnglish, setIsEnglish] = React.useState(window.localStorage.getItem('lang')=='CH'?false:true);\n\nconst handleChange = (event) => {\n  isEnglish?\n  window.localStorage.setItem('lang','CH')\n  :\n  window.localStorage.setItem('lang','EN')\n  // setIsEnglish(!isEnglish)\n  window.location.reload()\n};\n\n\n\n \n  return (\n    <Grid item lg={12} style={{background:'rgb(243,245,247)',borderRadius:'10px'}}>\n     \n        <div style={{display:'flex',flexDirection:'row',width:'100%',justifyContent:\"flex-end\",marginBottom:'0px',paddingBottom:'5px',}}>\n        <FormControlLabel\n      \n        control={\n          <Switch\n            checked={isEnglish}\n            onChange={handleChange}\n            name=\"en\"\n            color=\"primary\"\n          />\n        }\n        label={lang.language}\n      />\n            <section style={{display:'flex',width:'250px',alignItems:'center',padding:'3px',cursor:'pointer',marginLeft:'20px'}} >\n                <Avatar alt=\"avatar\" src={avatar} className={classes.large}/>\n                <span style={{color:'#303030',display:'flex',alignItems:'center'}} onClick={handleMenuOpen}>{`${lang.hello}, ${user?.userName}`}<ExpandMoreIcon /></span>\n         \n                \n            </section>\n            <Menu\n      \n                    anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n                    id={'profile_menu'}\n                    keepMounted\n                    anchorEl={isMenuOpen}\n                    open={Boolean(isMenuOpen)}\n                    onClose={handleMenuClose}\n                    style={{marginTop:'24px',textAlign:'center'}}\n                    >\n                    <MenuItem style={{width:'150px',textAlign:'center',fontSize:'13px',paddingLeft:'38%',color:'#303030',opacity:'55%'}} onClick={_profile}>Profile</MenuItem>\n                    <Divider variant=\"middle\" />\n                    <MenuItem style={{width:'150px',textAlign:'center',fontSize:'13px',paddingLeft:'38%',color:'#303030',opacity:'55%'}} onClick={logout_}>{lang.logout}</MenuItem>\n                    \n                    </Menu>\n        </div>\n        \n\n</Grid>\n  );\n}","/Users/Mahmoud/Documents/React/ERP/erp_logistio/src/Components/sideBar/SideMenu.js",["340","341","342","343","344","345","346","347"],"import React from \"react\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\nimport MailIcon from \"@material-ui/icons/Mail\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport LocalOfferIcon from \"@material-ui/icons/LocalOffer\";\nimport LocalConvenienceStoreIcon from \"@material-ui/icons/LocalConvenienceStore\";\nimport MonetizationOnIcon from \"@material-ui/icons/MonetizationOn\";\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\nimport StoreIcon from \"@material-ui/icons/Store\";\nimport SupervisorAccountIcon from \"@material-ui/icons/SupervisorAccount\";\nimport useRole from \"../../Hooks/useRole\";\nimport { Switch, Route, Link, useLocation } from \"react-router-dom\";\nimport \"../../Assets/css/sideBarMenuItem.css\";\nimport logo from \"../../Assets/img/Logistio white logo.svg\";\nimport { motion } from \"framer-motion\";\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nconst lngc = window.localStorage.getItem(\"lang\")\n  ? window.localStorage.getItem(\"lang\")\n  : \"EN\";\nconst lang = require(`../../Language/${lngc}.json`);\n\nconst drawerWidth = 220;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  appBar: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n    background: \"rgb(36,37,77)\",\n    borderRadius: \"20px\",\n    height: \"95vh\",\n    position: \"relative\",\n  },\n  // necessary for content to be below app bar\n  toolbar: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.default,\n    padding: theme.spacing(3),\n  },\n}));\n\nconst init_activeRoute = {\n  home: false,\n  products: false,\n  stock: false,\n  users: false,\n  orders: false,\n  purchases: false,\n};\n\nconst activeRouteReducer = (state, action) => {\n  switch (action.type) {\n    case \"home\":\n      return {\n        home: true,\n        products: false,\n        stock: false,\n        users: false,\n        orders: false,\n        purchases: false,\n      };\n    case \"products\":\n      return {\n        home: false,\n        products: true,\n        stock: false,\n        users: false,\n        orders: false,\n        purchases: false,\n      };\n    case \"stock\":\n      return {\n        home: false,\n        products: false,\n        stock: true,\n        users: false,\n        orders: false,\n        purchases: false,\n      };\n    case \"users\":\n      return {\n        home: false,\n        products: false,\n        stock: false,\n        users: true,\n        orders: false,\n        purchases: false,\n      };\n    case \"orders\":\n      return {\n        home: false,\n        products: false,\n        stock: false,\n        users: false,\n        orders: true,\n        purchases: false,\n      };\n    case \"purchases\":\n      return {\n        home: false,\n        products: false,\n        stock: false,\n        users: false,\n        orders: false,\n        purchases: true,\n      };\n\n    default:\n      return state;\n  }\n};\nfunction SideMenu({ sections }) {\n  const classes = useStyles();\n\n  const [activeRoute, dispatch] = React.useReducer(\n    activeRouteReducer,\n    init_activeRoute\n  );\n\n  let location = useLocation();\n  const activeStyle = { borderRight: \"5px white solid\" };\n  const notActiveStyle = { borderRight: \"0px\" };\n\n  const _isActiveRoute = (path) => {\n    dispatch({ type: path });\n  };\n\n  console.log(\"active========\", activeRoute);\n  return (\n    <Drawer\n      className={classes.drawer}\n      variant=\"permanent\"\n      classes={{\n        paper: classes.drawerPaper,\n      }}\n      anchor=\"left\"\n    >\n      <div\n        style={{\n          display: \"flex\",\n          height: \"80px\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n      >\n        <img src={logo} style={{ height: \"50px\", width: \"auto\" }} />\n      </div>\n      <div className={classes.toolbar} />\n\n      <List style={{ padding: \"10px\" }}>\n\n     \n          <motion.section\n            style={activeRoute.home ? activeStyle : notActiveStyle}\n            whileHover={{ scale: 1.05, originX: 0 }}\n          >\n            <Link\n              to=\"/home/\"\n              style={{ textDecoration: \"none\", color: \"white\" }}\n              onClick={() => _isActiveRoute(\"home\")}\n            >\n              <ListItem button key={lang.products} style={{ padding: \"10px\" }}>\n                <ListItemIcon>\n                  <DashboardIcon className=\"sideBarMenuIcon\" />\n                </ListItemIcon>\n                <ListItemText primary={lang.home} />\n              </ListItem>\n            </Link>\n          </motion.section>\n     \n\n        {useRole(sections, \"product\") && (\n          <motion.section\n            style={activeRoute.products ? activeStyle : notActiveStyle}\n            whileHover={{ scale: 1.05, originX: 0 }}\n          >\n            <Link\n              to=\"/home/products\"\n              style={{ textDecoration: \"none\", color: \"white\" }}\n              onClick={() => _isActiveRoute(\"products\")}\n            >\n              <ListItem button key={lang.products} style={{ padding: \"10px\" }}>\n                <ListItemIcon>\n                  <LocalOfferIcon className=\"sideBarMenuIcon\" />\n                </ListItemIcon>\n                <ListItemText primary={lang.products} />\n              </ListItem>\n            </Link>\n          </motion.section>\n        )}\n\n        {useRole(sections, \"stock\") && (\n          <motion.section\n            style={activeRoute.stock ? activeStyle : notActiveStyle}\n            whileHover={{ scale: 1.05, originX: 0 }}\n          >\n            <Link\n              to=\"/home/stock\"\n              style={{ textDecoration: \"none\", color: \"white\" }}\n              onClick={() => _isActiveRoute(\"stock\")}\n            >\n              <ListItem button key={lang.stock} style={{ padding: \"10px\" }}>\n                <ListItemIcon>\n                  <LocalConvenienceStoreIcon className=\"sideBarMenuIcon\" />\n                </ListItemIcon>\n                <ListItemText primary={lang.stock} />\n              </ListItem>\n            </Link>\n          </motion.section>\n        )}\n        {useRole(sections, \"orders\") && (\n          <motion.section\n            style={activeRoute.orders ? activeStyle : notActiveStyle}\n            whileHover={{ scale: 1.05, originX: 0 }}\n          >\n            <Link\n              to=\"/home/orders\"\n              style={{ textDecoration: \"none\", color: \"white\" }}\n              onClick={() => _isActiveRoute(\"orders\")}\n            >\n              <ListItem button key={lang.orders} style={{ padding: \"10px\" }}>\n                <ListItemIcon>\n                  <ShoppingCartIcon className=\"sideBarMenuIcon\" />\n                </ListItemIcon>\n                <ListItemText primary={lang.orders} />\n              </ListItem>\n            </Link>\n          </motion.section>\n        )}\n        {useRole(sections, \"purchases\") && (\n          <motion.section\n            style={activeRoute.purchases ? activeStyle : notActiveStyle}\n            whileHover={{ scale: 1.05, originX: 0 }}\n          >\n            <Link\n              to=\"/home/purchases\"\n              style={{ textDecoration: \"none\", color: \"white\" }}\n              onClick={() => _isActiveRoute(\"purchases\")}\n            >\n              <ListItem button key={lang.purchases} style={{ padding: \"10px\" }}>\n                <ListItemIcon>\n                  <StoreIcon className=\"sideBarMenuIcon\" />\n                </ListItemIcon>\n                <ListItemText primary={lang.purchases} />\n              </ListItem>\n            </Link>\n          </motion.section>\n        )}\n        {useRole(sections, \"user\") && (\n          <motion.section\n            style={activeRoute.users ? activeStyle : notActiveStyle}\n            whileHover={{ scale: 1.05, originX: 0 }}\n          >\n            <Link\n              to=\"/home/users\"\n              style={{ textDecoration: \"none\", color: \"white\" }}\n              onClick={() => _isActiveRoute(\"users\")}\n            >\n              <ListItem button key={lang.newUsers} style={{ padding: \"10px\" }}>\n                <ListItemIcon>\n                  <SupervisorAccountIcon className=\"sideBarMenuIcon\" />\n                </ListItemIcon>\n                <ListItemText primary={lang.newUsers} />\n              </ListItem>\n            </Link>\n          </motion.section>\n        )}\n      </List>\n      <span\n        style={{\n          position: \"absolute\",\n          bottom: 0,\n          padding: \"20px\",\n          color: \"white\",\n        }}\n      >\n        © MartechLabs\n      </span>\n    </Drawer>\n  );\n}\n\nexport default SideMenu;\n","/Users/Mahmoud/Documents/React/ERP/erp_logistio/src/Components/sideBar/LockRoute.js",["348","349","350","351","352","353"],"import React from 'react'\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link,\n    Redirect,\n    useHistory,\n    useLocation\n  } from \"react-router-dom\";\n\n\n\nconst _check  = async (array,value)=>{\n  let valid = false;\n  array && array.map(obj =>{\n    console.log('OBJ',obj)\n      if(obj.name===value){\n        valid = true\n      }\n\n  })\n  return valid\n}\nfunction LockRoute({children,name,sections,...rest}) {\n    return (\n        <Route\n          {...rest}\n          render={ ({ location }) =>\n            typeof sections ==='object'  &&\n              _check(sections,name)? (\n              children\n            ) : (\n              <Redirect\n                to={{\n                  pathname: _check(sections,name)?location.pathname:'/home',\n                  state: { from: location }\n                }}\n              />\n            )\n            // :\n            // sections==='all'? (\n            //   children\n            // ):\n            // (\n            //   <Redirect\n            //     to={{\n            //       pathname: location.pathname,\n            //       state: { from: location }\n            //     }}\n            //   />\n            // )\n          }\n        />\n      );\n}\n\nexport default LockRoute\n","/Users/Mahmoud/Documents/React/ERP/erp_logistio/src/Pages/Products/ProductsContainer.js",[],"/Users/Mahmoud/Documents/React/ERP/erp_logistio/src/Pages/Users/UsersContainer.js",["354","355","356","357"],"import React from 'react'\nimport useToken from '../../Hooks/useToken'\nimport Users from './Users'\nimport axios  from 'axios'\nimport {uri} from \"../../Url_base\";\nimport {motion} from 'framer-motion'\n\n\nconst initUser = {\n    username:'',\n    email:'',\n    role:{\n        name:'',\n        products:false,\n        stock:false,\n        orders:false,\n        purchases:false\n    }\n}\n\nconst reducer = (state,action)=>{\n    switch (action.type) {\n        case 'username':\n            return { ...state,username:action.value}\n            case 'email':\n                return { ...state,email:action.value}\n                case 'name':\n                    return { ...state,role:{...state.role,name:action.value}}\n                    case 'products':\n                        return { ...state,role:{...state.role,products:action.value}}\n                        case 'stock':\n                            return { ...state,role:{...state.role,stock:action.value}}\n                            case 'orders':\n                                return { ...state,role:{...state.role,orders:action.value}}\n                                case 'purchases':\n                                    return { ...state,role:{...state.role,purchases:action.value}}\n    \n        default:\n            return state\n    }\n}\nfunction UsersContainer() {\n    const contentVariant = {\n        hidden:{\n            scale:0,\n        },\n        visible:{\n            scale:1,\n            transition:{\n                type:'tween',\n                duration:0.4,  \n            }\n        },   \n    }\n    const [toggled, settoggled] = React.useState(false);\n    const [selectedRole, setselectedRole] = React.useState('');\n    const [newRole, setnewRole] = React.useState(false);\n\n    const [user, dispatch] = React.useReducer(reducer, initUser)\n    const [setToken,getToken] = useToken();\n    const [roles, setroles] = React.useState([])\n    const [users, setUsers] = React.useState([])\n\n    const handleToggled = (event)=>{\n        settoggled(event.target.checked)\n    };\n\n    const handleDropDownRoleChange = (event) => {\n        setselectedRole(event.target.value);\n      };\n\n      const resetSelectedRole = ()=>{\n          setselectedRole('')\n      }\n\n\n    //******* MISSING REFETCH ROLES AFTER ADD **********/\n      React.useEffect(() => {\n        console.log('HERE FETCH ROLES')\n        let mounted = true;\n\n    axios.get(`${uri.link}/roles/`,{\n        headers:{'auth-token':`${getToken()}`}\n    })\n       .then(function (response) {\n           if(mounted){\n                console.log(response);\n                setroles(response.data)\n                \n           }\n       })\n       .catch(function (error) {\n           // handle error\n           console.log(error);\n       });\n       return ()=>{\n           mounted=false\n       }\n    }, [])\n\n\n   const  _saveuser = ()=>{\n        let role ;\n        let userToSend ;\n        let sections = [];\n            user?.role.products && sections.push({name:'product',access:['c','r','u','d']})\n            user?.role.stock && sections.push({name:'stock',access:['c','r','u','d']})\n            user?.role.orders && sections.push({name:'orders',access:['c','r','u','d']})\n            user?.role.purchases && sections.push({name:'purchases',access:['c','r','u','d']})\n\n        role={\n                name:user?.role.name,\n                sections:sections\n            }\n\n       if(selectedRole===''){\n        userToSend = {\n            \n                username:user.username,\n                email:user.email,\n                role:role\n            }\n       }\n       else {\n        userToSend = {\n            \n            username:user.username,\n            email:user.email,\n            role:{\n                _id:selectedRole\n            }\n        }\n       }\n        axios.post(`${uri.link}/users/`, userToSend,{\n            headers:{'auth-token':`${getToken()}`}\n        })\n        .then(function (response) {\n            console.log(response);\n        })\n        .catch(function (error) {\n            console.log(error);\n        });\n\n        console.log('to send :::: ',userToSend)\n    }\n\n    React.useEffect(() => {\n        let mounted = true;\n    axios.get(`${uri.link}/users/`,{\n        headers:{'auth-token':`${getToken()}`}\n    })\n       .then(function (response) {\n           if(mounted){\n                console.log('USERS ------------------>',response);\n                let filtred  = response.data.filter(user=>{\n                       return  user.is_deleted === false\n                })\n                setUsers(filtred)\n                \n           }\n       })\n       .catch(function (error) {\n           // handle error\n           console.log(error);\n       });\n       return ()=>{\n           mounted=false\n       }\n    }, [])\n\n    return (\n        <motion.div variants={contentVariant} initial='hidden' animate='visible'>\n            <Users usersList={users} handleToggled={handleToggled} toggled={toggled} handleDropDownRoleChange={handleDropDownRoleChange} selectedRole={selectedRole} roles={roles} isNewRole={newRole} userDispatcher={dispatch} user={user} saveUser = {_saveuser} resetSelectedRole={resetSelectedRole} />\n        </motion.div>\n    )\n}\n\nexport default UsersContainer\n","/Users/Mahmoud/Documents/React/ERP/erp_logistio/src/Hooks/useRole.js",["358","359","360","361"],"import React from 'react'\nimport useGetUser from './useGetUser'\nimport axios from 'axios'\n\nfunction useRole(sections,section='') {\n\n\n    if(typeof sections == 'string'){\n        if(sections==='all')\n            return true\n    }\n    if(sections?.length>0){\n        let valid = false;\n         sections.map(elem=>{\n             console.log('elem',elem.name)\n             console.log('sec',section)\n            if(elem.name===section)\n                valid = true\n            \n    })\n    return valid\n}\n    else\n    return null\n}\n\nexport default useRole\n","/Users/Mahmoud/Documents/React/ERP/erp_logistio/src/Pages/Products/Products.js",["362","363","364","365","366","367","368","369","370","371","372","373","374","375","376","377","378","379","380","381","382"],"import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { Avatar, FormControlLabel, Grid, Select, Switch } from '@material-ui/core';\nimport CustomModal from './CustomModal';\nimport axios from 'axios';\nimport {uri} from \"../../Url_base\";\nimport useToken from '../../Hooks/useToken';\nimport Typography from '@material-ui/core/Typography';\nimport PropTypes from 'prop-types';\nimport Box from '@material-ui/core/Box';\nimport Tab from '@material-ui/core/Tab';\nimport Tabs from '@material-ui/core/Tabs';\nimport AppBar from '@material-ui/core/AppBar';\nimport ProductsTable from './ProductsTable';\nimport ProductCard from '../../Components/Products Card/ProductCard';\nimport EmptyArrayHolder from '../../Components/EmptyArrayHolder';\nimport ProductCardErrorHandler from '../../Error boundry/ProductCardErrorHandler';\nimport SearchIcon from '@material-ui/icons/Search';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormControl from '@material-ui/core/FormControl';\nimport { AnimatePresence } from 'framer-motion';\nimport Loader from '../../Components/Loader';\nconst lngc = window.localStorage.getItem('lang')?window.localStorage.getItem('lang'):'EN';\nconst lang = require(`../../Language/${lngc}.json`)\n\nconst useStyles = makeStyles((theme)=>({\n    table: {\n      minWidth: 650,\n    },\n    large: {\n        width: theme.spacing(7),\n        height: theme.spacing(7),\n      },\n  }));\n\n\n  function TabPanel(props) {\n    const { children, value, index, ...other } = props;\n  \n    return (\n      <div\n        role=\"tabpanel\"\n        hidden={value !== index}\n        id={`scrollable-auto-tabpanel-${index}`}\n        aria-labelledby={`scrollable-auto-tab-${index}`}\n        {...other}\n      >\n        {value === index && (\n          <Box p={3}>\n            <Typography>{children}</Typography>\n          </Box>\n        )}\n      </div>\n    );\n  }\n\n  TabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n  };\n\n  function a11yProps(index) {\n    return {\n      id: `scrollable-auto-tab-${index}`,\n      'aria-controls': `scrollable-auto-tabpanel-${index}`,\n    };\n  }\n\n\nfunction Products({open,handleCloseModal,handleOpenModal}) {\n    const classes = useStyles();\n    const [setToken,getToken] = useToken();\n  const [value, setValue] = React.useState(0);\n  const [products, setproducts] = React.useState([])\n  const [searchValue, setsearchValue] = React.useState('');\n  const [selectValue, setselectValue] = React.useState('');\n  const [isAccepted, setIsAccepted] = React.useState(0);\n  const [loading, setloading] = React.useState(false);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n    setsearchValue('')\n  };\n    React.useEffect(() => {\n        console.log('HERE FETCH PRODS')\n        setloading(true);\n        let mounted = true;\n\n    axios.get(`${uri.link}/products/`,{\n        headers:{'auth-token':`${getToken()}`}\n    })\n       .then(function (response) {\n         setloading(false)\n           if(mounted){\n            console.log('PRODUCTS --->',response)\n    \n            // console.log('PRODUCTS ::: :',response);\n                setproducts(response.data)\n           }\n       })\n       .catch(function (error) {\n           // handle error\n           setloading(false)\n           console.log(error);\n       });\n       return ()=>{\n           mounted=false\n       }\n    }, [])\n\n\n    const fetch_products = ()=>{\n      axios.get(`${uri.link}/products/`,{\n        headers:{'auth-token':`${getToken()}`}\n    })\n       .then(function (response) {\n           \n            console.log('PRODUCTS --->',response)\n    \n            // console.log('PRODUCTS ::: :',response);\n                setproducts(response.data)\n         \n       })\n       .catch(function (error) {\n           // handle error\n           console.log(error);\n       });\n    }\n\n    const rows = [\n        {\n            id:1,\n            img:'https://www.imgworlds.com/wp-content/uploads/2015/11/4-PARKRULES-HEADER.jpg',\n            name:'runner',\n            sku:'run',\n            variants:[1,2],\n            type:'bolk',\n            category:'test',\n            description:'bla bla bla',\n            agent_description:'bla bla bla aaaaa',\n            urls:['https://www.youtube.com/','link2'],\n            moq:10,\n            moqcp:14,\n            variants:[\n                {\n                    option1: \"Pink\",\n                    option2: \"S\",\n                    option3: \"\",\n                    quantity: \"33\",\n                    price: \"34.4\"\n        \n                }\n                ,\n                {\n                    option1: \"Red\",\n                    option2: \"XL\",\n                    option3: \"\",\n                    quantity: \"25\",\n                    price: \"24.4\"\n        \n                }\n            ],\n            accessories:[\n                {\n                    name:'acc1acc1acc1acc1',\n                    attachments:[\n                        'https://logistiomedia.nyc3.digitaloceanspaces.com/logistiomedia/f7c3b8a85d96ed35a3fcec51caa9d07d.png',\n                        'https://logistiomedia.nyc3.digitaloceanspaces.com/logistiomedia/packaging1.ai',\n                        'test.eps',\n                        'test.psd',\n                        'test.ai',\n                        'test.eps',\n                    ],\n                    quantity:12,\n                    description:'testacc1acc1acc1acc1acc1acc1acc1acc1acc1acc1acc1acc1acc1acc1acc1acc1acc1',\n                    price:33.4\n                }\n            ]\n        },\n        {\n          accessories: [],\n          category: {desc: \"Category has x description\", _id: \"5ffdd4a5026f4d989b26237c\", name: \"Category x\"},\n          description: \"Descriptioooon !\",\n          media: [],\n          moq: null,\n          name: null,\n          options: [],\n          price_sample: 105.6,\n          sku: \"sku3\",\n          type: \"standard\",\n          type_shopping: \"ds\",\n          urls: [\"https://ih1.redbubble.net/image.1241782962.6329/throwpillow,small,750x1000-bg,f8f8f8.jpg\"],\n          variants: [],\n          _id: \"5ffdd4a5026f4d989b26237b\",\n        }\n    ]\n\n    const variants = [\n       \n    ]\n\n\n\n    const filter_ = (value) => {\n      let data = [];\n      let res = [];\n\n      data = products.filter((elem) => {\n        return elem.type_shopping == value;\n      });\n\n      if (searchValue.length > 0) {\n        data = data.filter((elem) => {\n          return elem.sku.includes(searchValue);\n        });\n      }\n      if (selectValue.length > 0) {\n        data = data.filter((elem) => {\n          return elem.status == selectValue;\n        });\n      }\n      console.log(\"RESSS ::: ::  \", data);\n      return data;\n    };\n\n    const filter_all = () => {\n      let data = [];\n      if (searchValue.length > 0) {\n        data = products.filter((elem) => {\n          return elem.sku.includes(searchValue);\n        });\n      } else {\n        return products;\n      }\n      console.log(\"RESSS ::: :: ALLL \", data);\n      return data;\n    };\n\n    const filter_by_status_all = ()=>{\n       return  filter_all().filter(elem=>{\n          if(selectValue.length>0){\n            return (elem.status===selectValue && elem.price_control.is_accepted===isAccepted)\n          }\n          else{\n            return elem\n          }\n        })\n    }\n\n    const filter_by_status = (value)=>{\n      return  filter_(value).filter(elem=>{\n         if(selectValue.length>0){\n           return (elem.status===selectValue && elem.price_control.is_accepted===isAccepted)\n         }\n         else{\n           return elem\n         }\n       })\n   }\n\n    const handleChangeSelect = (e) => {\n      setselectValue(e.target.value);\n    };\n\n    const styleWhileLoading = {\n      display:'flex',\n      flexDirection:'column',\n      justifyContent:'center',\n      minHeight:'80vh'\n    }\n    return (\n        <Grid item md={12} style={loading?styleWhileLoading:{marginTop:'10px'}}>\n          {\n            loading && \n              <Loader />\n          }\n                {/* <TableContainer component={Paper}>\n                <Table className={classes.table} aria-label=\"simple table\">\n                <TableHead>\n                    <TableRow>\n                    <TableCell>{lang.product_img}</TableCell>\n                    <TableCell >{lang.product_name}</TableCell>\n                    <TableCell >{lang.sku}</TableCell>\n                    <TableCell >{lang.variants_number}</TableCell>\n                    <TableCell >{lang.type}</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {rows.map((row) => (\n                    <TableRow key={row.name} hover onClick={handleOpenModal}>\n                        <TableCell component=\"th\" scope=\"row\">\n                            <Avatar alt={row.name} src={row.img}  variant=\"square\" className={classes.large} />\n\n                        \n                        </TableCell>\n                        <TableCell>{row.name}</TableCell>\n                        <TableCell >{row.sku}</TableCell>\n                        <TableCell >{row.variants.length}</TableCell>\n                        <TableCell >{row.type}</TableCell>\n                    </TableRow>\n                    ))}\n                </TableBody>\n                </Table>\n            </TableContainer>\n            <CustomModal open={open}  handleClose={handleCloseModal}  product={rows[0]} /> */}\n{\n  !loading && \n<>\n<AppBar position=\"relative\" color=\"white\" style={{borderRadius:'10px'}} >\n        <Tabs\n          value={value}\n          onChange={handleChange}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          variant=\"scrollable\"\n          scrollButtons=\"auto\"\n          aria-label=\"scrollable auto tabs example\"\n        >\n          <Tab label={lang.allProducts} {...a11yProps(0)} />\n          <Tab label={lang.bolk} {...a11yProps(1)} />\n          <Tab label={lang.drop_shipping} {...a11yProps(2)} />\n          \n        </Tabs>\n      </AppBar>\n\n      <TabPanel value={value} index={0}>\n            <section style={{display:'flex',justifyContent:'space-between'}}>\n                <FormControl style={{margin:'10px'}}>\n                                  <InputLabel htmlFor=\"input-with-icon-adornment\" >{lang.search_by_sku}</InputLabel>\n                                  <Input\n                                  onChange={(e)=>setsearchValue(e.target.value)}\n                                  id=\"input-with-icon-adornment\"\n                                  startAdornment={\n                                      <InputAdornment position=\"start\">\n                                      <SearchIcon />\n                                      </InputAdornment>\n                                  }\n                          />\n                          </FormControl>\n                          <FormControl variant=\"standard\" style={{width:'200px'}}>\n                                <InputLabel htmlFor=\"filled-age-native-simple\">{lang.status}</InputLabel>\n                                <Select\n                                  native\n                                  value={selectValue}\n                                  onChange={handleChangeSelect}\n                                >\n                                  <option aria-label=\"None\" value=\"\" />\n                                  <option value={'pending'}>{lang.pending}</option>\n                                  <option value={'processing'}>{lang.processing}</option>\n                                  <option value={'validated'}>{lang.validated}</option>\n                                  <option value={'refused'}>{lang.refused}</option>\n                                 \n                                </Select>\n                            </FormControl>\n              </section>\n              {/* <FormControlLabel\n                    control={\n                      <Switch\n                        checked={isAccepted}\n                        onChange={(e)=>setIsAccepted(e.target.checked?1:0)}\n                        color=\"primary\"\n                      />\n                    }\n                    label={lang.accepted_product}\n                /> */}\n            <Grid item md={12} style={{display:'flex',flexWrap:'wrap',height:'63vh',overflowY:'auto',justifyContent:filter_by_status_all().length>0?'start':'center'}}>\n              {\n                products.length>0?\n\n              //   products.filter((elem)=>{\n              //     if(filter==='all') \n              //     return elem\n              //     else\n              //     return elem.type===filter\n              // })\n              filter_by_status_all().length>0?\n              filter_by_status_all().map(row=>{\n                // if(row.price_control.is_accepted===isAccepted)\n                  return(\n                    <ProductCardErrorHandler>\n                        <ProductCard fetch={fetch_products} row={row} handleOpenModal={handleOpenModal} handleCloseModal={handleCloseModal} open={open} filter='all' products={products} />\n                    </ProductCardErrorHandler>)\n                    //  else\n                    //  return               <div style={{width:'100%',height:'200px'}}><EmptyArrayHolder text={lang.no_accepted_products}/></div>\n                })\n                : \n                <EmptyArrayHolder text={lang.no_products}/>\n                :\n                <EmptyArrayHolder text={lang.no_products}/>\n\n              }\n              {/* <ProductCard row={rows[0]} handleOpenModal={handleOpenModal} handleCloseModal={handleCloseModal} open={open} filter='all' /> */}\n                {/* <ProductsTable rows={rows}  handleOpenModal={handleOpenModal} handleCloseModal={handleCloseModal} open={open} filter='all'/> */}\n            </Grid>\n      </TabPanel>\n\n      <TabPanel value={value} index={1}>\n      <section style={{display:'flex',justifyContent:'space-between'}}>\n                <FormControl style={{margin:'10px'}}>\n                                  <InputLabel htmlFor=\"input-with-icon-adornment\" >{lang.search_by_sku}</InputLabel>\n                                  <Input\n                                  onChange={(e)=>setsearchValue(e.target.value)}\n                                  id=\"input-with-icon-adornment\"\n                                  startAdornment={\n                                      <InputAdornment position=\"start\">\n                                      <SearchIcon />\n                                      </InputAdornment>\n                                  }\n                          />\n                          </FormControl>\n                          <FormControl variant=\"standard\" style={{width:'200px'}}>\n                                <InputLabel htmlFor=\"filled-age-native-simple\">{lang.status}</InputLabel>\n                                <Select\n                                  native\n                                  value={selectValue}\n                                  onChange={handleChangeSelect}\n                                >\n                                  <option aria-label=\"None\" value=\"\" />\n\n                                  <option value={'pending'}>{lang.pending}</option>\n                                  <option value={'processing'}>{lang.processing}</option>\n                                  <option value={'validated'}>{lang.validated}</option>\n                                  <option value={'refused'}>{lang.refused}</option>\n                                 \n                                </Select>\n                            </FormControl>\n              </section>\n              {/* <FormControlLabel\n                    control={\n                      <Switch\n                        checked={isAccepted}\n                        onChange={(e)=>setIsAccepted(e.target.checked?1:0)}\n                        color=\"primary\"\n                      />\n                    }\n                    label={lang.accepted_product}\n                /> */}\n          <Grid item md={12} style={{display:'flex',flexWrap:'wrap',height:'63vh',overflowY:'auto',justifyContent:filter_by_status('bulk').length>0?'start':'center'}}>\n                {/* <ProductsTable rows={rows}  handleOpenModal={handleOpenModal} handleCloseModal={handleCloseModal} open={open} filter='bolk'/> */}\n                {\n                products.length>0?\n                  \n                filter_by_status('bulk').length>0?\n\n                filter_by_status('bulk').map(row=>{\n\n                  // if(row.price_control.is_accepted===isAccepted)\n                return(\n                        <ProductCardErrorHandler>\n                            <ProductCard fetch={fetch_products} row={row} handleOpenModal={handleOpenModal} handleCloseModal={handleCloseModal} open={open}  products={products} />\n                        </ProductCardErrorHandler>\n\n                  )\n                  // else\n                  // return               <div style={{width:'100%',height:'200px'}}><EmptyArrayHolder text={lang.no_accepted_products}/></div>\n\n              })\n              :\n              <EmptyArrayHolder text={lang.no_products}/>\n              :\n              <EmptyArrayHolder text={lang.no_products}/>\n\n\n                }\n            </Grid>\n      </TabPanel>\n\n      <TabPanel value={value} index={2}>\n      <section style={{display:'flex',justifyContent:'space-between'}}>\n                <FormControl style={{margin:'10px'}}>\n                                  <InputLabel htmlFor=\"input-with-icon-adornment\" >{lang.search_by_sku}</InputLabel>\n                                  <Input\n                                  onChange={(e)=>setsearchValue(e.target.value)}\n                                  id=\"input-with-icon-adornment\"\n                                  startAdornment={\n                                      <InputAdornment position=\"start\">\n                                      <SearchIcon />\n                                      </InputAdornment>\n                                  }\n                          />\n                          </FormControl>\n                          <FormControl variant=\"standard\" style={{width:'200px'}}>\n                                <InputLabel htmlFor=\"filled-age-native-simple\">{lang.status}</InputLabel>\n                                <Select\n                                  native\n                                  value={selectValue}\n                                  onChange={handleChangeSelect}\n                                >\n                                  <option aria-label=\"None\" value=\"\" />\n\n                                  <option value={'pending'}>{lang.pending}</option>\n                                  <option value={'processing'}>{lang.processing}</option>\n                                  <option value={'validated'}>{lang.validated}</option>\n                                  <option value={'refused'}>{lang.refused}</option>\n                                 \n                                </Select>\n                            </FormControl>\n              </section>\n              {/* <FormControlLabel\n                    control={\n                      <Switch\n                        checked={isAccepted}\n                        onChange={(e)=>setIsAccepted(e.target.checked?1:0)}\n                        color=\"primary\"\n                      />\n                    }\n                    label={lang.accepted_product}\n                /> */}\n                <Grid item md={12} style={{display:'flex',flexWrap:'wrap',height:'63vh',overflowY:'auto',justifyContent:filter_by_status('ds').length>0?'start':'center'}}>\n                {/* <ProductsTable rows={rows}  handleOpenModal={handleOpenModal} handleCloseModal={handleCloseModal} open={open} filter='drop_ship'/> */}\n                {\n                products.length>0?\n                  \n                filter_by_status('ds').length>0?\n\n                filter_by_status('ds').map(row=>{\n                  // if(row.price_control.is_accepted===isAccepted)\n                return(\n                        <ProductCardErrorHandler>\n                            <ProductCard fetch={fetch_products} row={row} handleOpenModal={handleOpenModal} handleCloseModal={handleCloseModal} open={open}  products={products} />\n                        </ProductCardErrorHandler>\n                  )\n                  // else\n                  // return               <div style={{width:'100%',height:'200px'}}><EmptyArrayHolder text={lang.no_accepted_products}/></div>\n              })\n              :\n              <EmptyArrayHolder text={lang.no_products}/>\n              :\n              <EmptyArrayHolder text={lang.no_products}/>\n\n\n                }\n            </Grid>\n      </TabPanel>\n\n      <TabPanel value={value} index={3}>\n            <Grid item md={12} style={{background:'rgb(243,245,247)',padding:'15px',borderRadius:'15px'}}>\n                <ProductsTable rows={rows}  handleOpenModal={handleOpenModal} handleCloseModal={handleCloseModal} open={open} filter='all'/>\n            </Grid>\n      </TabPanel>\n      </>\n    }\n      </Grid>\n    )\n}\n\nexport default Products\n","/Users/Mahmoud/Documents/React/ERP/erp_logistio/src/Pages/Users/Users.js",["383","384"],"import { Container, Grid, Paper, TextField,Switch, FormControlLabel, FormHelperText, Checkbox, Button, TableContainer, Table, TableHead, TableRow, TableCell, TableBody } from '@material-ui/core'\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport React from 'react'\nimport SectionsTableContainer from '../../Components/Sections array/SectionsTableContainer';\nimport InfoIcon from '@material-ui/icons/Info';\nimport {motion} from 'framer-motion'\nimport UserListRow from '../../Components/user/UserListRow';\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n      margin: theme.spacing(1),\n      width: 250,\n    },\n    selectEmpty: {\n      marginTop: theme.spacing(2),\n    },\n  }));\n\nconst lngc = window.localStorage.getItem(\"lang\")\n  ? window.localStorage.getItem(\"lang\")\n  : \"EN\";\nconst lang = require(`../../Language/${lngc}.json`);\n\n\nfunction Users({usersList,toggled,handleToggled,handleDropDownRoleChange,roles,selectedRole,isNewRole,userDispatcher,user,saveUser,resetSelectedRole}) {\n    const textFStyle = {\n        marginBottom:'7px'\n    }\n    const classes = useStyles();\n\n\n    const [isNew, setisNew] = React.useState(false)\n    \n    const user_list_header = {\n        fontWeight: 'bold',\n        color:'#303030',\n        opacity:'90%'\n    }\n\n    const handle_newRole = (e) =>{\n      setisNew(e.target.checked);\n      resetSelectedRole()\n    }\n\n    // let usersList  = [\n    //   {\n    //     username:'username 1',\n    //     email:'username1@gmail.com'\n    //   },\n    //   {\n    //     username:'username 2',\n    //     email:'username2@gmail.com'\n    //   },\n    //   {\n    //     username:'username 3',\n    //     email:'username3@gmail.com'\n    //   }\n    // ]\n    return (\n        <Container maxWidth=\"lg\" style={{display:'flex',flexDirection:'column',overflowY:'auto',height:'86vh'}} >\n\n            <Paper elevation={3} style={{marginTop:'35px',marginBottom:'30px',background:'rgb(243,245,247',borderRadius:'15px',padding:'10px'}}>\n                 <span style={{color:'#303030',fontWeight:'bold',opacity:'80%',fontSize:'18px',padding:'10px 0 0 7px'}}>{lang.userslist}</span>\n\n                <Grid item md={12} style={{ padding:'10px',height:'300px',overflowY:'auto'}}>\n                      <TableContainer  component={Paper}>\n                        <Table className={classes.table} aria-label=\"simple table\">\n                        <TableHead >\n                            <TableRow>\n                                <TableCell align='center' style={user_list_header} >{lang.userName}</TableCell>\n                                <TableCell align='center' style={user_list_header} >{lang.email}</TableCell>\n                                <TableCell align='center' style={user_list_header} >{lang.status}</TableCell>\n                                <TableCell align='left' ></TableCell>\n\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {usersList.map((row,index) => (\n                                <UserListRow user={row} key={row} />\n                            ))}\n                        </TableBody>\n                        </Table>\n                    </TableContainer>\n                </Grid>\n            </Paper>\n\n            <Grid item md = {12} style={{background:'rgb(243,245,247)',padding:'15px',borderRadius:'15px'}}> \n                              <span style={{color:'#303030',fontWeight:'bold',opacity:'80%',fontSize:'18px'}}>{lang.userForm}</span>\n            <Paper elevation={3} style={{marginTop:'35px',marginBottom:'30px',background:'white',borderRadius:'15px',padding:'10px'}}>\n                <Grid item md={12} style={{ padding:'10px'}}>\n                    <span style={{color:'#303030',fontWeight:'bold',opacity:'60%'}}>{lang.addUser} </span>\n                    <Grid item md={8} style={{display:'flex',flexDirection:'column',padding:'15px'}}>\n                        <TextField  style={textFStyle} id=\"standard-basic1\" label={lang.userName} onChange={(e)=>userDispatcher({type:'username',value:e.target.value})} />\n                        <TextField   id=\"standard-basic2\" label={lang.email}  onChange={(e)=>userDispatcher({type:'email',value:e.target.value})} />\n                        <section style={{marginTop:'20px',marginLeft:'10px',display:'flex',alignItems:'center'}}>\n                            <InfoIcon fontSize='small' color=\"disabled\" />\n                            <span style={{color:'#303030',opacity:'40%',fontWeight:'bold',fontSize:'12px',marginLeft:'5px'}}>{lang.passwordGenerationHint}</span>\n                        </section>\n                    </Grid>\n\n                </Grid>\n            </Paper>\n            \n          {/* <FormControlLabel style={{color:'#303030'}}\n        control={\n            <Switch\n            checked={toggled}\n            onChange={handleToggled}\n            name=\"toggle\"\n            color=\"primary\"\n      />\n        }\n        label={lang.subRole}\n      /> */}\n\n            <Paper elevation={3} style={{marginTop:'10px',background:'white',borderRadius:'15px',padding:'10px'}}>\n\n\n            {\n\n                toggled?\n                 <Grid item md={12} style={{ padding:'10px'}}>\n                    <span style={{color:'#303030',fontWeight:'bold',opacity:'60%'}}>{lang.allowedSections} </span>\n                    <Grid item md={12} style={{display:'flex',flexDirection:'column',padding:'15px'}}>\n                     \n                      <SectionsTableContainer />\n\n                      \n                    </Grid>\n\n                </Grid>\n                :\n                <Grid item md={12} style={{ padding:'10px'}}>\n                  <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={isNew}\n                          onChange={(e)=>{handle_newRole(e)}}\n                          name=\"checkedB\"\n                          color=\"primary\"\n                        />\n                      }\n                      label={lang.new_role}\n                    />\n                    {\n                      !isNew?\n                      <Grid item md={12}>\n                      <Grid item md={8} style={{display:'flex',flexDirection:'column',padding:'15px'}}>\n                      <span style={{color:'#303030',fontWeight:'bold',opacity:'60%'}}>{lang.roleSelect} </span>\n\n                          <FormControl className={classes.formControl}>\n                                  <InputLabel id=\"demo-simple-select-label\">{lang.roles}</InputLabel>\n                                  <Select\n                                  labelId=\"demo-simple-select-label\"\n                                  id=\"demo-simple-select\"\n                                  value={selectedRole}\n                                  onChange={handleDropDownRoleChange}\n                                  >\n                                    {\n                                      roles.map(elem=>{\n                                        return <MenuItem value={elem._id}>{elem.name}</MenuItem>\n                                      })\n                                    }\n                                  \n                                  </Select>\n                                  <FormHelperText>{lang.roleSelectHint}</FormHelperText>\n  \n                          </FormControl>\n                      </Grid>\n                      </Grid>\n                      :\n\n                      <Grid item md={8} style={{display:'flex',flexDirection:'column',padding:'15px'}}>\n                      <TextField size='small' style={textFStyle} id=\"standard-basic1\" label={lang.roleName} onChange={(e)=>userDispatcher({type:'name',value:e.target.value})} />\n                      <section>\n                               <FormControlLabel key={1}\n                                   control={\n                                     <Checkbox\n                                       checked={user?.role?.products}\n                                       onChange={(e)=>userDispatcher({type:'products',value:e.target.checked})}\n                                       name=\"checkedp\"\n                                       color=\"primary\"\n                                     />\n                                   }\n                                   label={lang.productsSection}\n                                 />\n \n                                 <FormControlLabel key={2}\n                                   control={\n                                     <Checkbox\n                                       checked={user?.role?.stock}\n                                       onChange={(e)=>userDispatcher({type:'stock',value:e.target.checked})}\n                                       name=\"checkeds\"\n                                       color=\"primary\"\n                                     />\n                                   }\n                                   label={lang.stockSection}\n                                 />\n \n                                 <FormControlLabel key={3}\n                                   control={\n                                     <Checkbox\n                                       checked={user?.role?.orders}\n                                       onChange={(e)=>userDispatcher({type:'orders',value:e.target.checked})}\n                                       name=\"checkedo\"\n                                       color=\"primary\"\n                                     />\n                                   }\n                                   label={lang.ordersSection}\n                                 />\n \n                                 <FormControlLabel key={4}\n                                   control={\n                                     <Checkbox\n                                       checked={user?.role?.purchases}\n                                       onChange={(e)=>userDispatcher({type:'purchases',value:e.target.checked})}\n                                       name=\"checkedp\"\n                                       color=\"primary\"\n                                     />\n                                   }\n                                   label={lang.purchasesSection}\n                                 />\n                     </section>\n                     \n                   </Grid>\n                   \n                    }\n                  \n               \n                \n                   \n               </Grid>\n            }\n            </Paper>\n            \n            <Grid md={12} style={{display:'flex',justifyContent:'center'}}>\n            <motion.Button whileHover={{scale:1.1,\n                                \n                              }} disableElevation style={{width:'50%',alignSelf:'center',margin:'15px',background:'rgb(120,135,235)',border:'0px',height:'30px',borderRadius:'5px',color:'white',cursor:'pointer',fontWeight:'bold'}} onClick={saveUser}>\n              {lang.saveUser}\n            </motion.Button>\n            \n            </Grid>\n            </Grid>\n        </Container>\n\n    )\n}\n\nexport default Users\n","/Users/Mahmoud/Documents/React/ERP/erp_logistio/src/Components/Sections array/SectionsTableContainer.js",[],"/Users/Mahmoud/Documents/React/ERP/erp_logistio/src/Components/EmptyArrayHolder.js",[],"/Users/Mahmoud/Documents/React/ERP/erp_logistio/src/Pages/Products/ProductsTable.js",["385"],"import React from 'react'\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { Avatar, Grid } from '@material-ui/core';\nimport CustomModal from './CustomModal';\nimport { makeStyles } from '@material-ui/core/styles';\nimport SearchIcon from '@material-ui/icons/Search';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormControl from '@material-ui/core/FormControl';\nimport EmptyArrayHolder from '../../Components/EmptyArrayHolder';\nconst lngc = window.localStorage.getItem('lang')?window.localStorage.getItem('lang'):'EN';\nconst lang = require(`../../Language/${lngc}.json`)\n\nconst useStyles = makeStyles((theme)=>({\n    table: {\n      minWidth: 650,\n    },\n    large: {\n        width: theme.spacing(7),\n        height: theme.spacing(7),\n      },\n  }));\nfunction ProductsTable({rows,open,handleOpenModal,handleCloseModal,filter}) {\n    const classes = useStyles();\n    const [searchValue, setsearchValue] = React.useState('');\n\n\n\n\n    \n    let data = [];\n         data= rows.filter((elem)=>{\n            if(filter==='all') \n            return elem\n            else\n            return elem.type===filter\n        })\n    \n        const filter_ =(value)=>{\n            let filtred = data;\n            \n            if(searchValue?.length>0){\n                filtred = data.filter(elem=>{\n                    return elem.sku.includes(searchValue)\n            })}\n            else {\n                filtred = data        \n            }\n            return filtred\n        }\n    return (\n        <>\n        {\n            data.length>0?\n            <>\n          \n                    <FormControl style={{margin:'10px'}}>\n                        <InputLabel htmlFor=\"input-with-icon-adornment\" >{lang.search_by_sku}</InputLabel>\n                        <Input\n                        onChange={(e)=>setsearchValue(e.target.value)}\n                        id=\"input-with-icon-adornment\"\n                        startAdornment={\n                            <InputAdornment position=\"start\">\n                            <SearchIcon />\n                            </InputAdornment>\n                        }\n                />\n                </FormControl>\n             \n        <TableContainer component={Paper}>\n                <Table className={classes.table} aria-label=\"simple table\">\n                <TableHead>\n                    <TableRow>\n                    <TableCell>{lang.product_img}</TableCell>\n                    <TableCell >{lang.product_name}</TableCell>\n                    <TableCell >{lang.sku}</TableCell>\n                    <TableCell >{lang.variants_number}</TableCell>\n                    <TableCell >{lang.type}</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {filter_().map((row) => (\n                    <TableRow key={row.name} hover onClick={handleOpenModal}>\n                        <TableCell component=\"th\" scope=\"row\">\n                            <Avatar alt={row.name} src={row.img}  variant=\"square\" className={classes.large} />\n\n                        \n                        </TableCell>\n                        <TableCell>{row.name}</TableCell>\n                        <TableCell >{row.sku}</TableCell>\n                        <TableCell >{row.variants.length}</TableCell>\n                        <TableCell >{row.type}</TableCell>\n                    </TableRow>\n                    ))}\n                </TableBody>\n                </Table>\n            </TableContainer>\n            <CustomModal open={open}  handleClose={handleCloseModal}  product={rows[0]} />\n            </>\n            :\n            <EmptyArrayHolder text={lang.no_products} />\n        }\n         \n            </>\n    )\n}\n\nexport default ProductsTable\n","/Users/Mahmoud/Documents/React/ERP/erp_logistio/src/Pages/Products/CustomModal.js",["386","387","388","389","390"],"import { Avatar, Button, CircularProgress, Grid, Modal, Paper } from '@material-ui/core'\nimport React from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport UrlsTable from '../../Components/UrlsTable';\nimport CustomSpan from '../../Components/CustomSpan';\nimport VariantsTable from '../../Components/VariantsTable';\nimport AccessoriesTable from '../../Components/AccessoriesTable';\nimport EmailModal from '../../Components/EmailModal';\nimport imgP from '../../Assets/img/productPlaceHolder.png';\nimport {uri} from \"../../Url_base\";\nimport axios from 'axios';\nimport useToken from '../../Hooks/useToken';\nimport Swal from 'sweetalert2'\nimport Loader from '../../Components/Loader';\nimport CustomSnackbar from '../../Components/CustomSnackBar';\nimport {motion} from 'framer-motion'\nconst lngc = window.localStorage.getItem('lang')?window.localStorage.getItem('lang'):'EN';\nconst lang = require(`../../Language/${lngc}.json`);\n\n\n\n\n\nconst useStyles = makeStyles((theme)=>({\n  table: {\n    minWidth: 650,\n  },\n  large: {\n      width: theme.spacing(20),\n      height: theme.spacing(20),\n      marginRight:'20px'\n\n    },\n    small: {\n      width: theme.spacing(8),\n      height: theme.spacing(8),\n      marginRight:'20px',\n      marginTop:'8px'\n    },\n    hover: {\n      width: theme.spacing(28),\n      height: theme.spacing(28),\n      marginRight:'20px',\n      marginTop:'8px'\n    },\n}));\n\nconst reducer = (state,action)=>{\n  switch (action.type) {\n    case 'moq':\n        return {...state,moq:action.value}\n        case 'moqcp':\n          return {...state,moqcp:action.value}\n          case 'agentDesc':\n            return {...state,agentDesc:action.value}\n            case 'samplePrice':\n             return {...state,price_sample:action.value}\n             case 'media':\n              return {...state,media:action.value}\n     \n  \n    default:\n      return state\n      break;\n  }\n}\n\nconst getBgColor = (status)=>{\n  switch (status) {\n      // case 'pending':\n      //     return 'rgb(255,243,207)'\n          case true:\n              return 'rgb(223,240,216)'\n              case false:\n                  return 'rgb(242,222,222)'\n  \n      default:\n        return 'rgb(243,245,247)' \n      }\n}\nconst getColor = (status)=>{\n  switch (status) {\n      // case 'pending':\n      //     return 'rgb(255,243,207)'\n          case true:\n              return 'rgb(103,153,122)'\n              case false:\n                  return 'rgb(170,72,71)'\n  \n      default:\n        return 'black' \n\n  }\n}\n\nfunction CustomModal({open,handleOpen,handleClose,product,fetch,img,imgs}) {\n\n\n\n  const img_display = {\n    display:{\n      opacity:1,\n    },\n    hidden:{\n      opacity:0,\n  },\n    transition:{\n      duration:0.3,\n    }\n}\n\n  const classes = useStyles();\n  const [setToken,getToken] = useToken();\n  const [displayImg, setDisplayImg] = React.useState({\n    isHovred:false,\n    link:''\n  });\n\n  const handleImageDisplay = (link)=>{\n      setDisplayImg({\n        isHovred:true,\n        link:link\n      })\n  }\n\n  const removeImageDisplay = (link)=>{\n    setDisplayImg({\n      isHovred:false,\n      link:''\n    })\n}\n\n  const initProduct = {\n    moq:product.moq,\n    moqcp:product.moqcp,\n    price_sample:product.price_sample,\n    agentDesc:product.agent_description,\n    media:product.media\n  }\n\n  const [emailModal, setemailModal] = React.useState(false);\n\n  const [loading, setloading] = React.useState(false)\n  const [productsInputs, dispatch] = React.useReducer(reducer, initProduct);\n  const [status, setStatus] = React.useState('');\n\n  const lableSpan = {\n    color:'#303030',\n    opacity:'70%',\n    fontWeight:'bold'\n  }\n\n  const valueSpan = {\n    color:'#303030',\n  }\n\n  const handleCloseEmailModal = ()=>{\n    setemailModal(false)\n  }\n\n  const handleOpeneEmailModal = ()=>{\n    setemailModal(true)\n  }\n\n\n  const _updateProd = ()=>{\n    setloading(true)\n    axios.patch(`${uri.link}/products/${product._id}`,productsInputs,{\n      headers:{'auth-token':`${getToken()}`}\n    }).then( (response)=> {\n          setloading(false);\n          fetch();\n          setStatus(200)\n          // <CustomSnackbar type='success' content='Product updated !' />\n        })\n        .catch(error =>{\n          setloading(false);\n          // <CustomSnackbar type='error' content='Ops, order update failed!' />\n\n          handleClose();\n          Swal.fire({\n            title: 'Ops, an Error!',\n            text: \"An error appear while updating\",\n            icon: 'error',\n            confirmButtonText: 'OK',\n            backdrop: `\n                rgba(0,0,123,0.4)\n                url(\"/images/nyan-cat.gif\")\n                left top\n                no-repeat\n              `\n          })\n        })\n   \n  }\n\n\n  console.log('IMAGES LISTTTT',imgs())\n\n  const get_status = ()=>{\n        switch (product.status) {\n            case 'pending':\n              return `${lang.pending} ⚠️ `;\n            case 'processing':\n              return `${lang.processing}🕓` ;\n            case 'validated':\n              return `${lang.validated} ✅`;\n            case 'refused':\n              return `${lang.refused}😱`;\n            default: return '-'\n        }\n  }\n\n  return (\n    <Modal\n      open={open}\n      onClose={handleClose}\n      style={{display:'flex',justifyContent:'center',alignItems:'center'}}\n    >\n    \n          <Grid item md={10} >\n            {\n              status===200?\n                <CustomSnackbar type='success' content='Product updated !' />\n              :\n              null\n            }\n           <Paper elevation={3} style={{display:'flex', padding:'20px',overflowY:'auto',height:'650px',background:'white'}}>\n             <Grid item md={12} style={{display:'flex',flexDirection:'column'}}>\n                \n                {/* here display image while hovred */}\n                {\n                  displayImg.isHovred  && \n                <motion.div variants={img_display} initial='hidden' animate='display' style={{alignSelf:'center',marginTop:'150px',position:'absolute',zIndex:'999999999',justifyContent:'center'}}>\n                  <Avatar  alt={product.name} src={displayImg.link}  variant=\"square\" className={classes.hover} />\n                </motion.div>\n                }\n\n\n             <span style={{color:getColor(product.price_control.is_accepted),fontSize:'14px',padding:'7px',background:getBgColor(product.price_control.is_accepted),borderRadius:'10px', marginTop:'10px',marginBottom:'10px',fontWeight:'bold',width:'300px',}}>\n               {get_status()}\n               \n             </span>\n\n               <section style={{background:'rgb(243,245,247)',borderRadius:'15px',padding:'10px',marginBottom:'20px',display:'flex',flexDirection:'row'}}>\n\n                <div>\n                  <Avatar  alt={product.name} src={img()?img():imgP}  variant=\"square\" className={classes.large} />\n                  <div style={{display:'flex',width:'160px',overflowX:'auto'}}>\n                  {\n                    imgs().map(img=>{\n                      return <Avatar  style={{cursor:'pointer'}}onMouseEnter={()=>handleImageDisplay(img)} onMouseLeave={()=>removeImageDisplay()} alt={product.name} src={img?img:imgP}  variant=\"square\" className={classes.small} />\n\n                    })\n                  }\n                  </div>\n\n                  </div>\n                  <div style={{width:'100%'}}>\n                <Grid item md={12}>\n                    <section style={{display:'flex',justifyContent:'space-between',flexDirection:'row',width:'58%'}}>\n                      <CustomSpan label={`${lang.product_name} :`} value={product.name} />\n                   \n                      <CustomSpan label={`${lang.type} :`} value={product.type_shopping} />\n                      <Button variant=\"contained\" size='small' style={{background:'#939BA4',color:\"white\",fontWeight:'bold',fontSize:'12px'}} onClick={handleOpeneEmailModal} >{lang.send_mail}</Button>\n\n                    </section>\n                </Grid>\n\n              \n                  <CustomSpan label={`${lang.sku} :`} value={product.sku} /> \n          \n                <CustomSpan label={`${lang.category} :`} value={product.category.name} />\n\n                <CustomSpan label={`${lang.minim_q} :`} value={productsInputs.moq} input type='moq' handler={dispatch} disabled={product.type!=='standard'?false:true}  />\n\n                <CustomSpan label={`${lang.minim_p_q} :`} value={productsInputs.moqcp} type='moqcp' input handler={dispatch} />\n\n                <CustomSpan label={`${lang.sample} :`} value={productsInputs.price_sample} type='samplePrice' input handler={dispatch} />\n\n                <CustomSpan label={`${lang.description} :`} value={product.description?product.description:''} textArea  disabled />\n\n                <CustomSpan label={`${lang.video_upload} :`} value={''}  media type='media' handler={dispatch} />\n\n                <CustomSpan label={`${lang.agent_desc} :`} value={product.agentDesc?product.agentDesc:''} textArea type='agentDesc' handler={dispatch} />\n                {\n                    loading?\n                      <Loader />\n                    :\n                    <Button variant='contained'  style={{background:'black',color:'white',fontWeight:'bold',zIndex:999999999,float:'right',width:'200px'}} onClick={_updateProd}>Update product</Button>\n\n                }\n\n                </div>\n                \n                </section>\n                <section style={{background:'rgb(243,245,247)',borderRadius:'15px',padding:'10px',marginBottom:'20px'}}>\n                <CustomSpan label={`${lang.urls_table} :`} />\n                <UrlsTable urls_array={product.urls?product.urls:[]} />\n              </section>\n\n              <section style={{background:'rgb(243,245,247)',borderRadius:'15px',padding:'10px',marginBottom:'20px'}}>\n                <CustomSpan label={`${lang.variants_table} :`} />\n                <VariantsTable variants={product.variants?product.variants:[]} options={product.options?product.options:[]} productId={product?._id} fetch={fetch} />\n              </section>\n\n              <section style={{background:'rgb(243,245,247)',borderRadius:'15px',padding:'10px',marginBottom:'20px'}}>\n              \n                <CustomSpan label={`${lang.accessories_table} :`}  />\n                <AccessoriesTable accessories={product.accessories?product.accessories:[]} productId={product?._id}  fetch={fetch}/>\n              </section>\n            </Grid>\n           \n           </Paper>\n           <EmailModal open={emailModal} handleClose={handleCloseEmailModal} />\n          </Grid>\n   \n  </Modal>\n  )\n}\n\nexport default CustomModal\n","/Users/Mahmoud/Documents/React/ERP/erp_logistio/src/Error boundry/ProductCardErrorHandler.js",["391","392"],"import { Avatar, Grid } from '@material-ui/core'\nimport React, { Component } from 'react'\n import erroImg from '../Assets/img/error.gif'\n import { makeStyles } from '@material-ui/core/styles';\n import { motion } from \"framer-motion\"\n const lngc = window.localStorage.getItem('lang')?window.localStorage.getItem('lang'):'EN';\n const lang = require(`../Language/${lngc}.json`)\nexport default class ProductCardErrorHandler extends Component {\n\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n            hasError:false\n        }\n    }\n    \n    static getDerivedStateFromError(error){\n        return {\n            hasError:true\n        }\n    }\n    render() {\n       if(this.state.hasError){\n           return <motion.Grid animate={{scale:1}} initial={{scale:0}} style={{height:'258px',width:'230px',display:'flex',flexDirection:'column-reverse',justifyContent:'center',alignItems:'center',border:'2px solid rgb(243,245,247)',borderRadius:'15px',marginTop:'10px',}}>\n                        <span style={{fontWeight:'bold',color:'#303030'}}>{lang.product_error} 😱</span>\n                        <Avatar alt={'haha'} src={erroImg}  variant='circle'  style={{width:'200px',height:'200px'}} />\n\n                    </motion.Grid>\n       }\n       \n           return this.props.children\n       \n    }\n}\n","/Users/Mahmoud/Documents/React/ERP/erp_logistio/src/Components/Products Card/ProductCard.js",["393","394","395","396","397"],"import { Grid } from '@material-ui/core'\nimport React from 'react'\nimport { Avatar } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CustomModal from '../../Pages/Products/CustomModal';\nimport { motion } from \"framer-motion\"\nimport axios from 'axios'\nimport {uri} from '../../Url_base'\nimport Swal from 'sweetalert2'\nimport useToken from '../../Hooks/useToken';\nimport Flag from './Flag';\nimport productPlaceHolder from '../../Assets/img/productPlaceHolder.png'\nconst lngc = window.localStorage.getItem('lang')?window.localStorage.getItem('lang'):'EN';\nconst lang = require(`../../Language/${lngc}.json`)\n\nconst useStyles = makeStyles((theme)=>({\n    table: {\n      minWidth: 650,\n    },\n    large: {\n        width: theme.spacing(15),\n        height: theme.spacing(15),\n      },\n  }));\n\nfunction ProductCard({rows,filter,row,products,fetch}) {\n\n\n    const cardVariant = {\n        display:{scale:1},\n        hidden:{scale:0},\n        exit:{\n            scale:0\n        }\n    }\n    const [setToken,getToken] = useToken();\n\n \n        Object.keys(row).map(key=>{\n             if(typeof row[key] == 'undefined'){\n                throw new Error(' SOME OBJECT KEYS ARE NULL  OR UNDEFINED')\n                }\n        })\n    \n    const classes = useStyles();\n    const [mouseIn, setMouseIn] = React.useState(false)\n    const style={\n        filter: !mouseIn?'drop-shadow(-10px 5px 3px rgba(36, 35, 35,0.3))':'drop-shadow(0 0 0.75rem rgba(36, 35, 35,0.3)',\n        marginBottom:'7px',\n        transition: '1s'\n    }\n\n\n    const [open, setOpen] = React.useState(false);\n\n        const handleOpenModal = () => {\n            _updateStatus();\n            setOpen(true);\n        };\n\n        const handleCloseModal = () => {\n            setOpen(false);\n        };\n\n\n        const _updateStatus = ()=>{\n            if(row.status==='pending' && row.price_control.is_accepted===1){\n            axios.patch(`${uri.link}/products/${row._id}`,{\n                status:'processing'\n            },{\n              headers:{'auth-token':`${getToken()}`}\n            }).then( (response)=> {\n                //   setloading(false);\n                   fetch();\n                })\n                .catch(error =>{\n                //   setloading(false);\n                  Swal.fire({\n                    title: 'Ops, an Error!',\n                    text: \"An error appear while updating\",\n                    icon: 'error',\n                    confirmButtonText: 'OK',\n                    backdrop: `\n                        rgba(0,0,123,0.4)\n                        url(\"/images/nyan-cat.gif\")\n                        left top\n                        no-repeat\n                      `\n                  })\n                })\n           \n          }\n        }\n\n        const getImage_ = ()=>{\n            let img=  row?.media.map(file=>{\n                 if(file.type==='image')\n                 return file.link\n                 else\n                 return productPlaceHolder\n         \n             })\n             return img[0]\n           };\n           const getImages_ = ()=>{\n               let res = [];\n                 row?.media.map(file=>{\n                 if(file.type==='image')\n                 res.push(file.link)\n                 else\n                 res.push(productPlaceHolder)\n             })\n             return res\n           }\n    return (\n     <>\n       <motion.Grid variants={cardVariant} animate='display' initial='hidden'  item sm={12} style={{\n            marginRight:'10px',\n            marginTop:'10px',\n            background:'rgb(243,245,247)',\n            padding:'6px',\n            borderRadius:'15px',\n            height:'245px',\n            width:'250px', // add to the sacle animation stay fix ( remoed md props )\n            display:'flex',\n            justifyContent:'space-around',\n            cursor:'pointer',\n\n       flexDirection:'column'}}  onMouseEnter={()=>setMouseIn(true)} onMouseLeave={()=>setMouseIn(false)} onClick={handleOpenModal} >\n            <Flag  status={row.status}/>\n            <section style={{display:'flex',flexDirection:'column',alignItems:'center',justifyContent:'center'}}>\n                <Avatar style={style} alt={'haha'} src={getImage_()}  variant=\"square\" className={classes.large} />\n                <span style={{color:'#303030',fontWeight:'bold',textTransform:'capitalize',textAlign:'center'}}>{row.name}</span>\n                <span  style={{color:'#303030',opacity:'50%',textOverflow:'ellipsis',overflow:'hidden',display:'block',width:'70%',textAlign:'center'}}>{row.sku}</span>\n                {/* <span  style={{color:row.price_control.is_accepted?'rgb(57,202,73)':'rgb(253,106,98)',borderRadius:'5px',textOverflow:'ellipsis',overflow:'hidden',display:'block',width:'70%',textAlign:'center',background:'white'}}>{row.price_control.is_accepted?lang.accepted:lang.refused}</span> */}\n\n            </section>\n            <section style={{paddingLeft:'5px',paddingRight:'5px'}}>\n                <span style={{textTransform:'capitalize',color:'#303030',fontWeight:'bold'}}>{row.type_shopping}</span>\n                <span style={{textTransform:'capitalize',float:'right',color:'#303030',fontWeight:'bold'}}>{row.category.name}</span>\n\n                </section>\n\n       </motion.Grid>\n                       <CustomModal fetch={fetch} open={open}  handleClose={handleCloseModal}  product={row} img={getImage_} imgs={getImages_} />\n</>\n    )\n}\n\nexport default ProductCard\n","/Users/Mahmoud/Documents/React/ERP/erp_logistio/src/Components/Sections array/SectionsTable.js",["398"],"import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport { Checkbox, FormControlLabel } from '@material-ui/core';\nimport {motion} from 'framer-motion';\n\nconst lngc = window.localStorage.getItem(\"lang\")\n  ? window.localStorage.getItem(\"lang\")\n  : \"EN\";\nconst lang = require(`../../Language/${lngc}.json`);\n\nfunction SectionsTable({choosedSection,handleChoosedSectionChange,rows,dispatcher}) {\n\n  const contentVariant = {\n    hidden:{\n        scale:0,\n    },\n    visible:{\n        scale:1,\n        transition:{\n            type:'tween',\n            duration:0.3,  \n        }\n    },   \n}\n    const headerStyle={\n            fontWeight:'bold'\n    }\n    const useStyles = makeStyles({\n        table: {\n          minWidth: 650,\n        },\n      });\n\n    function createData(name, calories, fat, carbs, protein) {\n        return { name, calories, fat, carbs, protein };\n      }\n\n\n      const classes = useStyles();\n\n    return (\n      <motion.div variants={contentVariant} initial='hidden' animate='visible' >\n      <FormControl className={classes.formControl} size='small' style={{width:'30%',marginBottom:'30px'}}>\n        <InputLabel id=\"demo-simple-select-label\">{lang.section}</InputLabel>\n        <Select\n          labelId=\"demo-simple-select-section\"\n          id=\"demo-simple-select\"\n          value={choosedSection}\n          onChange={handleChoosedSectionChange}\n        >\n          <MenuItem value={'products'}>Products</MenuItem>\n          <MenuItem value={'stock'}>Stock</MenuItem>\n          <MenuItem value={'orders'}>Orders</MenuItem>\n          <MenuItem value={'purchases'}>Purchases</MenuItem>\n        </Select>\n      </FormControl>\n\n\n        <TableContainer component={Paper}>\n      <Table className={classes.table} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell style={headerStyle}>Access</TableCell>            \n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map((row) => (\n            <TableRow key={row.name}>\n            \n              <TableCell align=\"left\">\n              <FormControlLabel\n                control={<Checkbox checked={row.isChecked} onChange={()=>dispatcher(row.id,'')} name=\"checkedA\" color=\"primary\" />}\n                label={row.description}\n              />\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n    </motion.div>\n    )\n}\n\nexport default SectionsTable\n","/Users/Mahmoud/Documents/React/ERP/erp_logistio/src/Components/EmailModal.js",["399"],"import React from 'react'\nimport Modal from '@material-ui/core/Modal';\nimport TextField from '@material-ui/core/TextField';\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\nimport { Button, CircularProgress, Grid, Paper } from '@material-ui/core';\n\n\nconst lngc = window.localStorage.getItem('lang')?window.localStorage.getItem('lang'):'EN';\nconst lang = require(`../Language/${lngc}.json`)\n\nfunction EmailModal({open,handleClose}) {\n    const [loading, setloading] = React.useState(false)\n    const spanMargin = {\n        marginBottom:'10px',\n        fontWeight:'bold',\n        color:'#303030',\n        opacity:'80%'\n    }\n\n    const inputMargin = {\n        marginBottom:'20px'\n    }\n\n    const send_ =()=>{\n        console.log('send email here')\n        setloading(true);\n        setloading(false);\n        handleClose();\n    }\n\n    return (\n        <Modal\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n        style={{display:'flex',justifyContent:'center',alignItems:'center'}}\n        >\n         <Grid item md={8}  >\n         <Paper elevation={3} style={{display:'flex', padding:'20px',overflowY:'auto',height:'350px',background:'rgb(243,245,247)',flexDirection:'column',padding:'25px'}}>\n             <h3>{lang.mailing}</h3>\n             <section style={{display:'flex',flexDirection:'column'}}>\n                \n                <TextField style={inputMargin} size='small' id=\"outlined-basic\" label={lang.email_subject} variant=\"outlined\" />\n             </section>\n\n             <section style={{display:'flex',flexDirection:'column'}}>\n                <span style={spanMargin}>{`${lang.email_text}`}</span>\n                <TextareaAutosize aria-label=\"minimum height\" rowsMin={10} placeholder={lang.your_text_here}  style={{width:'90%'}}/>\n             </section>\n             {\n                 loading?\n                 <CircularProgress style={{alignSelf:'center',marginTop:'15px'}} size={30}/>\n                :\n                <Button variant=\"contained\"  style={{marginTop:'17px',background:'#000246',color:'white'}} onClick={send_}>\n                {lang.send_mail}\n               </Button>\n             }\n            \n             </Paper>\n            \n         </Grid>\n        </Modal>\n    )\n}\n\nexport default EmailModal\n","/Users/Mahmoud/Documents/React/ERP/erp_logistio/src/Components/AccessoriesTable.js",["400","401","402","403","404"],"import React from 'react'\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport LinkIcon from '@material-ui/icons/Link';\nimport { Link } from 'react-router-dom';\nimport { Grid, TextField } from '@material-ui/core'\nimport AttachmentsLink from './AttachmentsLink';\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\nimport CustomRow from './Accesories row/CustomRow';\n\nconst lngc = window.localStorage.getItem('lang')?window.localStorage.getItem('lang'):'EN';\nconst lang = require(`../Language/${lngc}.json`)\n\nconst useStyles = makeStyles({\n    table: {\n      minWidth: 350,\n    },\n    header:{\n        fontWeight:'bold'\n    }\n  });\nfunction AccessoriesTable({accessories=[],productId,fetch}) {\n    const classes = useStyles();\n    return (\n        <Grid item md={12} style={{marginTop:'5px',height:'183px',overflowY:'auto',marginBottom:'10px'}}>\n                <TableContainer component={Paper}>\n                <Table className={classes.table} aria-label=\"simple table\">\n                <TableHead >\n                    <TableRow>\n                        <TableCell align='center' className={classes.header} >{lang.name}</TableCell>\n                        <TableCell align='center' className={classes.header} >{lang.description}</TableCell>\n                        <TableCell align='center' className={classes.header} >{lang.quantity}</TableCell>\n                        <TableCell align='left' className={classes.header} >{lang.attachments}</TableCell>\n                        <TableCell align='left' className={classes.header} >{lang.price}</TableCell>\n\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {accessories.map((row,index) => (\n                        <CustomRow row={row} key={row} productId={productId} fetch={fetch} />\n                    ))}\n                </TableBody>\n                </Table>\n            </TableContainer>\n      </Grid>\n    )\n}\n\nexport default AccessoriesTable\n","/Users/Mahmoud/Documents/React/ERP/erp_logistio/src/Components/VariantsTable.js",["405","406","407","408","409","410","411","412","413"],"import React from 'react'\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport LinkIcon from '@material-ui/icons/Link';\nimport { Link } from 'react-router-dom';\nimport { Grid, TextField } from '@material-ui/core'\nimport CustomRow from './Variants row/CustomRow';\n\nconst lngc = window.localStorage.getItem('lang')?window.localStorage.getItem('lang'):'EN';\nconst lang = require(`../Language/${lngc}.json`)\n\nconst useStyles = makeStyles({\n    table: {\n      minWidth: 350,\n    },\n    header:{\n        fontWeight:'bold'\n    }\n  });\nfunction VariantsTable({variants,options,productId,fetch}) {\n    const classes = useStyles();\n\n    console.log('Options :::',options)\n    return (\n        <Grid item md={10} style={{marginTop:'5px',height:'183px',overflowY:'auto'}}>\n                <TableContainer component={Paper}>\n                <Table className={classes.table} aria-label=\"simple table\">\n                <TableHead >\n                    <TableRow>\n                        {\n                            options.map(elem=>{\n                                if(elem.type==='option1')\n                                return   <TableCell align='center' className={classes.header} >{elem.name}</TableCell>\n\n                            })\n                        }\n                        {\n                            options.map(elem=>{\n                                if(elem.type==='option2')\n                                return   <TableCell align='center' className={classes.header} >{elem.name}</TableCell>\n\n                            })\n                        }\n                        {\n                            options.map(elem=>{\n                                if(elem.type==='option3')\n                                return   <TableCell align='center' className={classes.header} >{elem.name}</TableCell>\n\n                            })\n                        }\n                        {\n                            options.length==1?\n                            <>\n                            <TableCell align='center' className={classes.header} >{'-'}</TableCell>\n                            <TableCell align='center' className={classes.header} >{'-'}</TableCell>\n                            </>\n                            :\n                            options.length==2?\n                            <TableCell align='center' className={classes.header} >{'-'}</TableCell>\n                            :\n                            options.length==0?\n                            <>\n                            <TableCell align='center' className={classes.header} >{'-'}</TableCell>\n                            <TableCell align='center' className={classes.header} >{'-'}</TableCell>\n                            <TableCell align='center' className={classes.header} >{'-'}</TableCell>\n                            </>\n                            :\n                            null\n                        }\n             \n                        <TableCell align='center' className={classes.header} >{lang.quantity}</TableCell>\n                        <TableCell align='center' className={classes.header} >{lang.price}</TableCell>\n                        <TableCell align='center' className={classes.header} ></TableCell>\n\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {variants.map((row,index) => (\n                        <CustomRow row={row} key={index} productId={productId} fetch={fetch} />\n                    ))}\n                </TableBody>\n                </Table>\n            </TableContainer>\n      </Grid>\n    )\n}\n\nexport default VariantsTable\n","/Users/Mahmoud/Documents/React/ERP/erp_logistio/src/Components/CustomSpan.js",["414"],"import React from 'react'\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\nimport { TextField } from '@material-ui/core';\nimport InputBase from '@material-ui/core/InputBase';\n\nfunction CustomSpan({label,value,textArea,disabled,input,type,handler=null,media}) {\n\n\n\n    const lableSpan = {\n        color:'#303030',\n        fontWeight:'bold',\n        marginRight:'5px'\n\n      }\n    \n      const valueSpan = {\n        color:'#303030',\n        marginLeft:'10px',\n\n        opacity:'85%',\n      }\n    return (\n        <section style={{display:'flex',flexDirection:'row',padding:'10px',alignItems:'center'}}>\n            <span style={lableSpan} >{label}</span>\n            { textArea ?\n              <TextareaAutosize  disabled={disabled} aria-label=\"empty textarea\" placeholder=\"Empty\" defaultValue={value} rowsMin={4} onChange={(e)=>{handler({type:type,value:e.target.value})}} />\n               :\n               input?\n               <TextField id=\"outlined-basic\"  label=\"\" variant=\"outlined\"  size='small' defaultValue={value} onChange={(e)=>{handler({type:type,value:e.target.value})}} disabled={disabled} />\n               :\n               media?\n               <TextField id=\"outlined-basic\" type='file' label=\"\" variant=\"outlined\"  size='small' defaultValue={value} onChange={(e)=>{handler({type:type,value:e.target.files[0]})}}/>\n              //  onChange={(e)=>{handler({type:type,value:e.target.value})}\n               :\n              <span style={valueSpan} >{value}</span>\n            }\n        </section>\n    )\n}\n\nexport default CustomSpan\n","/Users/Mahmoud/Documents/React/ERP/erp_logistio/src/Components/UrlsTable.js",["415","416"],"import React from 'react'\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport LinkIcon from '@material-ui/icons/Link';\nimport { Link } from 'react-router-dom';\nimport { Grid } from '@material-ui/core'\n\nconst lngc = window.localStorage.getItem('lang')?window.localStorage.getItem('lang'):'EN';\nconst lang = require(`../Language/${lngc}.json`)\n\nconst useStyles = makeStyles({\n    table: {\n      minWidth: 350,\n    },\n    header:{\n        fontWeight:'bold'\n    }\n  });\nfunction UrlsTable({urls_array}) {\n    const classes = useStyles();\n\n    return (\n        <Grid item md={6} style={{marginTop:'5px',height:'183px',overflowY:'auto'}}>\n                <TableContainer component={Paper}>\n                <Table className={classes.table} aria-label=\"simple table\">\n                <TableHead >\n                    <TableRow>\n                    <TableCell className={classes.header} >{lang.link}</TableCell>\n                    <TableCell className={classes.header} >{lang.action}</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {urls_array.map((row,index) => (\n                    <TableRow key={row}>\n                        <TableCell>\n                                {`${lang.link} ${index}`}\n                        </TableCell>\n                        <TableCell>\n                                <a target='_blank' href={row}><LinkIcon color=\"action\" /></a>\n                        </TableCell>\n                    </TableRow>\n                    ))}\n                </TableBody>\n                </Table>\n            </TableContainer>\n      </Grid>\n    )\n}\n\nexport default UrlsTable\n","/Users/Mahmoud/Documents/React/ERP/erp_logistio/src/Components/AttachmentsLink.js",[],"/Users/Mahmoud/Documents/React/ERP/erp_logistio/src/Components/Accesories row/CustomRow.js",["417","418","419","420","421","422","423","424","425","426","427","428","429"],"import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport LinkIcon from '@material-ui/icons/Link';\nimport { Link } from 'react-router-dom';\nimport { Button, Grid, TextField, CircularProgress } from '@material-ui/core'\nimport AttachmentsLink from '../AttachmentsLink';\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\nimport axios from 'axios'\nimport {uri} from '../../Url_base'\nimport useToken from '../../Hooks/useToken';\nimport Swal from 'sweetalert2'\nimport CustomSnackbar from '../CustomSnackBar';\nconst lngc = window.localStorage.getItem('lang')?window.localStorage.getItem('lang'):'EN';\nconst lang = require(`../../Language/${lngc}.json`)\n\n\nfunction CustomRow({row,fetch,productId}) {\n    const [setToken,getToken] = useToken();\n\n    const [price, setPrice] = React.useState(row?.price?row.price:0);\n    const [_disabled, set_disabled] = React.useState(true)\n    const [loading, setloading] = React.useState(false)\n    const [status, setStatus] = React.useState('')\n    const priceHandler = (value)=>{\n        setPrice(value)\n    }\n\n    const _isDisabled = ()=>{\n        if(parseFloat(price)==parseFloat(row.price))\n        set_disabled(true)\n        else\n        set_disabled(false)\n    }\n\n    React.useEffect(() => {\n        _isDisabled()\n    }, [price]);\n\n    const _persist = ()=>{\n        console.log('price:',price,'variant:',row)\n        setloading(true)\n        axios.patch(`${uri.link}/products/${productId}/a/${row._id}`,\n        {\n            price:price\n        },\n        {\n          headers:{'auth-token':`${getToken()}`}\n        }).then( (response)=> {\n              setloading(false);\n              fetch()\n              setStatus(200)\n            })\n            .catch(error =>{\n              setloading(false);\n              setStatus('error');\n            //   Swal.fire({\n            //     title: 'Ops, an Error!',\n            //     text: \"An error appear while updating\",\n            //     icon: 'error',\n            //     confirmButtonText: 'OK',\n            //     backdrop: `\n            //         rgba(0,0,123,0.4)\n            //         url(\"/images/nyan-cat.gif\")\n            //         left top\n            //         no-repeat\n            //       `\n            //   })\n            })\n       \n      }\n\n    return (\n        <>\n        {\n            status===200?\n                <CustomSnackbar  content='Accessorie updated!' type=\"success\"/>\n            :\n            status==='error'?\n                <CustomSnackbar  content='Ops, error while updating accessorie' type=\"error\"/>\n            :\n            null\n        }\n        <TableRow key={row}>\n                        <TableCell align='center' key={'ac1'} >\n                                {row?.name?row.name:'-'}\n                        </TableCell>\n                        <TableCell align='center'  key={'ac2'}>\n                                \n                                <TextareaAutosize defaultValue={row?.description?row.description:'-'} disabled placeholder=\"Description\" />\n                        </TableCell>\n                        <TableCell align='center' key={'ac3'}>\n                                {row?.quantity?row.quantity:'-'}\n                        </TableCell>\n                        <TableCell align='center' style={{display:'flex',width:'160px',flexWrap:'wrap'}} key={'ac4'}>\n                                {row?.attachments?row.attachments.map(elem =>{\n                                    return <AttachmentsLink link={elem} key={elem} />\n                                })\n                                :\n                                '-'\n                                \n                            \n                            }\n                        </TableCell>\n                        <TableCell align='center' key={'ac5'}>\n                            <TextField id=\"price_text\" label={lang.price} variant=\"outlined\" defaultValue={price}  size='small' onChange={(e)=>{priceHandler(e.target.value)}}/>\n                        </TableCell>\n                    \n                        <TableCell align='center' key={'ac6'}>\n                        {\n                                loading?\n                                <CircularProgress  size={20} />\n\n                                :\n                                <Button variant=\"contained\" size=\"small\" disableElevation disabled={_disabled} onClick={_persist}>{lang.save}</Button>\n\n                            }\n                        </TableCell>\n\n                      \n                    </TableRow>\n                    </>\n    )\n}\n\nexport default CustomRow\n","/Users/Mahmoud/Documents/React/ERP/erp_logistio/src/Components/Variants row/CustomRow.js",["430","431","432","433","434","435","436","437","438","439","440","441","442"],"import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport LinkIcon from '@material-ui/icons/Link';\nimport { Link } from 'react-router-dom';\nimport { CircularProgress, Grid, TextField } from '@material-ui/core'\nimport Button from '@material-ui/core/Button';\nimport axios from 'axios'\nimport {uri} from '../../Url_base'\nimport useToken from '../../Hooks/useToken';\nimport Swal from 'sweetalert2'\nimport CustomSnackbar from '../CustomSnackBar';\nconst lngc = window.localStorage.getItem('lang')?window.localStorage.getItem('lang'):'EN';\nconst lang = require(`../../Language/${lngc}.json`)\n\n\nfunction CustomRow({row,productId,fetch}) {\n    const [setToken,getToken] = useToken();\n\n    const [price, setPrice] = React.useState(row?.price?row.price:0);\n    const [_disabled, set_disabled] = React.useState(true)\n    const [loading, setloading] = React.useState(false)\n\n    const [status, setStatus] = React.useState('')\n    const priceHandler = (value)=>{\n        setPrice(value)\n    }\n\n    const _isDisabled = ()=>{\n        if(parseFloat(price)==parseFloat(row.price))\n        set_disabled(true)\n        else\n        set_disabled(false)\n    }\n\n    React.useEffect(() => {\n        _isDisabled()\n    }, [price]);\n\n    const _persist = ()=>{\n        console.log('price:',price,'variant:',row)\n        setloading(true)\n        axios.patch(`${uri.link}/products/${productId}/v/${row._id}`,\n        {\n            price:parseFloat(price)\n        },\n        {\n          headers:{'auth-token':`${getToken()}`}\n        }).then( (response)=> {\n              setloading(false);\n              fetch();\n              setStatus(200)\n            })\n            .catch(error =>{\n              setloading(false);\n              setStatus('error');\n            //   Swal.fire({\n            //     title: 'Ops, an Error!',\n            //     text: \"An error appear while updating\",\n            //     icon: 'error',\n            //     confirmButtonText: 'OK',\n            //     backdrop: `\n            //         rgba(0,0,123,0.4)\n            //         url(\"/images/nyan-cat.gif\")\n            //         left top\n            //         no-repeat\n            //       `\n            //   })\n            })\n       \n      }\n\n    return (\n        <>\n        {\n            status===200?\n                <CustomSnackbar  content='Variant updated!' type=\"success\"/>\n            :\n            status==='error'?\n                <CustomSnackbar  content='Ops, error while updating Variant!' type=\"error\"/>\n            :\n            null\n\n\n        }\n        <TableRow key={row}>\n            \n                        <TableCell align='center' >\n                                {row?.option1?row.option1:'-'}\n                        </TableCell>\n                        <TableCell align='center'>\n                                {row?.option2?row.option2:'-'}\n                        </TableCell>\n                        <TableCell align='center'>\n                                {row?.option3?row.option3:'-'}\n                        </TableCell>\n                        <TableCell align='center'>\n                                {row?.quantity?row?.quantity:'-'}\n                        </TableCell>\n                        <TableCell align='center'>\n                            <TextField id=\"price_text\" label={lang.price} variant=\"outlined\" defaultValue={price}  size='small' onChange={(e)=>{priceHandler(e.target.value)}} />\n                             \n                        </TableCell>\n\n                        <TableCell align='center'>\n                            {\n                                loading?\n                                <CircularProgress  size={20} />\n\n                                :\n                                <Button variant=\"contained\" size=\"small\" disableElevation disabled={_disabled} onClick={_persist}>{lang.save}</Button>\n\n                            }\n                    \n                        </TableCell>\n                    </TableRow>\n                    </>\n    )\n}\n\nexport default CustomRow\n","/Users/Mahmoud/Documents/React/ERP/erp_logistio/src/Components/Products Card/Flag.js",[],"/Users/Mahmoud/Documents/React/ERP/erp_logistio/src/Pages/Stock/StockContainer.js",["443","444","445","446"],"import React from 'react'\nimport Stock from './Stock'\nimport axios from 'axios'\nimport {uri} from \"../../Url_base\";\nimport useToken from '../../Hooks/useToken';\nimport {motion} from 'framer-motion'\nconst initStockValue = {\n    product_name:'',\n    quantity:0,\n    threshold:0\n}\n\nconst reducer = (state,action)=>{\n    switch (action.type) {\n        case 'name':\n            return { ...state,product_name:action.value }\n\n        case 'quantity':\n            return {...state,quantity:action.value}\n        \n        case 'threshold':\n            return {...state,threshold:action.value}\n    }\n}\nfunction StockContainer() {\n    \n    const contentVariant = {\n        hidden:{\n            scale:0,\n        },\n        visible:{\n            scale:1,\n            transition:{\n                type:'tween',\n                duration:0.4,  \n            }\n        },   \n    }\n\n    const [setToken,getToken] = useToken();\n    const [stock, setstock] = React.useState([]);\n    const [bulkProducts, setBulkProducts] = React.useState([]);\n    const [loading, setLoading] = React.useState(false)\n    const [stockForm, dispatch] =React.useReducer(reducer, initStockValue)\n\n\nconst getStock = (mounted)=>{\n    setLoading(true)\n    axios.get(`${uri.link}/storage/`,{\n        headers:{'auth-token':`${getToken()}`}\n    })\n       .then(function (response) {\n           setLoading(false)\n           if(mounted){\n                setstock(response.data)\n           }\n       })\n       .catch(function (error) {\n            setLoading(false)\n           // handle error\n           console.log(error);\n       });\n}\n\nconst getBulkProducts = (mounted)=>{\n    axios.get(`${uri.link}/products/by_type/bulk`,{\n        headers:{'auth-token':`${getToken()}`}\n    })\n       .then(function (response) {\n           if(mounted){\n                setBulkProducts(response.data)\n           }\n       })\n       .catch(function (error) {\n           // handle error\n           console.log(error);\n       });\n}\n\n\n    React.useEffect(() => {\n        console.log('HERE FETCH STOCK')\n        let mounted = true;\n            getStock(mounted)\n       return ()=>{\n           mounted=false\n       }\n    }, [])\n    React.useEffect(() => {\n        let mounted = true;\n        getBulkProducts(mounted)\n       return ()=>{\n           mounted=false\n       }\n    }, [])\n\n\n    console.log('STOCK',stock)\n\n    return (\n        \n        <motion.div variants={contentVariant} initial='hidden' animate='visible'>\n            <Stock stock={stock} stockForm={stockForm} dispatch={dispatch} products={bulkProducts} fetch={getStock} loadingStock={loading} />\n        </motion.div>\n    )\n}\n\nexport default StockContainer\n","/Users/Mahmoud/Documents/React/ERP/erp_logistio/src/Pages/Stock/Stock.js",["447","448","449","450","451","452","453"],"import { Button, CircularProgress, Container, InputLabel, Paper, TextField } from '@material-ui/core';\nimport React from 'react'\nimport StockTable from '../../Components/Stock/StockTable';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport SaveIcon from '@material-ui/icons/Save';\nimport { motion } from \"framer-motion\"\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport StockTableErrorHandler from '../../Error boundry/StockTableErrorHandler';\nimport axios from 'axios'\nimport {uri} from \"../../Url_base\";\nimport useToken from '../../Hooks/useToken';\nimport Swal from 'sweetalert2'\nimport Loader from '../../Components/Loader';\n\nconst lngc = window.localStorage.getItem('lang')?window.localStorage.getItem('lang'):'EN';\nconst lang = require(`../../Language/${lngc}.json`)\nfunction Stock({stock,stockForm,dispatch,products,fetch,loadingStock}) {\n    const [setToken,getToken] = useToken();\n    const [loading, setloading] = React.useState(false);\n\n    const formStockVariant = {\n        hidden:{\n            opacity:0,\n            scale:0,\n        },\n        visible:{\n            opacity:1,\n            scale:1,\n        },\n\n    }\n    \n    \n\n    const [addButon, setaddButon] = React.useState(false)\n\n    const handleAddBtn = ()=>{\n        setaddButon(true)\n    }\n\n    const _persist = ()=>{\n        // console.log('quantity:',quantity,'variant:',row)\n        setloading(true)\n        axios.post(`${uri.link}/storage/`,\n        {\n            product:stockForm.product_name,\n            quantity:stockForm.quantity,\n            threshold:stockForm.threshold\n        },\n        {\n          headers:{'auth-token':`${getToken()}`}\n        }).then( (response)=> {\n              setloading(false);\n              fetch(true);\n              setaddButon(false)\n\n            })\n            .catch(error =>{\n              setloading(false);\n              Swal.fire({\n                title: 'Ops, an Error!',\n                text: \"An error appear while updating\",\n                icon: 'error',\n                confirmButtonText: 'OK',\n                backdrop: `\n                    rgba(0,0,123,0.4)\n                    url(\"/images/nyan-cat.gif\")\n                    left top\n                    no-repeat\n                  `\n              })\n            })\n       \n      }\n\n    return (\n        <Container maxWidth=\"lg\" style={{display:'flex',flexDirection:'column',overflowY:'auto',height:'100%'}} >\n\n            <Button\n                variant=\"contained\"\n                color=\"primary\"\n                size=\"small\"\n                style={{width:'160px',marginTop:'15px',display:addButon?'none':''}}\n                startIcon={<AddCircleIcon />}\n                onClick={handleAddBtn}\n            >\n       {lang.new_stock}\n      </Button>\n      <span style={{marginTop:'15px',padding:'10px',fontWeight:'bold',background:'#E9F4FD',borderRadius:'10px',fontSize:'13px',color:'rgb(43,84,116)'}}> ⚠️ {lang.storage_info}</span>\n\n      {\n          addButon  && \n      \n            <motion.Paper variants={formStockVariant} initial='hidden' animate='visible'  elevation={3} style={{marginTop:'35px',marginBottom:'20px',background:'rgb(243,245,247',borderRadius:'15px',padding:'18px',flexDirection:'column',display:'flex'}} >\n                   \n                   <span style={{fontWeight:'bold',color:'#303030',opacity:'80%'}}>{lang.stock_form}</span>\n                    <FormControl style={{width:'300px'}}>\n                            {/* <InputLabel >Product Name</InputLabel>\n                            <Select\n                        \n                            value={stockForm.product_name}\n                            onChange={(e)=>{dispatch({type:'name',value:e.target.value})}}\n                            >\n                            <MenuItem value={10}>Ten</MenuItem>\n                            <MenuItem value={20}>Twenty</MenuItem>\n                            <MenuItem value={30}>Thirty</MenuItem>\n                            </Select> */}\n                             <Autocomplete\n                                    id=\"combo-box-demo\"\n                                    options={products}\n                                    getOptionLabel={(option) => option.name}\n                                    style={{ width: 300, marginTop:'10px' }}\n                                    size='small'\n                                    onChange={(e,v)=>{dispatch({type:'name',value:v?._id})}}\n                                    renderInput={(params) => <TextField {...params} label={lang.product_name} variant=\"standard\"  />}\n                                    \n                                    />\n                    </FormControl>\n\n                    <TextField label={lang.quantity}  type='number' style={{width:'300px', marginTop:'10px'}} onChange={(e)=>dispatch({type:'quantity',value:e.target.value})} />\n\n                    <TextField label={lang.threshold}  type='number' style={{width:'300px', marginTop:'10px'}} onChange={(e)=>dispatch({type:'threshold',value:e.target.value})}/>\n                    {\n                        loading?\n                       <Loader />\n                        :\n                        <motion.Button\n                    \n                    whileHover={{scale:1.1 }}\n                            variant=\"contained\"\n                            \n                            style={{marginTop:'15px'}}\n                            startIcon={<SaveIcon />}\n                            onClick={_persist}\n                            style={{width:'300px',alignSelf:'center',background:'rgb(65,84,179)',border:'0px',borderRadius:'5px',height:'30px',marginTop:'15px',color:'white',cursor:'pointer',fontWeight:'bold'}}\n                        >\n                            {lang.save_it}\n                    </motion.Button>\n                    }\n                    \n            </motion.Paper>\n            }\n            <Paper elevation={3} style={{marginTop:'15px',height:'65vh',marginBottom:'30px',background:'rgb(243,245,247',borderRadius:'15px',padding:'10px',display:'flex',flexDirection:'column',justifyContent:loadingStock?'center':null}}>\n\n                {\n                    loadingStock?\n                    <Loader />\n                    :\n                    <StockTableErrorHandler>\n                        <StockTable stocks={stock} />\n                    </StockTableErrorHandler>\n                }\n                \n            </Paper>\n        </Container>\n\n    )\n}\n\nexport default Stock\n\n\n\n\n\n// {\n//     loading?\n//          <Loader />\n//      :\n     \n// }","/Users/Mahmoud/Documents/React/ERP/erp_logistio/src/Components/Stock/StockTable.js",["454","455","456","457"],"import React from 'react'\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport LinkIcon from '@material-ui/icons/Link';\nimport { Link } from 'react-router-dom';\nimport { Grid, TextField } from '@material-ui/core'\nimport AttachmentsLink from '../AttachmentsLink';\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\nimport CustomRow from './CustomRow';\nimport EmptyArrayHolder from '../EmptyArrayHolder'\nconst lngc = window.localStorage.getItem('lang')?window.localStorage.getItem('lang'):'EN';\nconst lang = require(`../../Language/${lngc}.json`)\n\nconst useStyles = makeStyles({\n    table: {\n      minWidth: 350,\n    },\n    header:{\n        fontWeight:'bold'\n    }\n  });\nfunction StockTable({stocks=[],fetch}) {\n\n\n    console.log('STOCKS------------->',stocks)\n    const classes = useStyles();\n    const [searchInput, setsearchInput] = React.useState('')\n    const filtredData = stocks.filter(row =>{\n        try {\n            return row.product.name.includes(searchInput)\n\n        } catch (error) {\n            throw new Error('Error appeared while filtring data or PRODUCT is NULL')\n        }\n    })\n\n\n    console.log('STOCK TABLE -----> ',stocks)\n    return (\n        <Grid item md={12} style={{marginTop:'5px',height:'385px',overflowY:'auto',marginBottom:'10px'}}>\n                            <TextField id=\"standard-basic\"  label={lang.search_by_name} style={{width:'300px',marginLeft:'5px',marginBottom:'20px'}} onChange={(e)=>setsearchInput(e.target.value)} />\n                \n                {\n                    filtredData.length>0?\n                    <TableContainer component={Paper}>\n                    <Table className={classes.table} aria-label=\"simple table\">\n                    <TableHead >\n                        <TableRow>\n                            <TableCell align='left' className={classes.header} >{lang.product_img}</TableCell>\n                            <TableCell align='center' className={classes.header} >{lang.product_name}</TableCell>\n                            <TableCell align='center' className={classes.header} >{lang.quantity}</TableCell>\n                            <TableCell align='center' className={classes.header} >{lang.threshold}</TableCell>\n                            <TableCell align='center' className={classes.header} >{lang.edit}</TableCell>\n                            <TableCell align='center' className={classes.header} >{lang.notify}</TableCell>\n    \n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {filtredData.map((row,index) => (\n                            <CustomRow row={row} key={row}  fetch={fetch} />\n                        ))}\n                    </TableBody>\n                    </Table>\n                </TableContainer>\n                :\n\n                <EmptyArrayHolder text={lang.no_products} />\n                }\n               \n      </Grid>\n    )\n}\n\nexport default StockTable\n","/Users/Mahmoud/Documents/React/ERP/erp_logistio/src/Components/Stock/CustomRow.js",["458","459","460","461","462","463","464","465","466","467","468","469","470","471","472","473","474"],"import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport LinkIcon from '@material-ui/icons/Link';\nimport { Link } from 'react-router-dom';\nimport { Button, Grid, TextField, CircularProgress, IconButton } from '@material-ui/core'\nimport AttachmentsLink from '../AttachmentsLink';\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\nimport axios from 'axios'\nimport {uri} from '../../Url_base'\nimport useToken from '../../Hooks/useToken';\nimport Swal from 'sweetalert2'\nimport Avatar from '@material-ui/core/Avatar';\nimport NotificationsActiveIcon from '@material-ui/icons/NotificationsActive';\nimport EditIcon from '@material-ui/icons/Edit';\nimport SaveIcon from '@material-ui/icons/Save';\nimport {motion} from 'framer-motion';\nimport productPlaceHolder from '../../Assets/img/productPlaceHolder.png'\n\nconst lngc = window.localStorage.getItem('lang')?window.localStorage.getItem('lang'):'EN';\nconst lang = require(`../../Language/${lngc}.json`)\n\n\nfunction CustomRow({row,fetch,productId}) {\n\n  const svgVariants = {\n   \n    hover:{\n      rotate:[0,-30,20,-20,10,-10,0],\n      transition:{\n        duration:1\n      }\n    }\n}\n    const [setToken,getToken] = useToken();\n    const [quantity, setQuantity] = React.useState(row?.quantity?row.quantity:0);\n    const [threshold, setThreshold] = React.useState(row?.threshold?row.threshold:0);\n\n    const [_disabled, set_disabled] = React.useState(true)\n    const [loading, setloading] = React.useState(false)\n    const [edit, setEdit] = React.useState(false)\n\n    const quantityHandler = (value)=>{\n        setQuantity(value)\n    }\n\n    // const _isDisabled = ()=>{\n    //     if(parseFloat(price)==parseFloat(row.price))\n    //     set_disabled(true)\n    //     else\n    //     set_disabled(false)\n    // }\n\n    // React.useEffect(() => {\n    //     _isDisabled()\n    // }, [price]);\n\n    const _persist = ()=>{\n        setloading(true)\n        axios.patch(`${uri.link}/storage/${row._id}`,\n        {\n            quantity:quantity,\n            threshold:threshold\n        },\n        {\n          headers:{'auth-token':`${getToken()}`}\n        }).then( (response)=> {\n              setloading(false);\n              setEdit(false);\n            })\n            .catch(error =>{\n              setloading(false);\n              Swal.fire({\n                title: 'Ops, an Error!',\n                text: \"An error appear while updating\",\n                icon: 'error',\n                confirmButtonText: 'OK',\n                backdrop: `\n                    rgba(0,0,123,0.4)\n                    url(\"/images/nyan-cat.gif\")\n                    left top\n                    no-repeat\n                  `\n              })\n            })\n       \n      }\n    \n  const _notify = ()=>{\n    alert('notification')\n  }\n\n  const getImage_ = ()=>{\n   let img=  row?.product?.media.map(file=>{\n        if(file.type==='image')\n        return file.link\n        else\n        return productPlaceHolder\n\n    })\n    return img\n  }\n\n    return (\n        <TableRow key={row}>\n                        <TableCell align='center' key={'ac1'} >\n                        <Avatar alt=\"Travis Howard\" src={getImage_()} variant='square' style={{height:'80px',width:'80px'}}/>\n\n                        </TableCell>\n                        <TableCell align='center'  key={'ac2'}>\n                                {row?.product?.name?row.product.name:'-'}\n\n                        </TableCell>\n                        <TableCell align='center' key={'ac3'}>\n                                {/* {row?.quantity?row.quantity:'-'} */}\n                                <TextField value={quantity} onChange={(e)=>setQuantity(e.target.value)}  variant=\"outlined\" size='small' style={{width:'100px'}} type='number' disabled={!edit}/>\n\n                        </TableCell>\n                        <TableCell align='center'  key={'ac4'}>\n                            \n                                <TextField value={threshold} onChange={(e)=>setThreshold(e.target.value)} variant=\"outlined\" size='small' style={{width:'100px'}} type='number' disabled={!edit}/>\n\n                        </TableCell>\n                       \n                    \n                        <TableCell align='center' key={'ac6'}>\n                        {\n                                loading?\n                                <CircularProgress  size={20} />\n\n                                :\n                                edit ?\n                                <IconButton   onClick={_persist} size='small' >\n                                  <SaveIcon  fontSize=\"small\" />\n                                </IconButton>\n                                :\n                                <IconButton  onClick={()=>setEdit(true)} size='small' >\n                                  <EditIcon  fontSize=\"small\" />\n                              </IconButton>\n\n                            }\n                        </TableCell>\n                        <TableCell align='center' key={'ac7'} >\n                        {\n                                loading?\n                                <CircularProgress  size={20} />\n\n                                :\n                                // <Button variant=\"contained\" size=\"small\" disableElevation disabled={false} onClick={_persist}>notify</Button>\n                                <motion.section  variants={row.quantity === row.threshold?svgVariants:null}  whileHover=\"hover\" style={{cursor:'pointer',marginLeft:'auto',marginRight:'auto',width:'30%'}}>\n                                    <IconButton onClick={_notify} size='small' disabled={row.quantity === row.threshold?false:true} >\n                                      <NotificationsActiveIcon  fontSize=\"small\" />\n                                    </IconButton>\n                                </motion.section>\n                            }\n                        </TableCell>\n                      \n                    </TableRow>\n    )\n}\n\nexport default CustomRow\n","/Users/Mahmoud/Documents/React/ERP/erp_logistio/src/Components/SvgComponent.js",["475","476"],"import * as React from \"react\"\nimport {motion} from 'framer-motion'\nimport '../Assets/css/svg.css'\nfunction SvgComponent(props) {\n\n\n  const svgPathVariants = {\n    hidden:{\n      opacity:0,\n      pathLength:0\n\n    },\n    visible:{\n      opacity:1,\n      pathLength:1,\n       transition:{\n        delay:1,\n        duration:3,\n        ease:'easeInOut'\n      }\n    }\n}\n  return (\n      \n   \n    <svg version=\"1.1\" id=\"Layer_1\" xmlns=\"http://www.w3.org/2000/svg\"  x=\"0px\" y=\"0px\"\n         viewBox=\"0 0 12896.86 3956.65\" >\n    \n    <g>\n        <path className=\"st0 path\" d=\"M4709.9,437.96h156.13v2524.31H4709.9V437.96z\"/>\n        <path className=\"st0 path\" d=\"M5121.72,2304.64c0-126.23,30.45-241.34,91.36-345.44c60.85-104.05,143.89-186.52,249.11-247.43\n            c105.16-60.91,223.07-91.36,353.71-91.36c132.88,0,251.34,30.45,355.44,91.36c104.05,60.91,185.96,143.38,245.75,247.43\n            c59.79,104.1,89.68,219.21,89.68,345.44s-29.9,241.34-89.68,345.44c-59.79,104.1-142.27,186.52-247.43,247.43\n            c-105.22,60.91-224.19,91.36-357.06,91.36c-130.7,0-247.99-29.34-352.09-88.06c-104.1-58.62-186.58-139.47-247.43-242.46\n            C5152.18,2555.42,5121.72,2437.46,5121.72,2304.64z M5277.85,2307.93c0,101.87,23.8,194.35,71.41,277.38\n            c47.61,83.04,111.81,148.92,192.67,197.59c80.8,48.73,171.04,73.09,270.68,73.09s189.82-24.36,270.68-73.09\n            c80.8-48.67,145-114.55,192.67-197.59c47.61-83.04,71.41-175.51,71.41-277.38c0-101.81-23.8-194.29-71.41-277.33\n            c-47.66-83.04-111.87-149.48-192.67-199.26c-80.86-49.84-171.04-74.77-270.68-74.77c-101.87,0-193.23,26.04-274.03,78.06\n            c-80.86,52.08-144.45,120.14-190.99,204.29C5301.09,2123.09,5277.85,2212.77,5277.85,2307.93z\"/>\n        <path className=\"st0 path\" d=\"M7340.43,3596.66c-108.52,0-210.38-19.95-305.6-59.79c-95.22-39.84-194.85-108.52-298.89-205.91l92.98-106.28\n            c95.16,90.75,183.78,152.21,265.7,184.34c81.92,32.07,161.6,48.17,239.16,48.17c135.06,0,242.46-21.63,322.2-64.76\n            c79.68-43.19,137.24-100.8,172.72-172.72c35.37-72.03,54.2-152.27,56.44-240.84l3.3-305.54\n            c-55.38,95.22-135.62,171.6-240.78,229.16c-105.22,57.61-220.89,86.39-347.06,86.39c-121.81,0-233.13-30.45-333.82-91.36\n            c-100.8-60.91-181.05-142.83-240.84-245.81c-59.79-102.93-89.69-217.54-89.69-343.76c0-135,31.01-253.52,93.04-355.39\n            c61.97-101.81,146.12-182.11,252.4-240.78c106.28-58.67,223.63-88.01,352.09-88.01c112.93,0,221.39,28.22,325.49,84.66\n            c104.05,56.49,181.55,131.2,232.51,224.24l13.3-269.06h139.47v1318.62c0,106.28-23.8,206.42-71.41,300.57\n            c-47.61,94.1-122.88,169.93-225.86,227.54C7644.36,3567.88,7508.69,3596.66,7340.43,3596.66z M6792.38,2304.64\n            c0,101.87,24.36,194.29,73.09,277.33c48.67,83.04,114.61,149.47,197.64,199.32c83.04,49.79,175.46,74.71,277.33,74.71\n            c97.4,0,185.96-21.57,265.7-64.76c79.74-43.19,145-101.31,195.97-174.4c50.91-73.03,79.74-151.65,86.33-235.81v-192.67\n            c-26.54-123.94-90.8-226.92-192.61-308.9c-101.87-81.86-220.39-122.88-355.39-122.88c-101.87,0-194.29,23.25-277.33,69.74\n            c-83.04,46.55-148.97,110.75-197.64,192.67C6816.74,2100.9,6792.38,2196.18,6792.38,2304.64z\"/>\n        <path className=\"st0 path\" d=\"M8393.35,1185.28c0-30.96,12.13-56.94,36.54-78.01c24.31-21.07,50.91-31.57,79.68-31.57\n            c31.01,0,57.55,10.51,79.74,31.57c22.07,21.07,33.19,47.05,33.19,78.01c0,33.25-11.12,60.4-33.19,81.42\n            c-22.18,21.07-48.73,31.52-79.74,31.52c-28.78,0-55.38-11.01-79.68-33.19C8405.48,1242.89,8393.35,1216.35,8393.35,1185.28z\n             M8426.55,1663.6h156.12v1298.67h-156.12V1663.6z\"/>\n        <path className=\"st0 path\" d=\"M9270.14,2988.87c-75.32,0-153.95-13.86-235.86-41.52c-81.92-27.72-148.36-72.53-199.26-134.56l73.09-102.93\n            c44.26,46.49,96.84,83.59,157.75,111.25c60.91,27.72,125.67,41.52,194.29,41.52c75.27,0,143.94-17.71,205.97-53.14\n            c61.97-35.43,92.98-97.45,92.98-186.02c0-61.97-17.16-109.58-51.46-142.83c-34.37-33.19-77.56-60.29-129.58-81.36\n            c-52.02-21.01-106.84-40.4-164.39-58.11c-95.22-31.01-173.28-73.09-234.13-126.23c-60.96-53.14-91.36-128.41-91.36-225.86\n            c0-106.28,37.05-192.05,111.25-257.43c74.15-65.27,168.87-97.96,283.97-97.96c68.62,0,136.74,11.12,204.29,33.19\n            c67.5,22.18,128.97,59.79,184.34,112.93l-69.74,109.63c-35.48-48.67-82.53-81.92-141.15-99.63\n            c-58.73-17.71-110.19-27.66-154.45-29.9c-57.61,0-115.78,17.15-174.4,51.46c-58.73,34.37-88.01,86.95-88.01,157.75\n            c0,50.96,14.36,92.48,43.14,124.55c28.78,32.13,65.88,58.17,111.31,78.06c45.32,19.95,92.42,38.78,141.15,56.49\n            c64.21,19.89,124.55,43.75,180.99,71.41c56.49,27.72,102.98,64.2,139.53,109.58c36.54,45.43,54.82,105.78,54.82,181.05\n            c0,115.17-37.1,210.38-111.31,285.65C9529.7,2951.21,9418.45,2988.87,9270.14,2988.87z\"/>\n        <path className=\"st0 path\" d=\"M10107.09,1092.3h159.42v587.9h401.93v126.23h-401.93v1155.85h-159.42V1806.42h-275.65v-126.23h275.65V1092.3z\n            \"/>\n        <path className=\"st0 path\" d=\"M10814.63,1185.28c0-30.96,12.13-56.94,36.54-78.01c24.31-21.07,50.91-31.57,79.68-31.57\n            c31.01,0,57.55,10.51,79.74,31.57c22.07,21.07,33.19,47.05,33.19,78.01c0,33.25-11.12,60.4-33.19,81.42\n            c-22.18,21.07-48.73,31.52-79.74,31.52c-28.78,0-55.38-11.01-79.68-33.19C10826.75,1242.89,10814.63,1216.35,10814.63,1185.28z\n             M10847.82,1663.6h156.12v1298.67h-156.12V1663.6z\"/>\n        <path className=\"st0 path\" d=\"M11259.59,2304.64c0-126.23,30.45-241.34,91.36-345.44c60.85-104.05,143.89-186.52,249.11-247.43\n            c105.16-60.91,223.07-91.36,353.71-91.36c132.88,0,251.34,30.45,355.44,91.36c104.05,60.91,185.96,143.38,245.75,247.43\n            c59.79,104.1,89.68,219.21,89.68,345.44s-29.89,241.34-89.68,345.44c-59.79,104.1-142.27,186.52-247.43,247.43\n            c-105.22,60.91-224.18,91.36-357.06,91.36c-130.7,0-247.99-29.34-352.09-88.06c-104.1-58.62-186.58-139.47-247.43-242.46\n            C11290.04,2555.42,11259.59,2437.46,11259.59,2304.64z M11415.71,2307.93c0,101.87,23.8,194.35,71.41,277.38\n            c47.61,83.04,111.81,148.92,192.67,197.59c80.8,48.73,171.04,73.09,270.68,73.09c99.63,0,189.82-24.36,270.68-73.09\n            c80.8-48.67,145-114.55,192.67-197.59c47.61-83.04,71.41-175.51,71.41-277.38c0-101.81-23.8-194.29-71.41-277.33\n            c-47.66-83.04-111.87-149.48-192.67-199.26c-80.86-49.84-171.04-74.77-270.68-74.77c-101.87,0-193.23,26.04-274.03,78.06\n            c-80.86,52.08-144.45,120.14-190.99,204.29C11438.96,2123.09,11415.71,2212.77,11415.71,2307.93z\"/>\n    </g>\n    <path className=\"st1 path\" d=\"M4267.31,1086.64L3829,518.96l0,0H838l0,0l-438.56,567.81l406.1,219.85h-10.58v1203.21l1519.3,823.57\n        l18.75,10.17l0,0h0l25.49-13.83v0l1511.18-819.91V1306.42h-8.35L4267.31,1086.64z M4190.37,1070.34l-385.84,208.88l-1108.71,600.26\n        L2403,1357.65l1412.2-773.53L4190.37,1070.34z M2333.41,1337.67h-0.31L930.36,569.34h2805.76L2333.41,1337.67z M851.55,584.26\n        l1412.19,773.51l-292.81,521.84L476.38,1070.47L851.55,584.26z M845.92,2479.47V1328.48L1990.8,1948.3l317.08-565.05l-0.34,1888.54\n        L845.92,2479.47z M2358.51,3271.78l0.32-1888.7l317.1,565.11l1142.79-618.7v1149.99L2358.51,3271.78z\"/>\n    </svg>\n    \n  )\n}\n\nexport default SvgComponent\n",["477","478"],"/Users/Mahmoud/Documents/React/ERP/erp_logistio/src/Error boundry/StockTableErrorHandler.js",["479","480","481","482"],"import { Avatar, Grid } from '@material-ui/core'\nimport React, { Component } from 'react'\nimport erroImg from '../Assets/img/error.gif'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { motion } from \"framer-motion\"\nconst lngc = window.localStorage.getItem('lang')?window.localStorage.getItem('lang'):'EN';\nconst lang = require(`../Language/${lngc}.json`)\n\nclass StockTableErrorHandler extends Component {\n\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n            hasError:false\n        }\n    }\n\n    static getDerivedStateFromError(error){\n        return {\n            hasError:true\n        }\n    }\n    render() {\n        if(this.state.hasError){\n    return (\n        <motion.Grid animate={{scale:1}} initial={{scale:0}} style={{height:'258px',width:'100%',display:'flex',flexDirection:'column-reverse',justifyContent:'center',alignItems:'center',border:'2px solid rgb(243,245,247)',borderRadius:'15px',marginTop:'10px',}}>\n        <span style={{fontWeight:'bold',color:'#303030',background:'white',padding:'15px',borderRadius:'14px'}}>{lang.stock_table_error} 😱</span>\n\n    </motion.Grid>\n    )\n}\n return this.props.children\n    }\n}\nexport default StockTableErrorHandler\n","/Users/Mahmoud/Documents/React/ERP/erp_logistio/src/Components/Loader.js",[],"/Users/Mahmoud/Documents/React/ERP/erp_logistio/src/Pages/Orders/OrdersContainer.js",["483","484","485"],"import React from 'react'\nimport Orders from './Orders'\nimport {motion} from 'framer-motion'\nimport useToken from '../../Hooks/useToken';\nimport axios from 'axios'\nimport {uri} from \"../../Url_base\";\nimport Loader from '../../Components/Loader';\nfunction OrdersContainer() {\n    const [orders, setOrders] = React.useState([])\n    const [setToken,getToken] = useToken();\n    const [loading, setLoading] = React.useState(false);\n\n    const [selectedDate, setSelectedDate] = React.useState(new Date());\n    \n    const handleDateChange = (date) => {\n        setSelectedDate(date);\n      };\n    const contentVariant = {\n        hidden:{\n            scale:0,\n        },\n        visible:{\n            scale:1,\n            transition:{\n                type:'tween',\n                duration:0.4,  \n            }\n        },   \n    }\n\n    \n\n    const _fetch = (mounted)=>{\n        setLoading(true);\n        console.log('REFETCH HERE ------>')\n        axios.get(`${uri.link}/orders/filter_by/updated_at-desc`,{\n            headers:{'auth-token':`${getToken()}`}\n        })\n           .then(function (response) {\n               setLoading(false)\n               if(mounted){\n                    console.log('ORDERS DATA',response.data)\n                    setOrders(response.data)\n               }\n           })\n           .catch(function (error) {\n               // handle error\n               setLoading(false)\n               console.log(error);\n           });\n    }\n\n\n\n    React.useEffect(() => {\n        console.log('HERE FETCH ORDERS')\n        let mounted = true;\n            _fetch(mounted)\n       return ()=>{\n           mounted=false\n       }\n    }, [])\n    \n    return (\n        <motion.div variants={contentVariant} initial='hidden' animate='visible'>\n                <Orders orders={orders} fetch={_fetch} loading={loading} handleDateChange={handleDateChange} selectedDate={selectedDate}/>\n        </motion.div>\n    )\n}\n\nexport default OrdersContainer\n","/Users/Mahmoud/Documents/React/ERP/erp_logistio/src/Pages/Orders/Orders.js",["486"],"import { Container, Paper } from '@material-ui/core'\nimport React from 'react'\nimport OrdersTable from '../../Components/Orders/OrdersTable'\nimport CustomSnackBar from '../../Components/CustomSnackBar'\nimport Loader from '../../Components/Loader'\nfunction Orders({orders,fetch,loading,handleDateChange,selectedDate}) {\n\n    return (\n        <Container maxWidth=\"lg\" style={{display:'flex',flexDirection:'column',overflowY:'auto',height:'100%'}} >\n\n            <Paper elevation={3} style={{marginTop:'15px',height:'77vh',marginBottom:'30px',background:'rgb(243,245,247',borderRadius:'15px',padding:'10px',display:'flex',flexDirection:'column',justifyContent:loading?'center':null}}>\n                {\n                    loading?\n                    <Loader />\n                    :\n                    <OrdersTable orders={orders} fetch={fetch} handleDateChange={handleDateChange} selectedDate={selectedDate} />\n                }\n            </Paper>\n        </Container>\n    )\n}\n\nexport default Orders\n","/Users/Mahmoud/Documents/React/ERP/erp_logistio/src/Components/Orders/OrdersTable.js",["487","488","489","490","491","492"],"import React from 'react'\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport LinkIcon from '@material-ui/icons/Link';\nimport { Link } from 'react-router-dom';\nimport { FormControl, Grid, InputLabel, MenuItem, Select, TextField } from '@material-ui/core'\nimport AttachmentsLink from '../AttachmentsLink';\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\nimport CustomRow from './CustomRow';\nimport EmptyArrayHolder from '../EmptyArrayHolder'\nimport CustomModal from './CustomModal';\nimport DateFnsUtils from '@date-io/date-fns';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\nimport 'date-fns';\n\nconst lngc = window.localStorage.getItem('lang')?window.localStorage.getItem('lang'):'EN';\nconst lang = require(`../../Language/${lngc}.json`)\n\nconst useStyles = makeStyles({\n    table: {\n      minWidth: 350,\n    },\n    header:{\n        fontWeight:'bold'\n    }\n  });\nfunction OrdersTable({orders=[],fetch,handleDateChange,selectedDate}) {\n\n\n    console.log('Orders------------->',orders)\n    const classes = useStyles();\n    const [searchInput, setsearchInput] = React.useState('');\n    const [status, setStatus] = React.useState('');\n    const [fullfillment_mode, setfullfillment_mode] = React.useState('')\n\n    console.log('MODE------------->',fullfillment_mode)\n\n    const filtredData = orders.filter(row =>{\n            if(fullfillment_mode==='' && searchInput.length>0 && status==='')\n                return row?.shipping_infos[0]?.country.includes(searchInput)\n\n            if(searchInput.length === 0 && fullfillment_mode!=='' && status==='' )\n                return row.fulfillment_mode===fullfillment_mode\n        \n            if(searchInput.length === 0 && fullfillment_mode==='' && status!=='' )\n                return row.status===status\n            \n            if(searchInput.length === 0 && fullfillment_mode!=='' && status!=='' )\n                return row.status===status && row.fulfillment_mode===fullfillment_mode\n            \n            if(searchInput.length > 0 && fullfillment_mode!=='' && status==='' )\n                return  row.fulfillment_mode===fullfillment_mode && row?.shipping_infos[0]?.country.includes(searchInput)\n            \n            if(searchInput.length > 0 && fullfillment_mode ==='' && status!=='' )\n                return  row.status===fullfillment_mode && row?.shipping_infos[0]?.country.includes(searchInput)\n\n            if(searchInput.length > 0 && fullfillment_mode!=='' && status!=='')\n                return row.fulfillment_mode===fullfillment_mode && row?.shipping_infos[0]?.country.includes(searchInput) && row.status===status\n\n            else\n                return row\n    })\n\n\n    const handleChange = (e)=>{\n        setfullfillment_mode(e.target.value)\n    }\n    const handleChangeStatus = (e)=>{\n        setStatus(e.target.value)\n    }\n    return (\n        <Grid item md={12} style={{marginTop:'5px',height:'485px',overflowY:'auto',marginBottom:'10px'}}>\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\n      <Grid style={{marginBottom:'10px'}}>\n        <KeyboardDatePicker\n          disableToolbar\n          variant=\"inline\"\n          format=\"dd/MM/yyyy\"\n          margin=\"normal\"\n          id=\"date-picker-inline\"\n          label={lang.date}\n          value={selectedDate}\n          onChange={handleDateChange}\n          KeyboardButtonProps={{\n            'aria-label': 'change date',\n          }}\n        />\n        </Grid>\n        </MuiPickersUtilsProvider>\n                            <TextField size='small' id=\"standard-basic\" label={lang.country} style={{width:'300px',marginLeft:'5px',marginBottom:'20px'}} onChange={(e)=>setsearchInput(e.target.value)} />\n                            <FormControl variant=\"outlined\" size='small' style={{width:'250px',float:'right',marginTop:'7px'}}>\n                                    <InputLabel id=\"demo-simple-select-outlined-label\">{lang.fullfillment_status}</InputLabel>\n                                            <Select\n                                            \n                                            labelId=\"demo-simple-select-outlined-label\"\n                                            id=\"demo-simple-select-outlined\"\n                                            value={status}\n                                            onChange={handleChangeStatus}\n                                            label=\"Fullfillment Status\">\n                                                <MenuItem value=\"\">\n                                                    <em>{lang.none}</em>\n                                                </MenuItem>\n                                                <MenuItem value={'unfulfilled'}>{lang.unfulfilled}</MenuItem>\n                                                <MenuItem value={'fulfilled'}>{lang.fulfilled}</MenuItem>\n                                            </Select>\n                            </FormControl>\n                            <FormControl variant=\"outlined\" size='small' style={{width:'250px',float:'right',marginTop:'7px',marginRight:'20px'}}>\n                                    <InputLabel id=\"demo-simple-select-outlined-label\">{lang.fullfillment_mode}</InputLabel>\n                                            <Select\n                                            \n                                            labelId=\"demo-simple-select-outlined-label\"\n                                            id=\"demo-simple-select-outlined\"\n                                            value={fullfillment_mode}\n                                            onChange={handleChange}\n                                            label=\"Fullfillment mode\">\n                                                <MenuItem value=\"\">\n                                                    <em>{lang.none}</em>\n                                                </MenuItem>\n                                                <MenuItem value={'fulfill_all'}>{lang.fulfill_all}</MenuItem>\n                                                <MenuItem value={'partially_fulfilled'}>{lang.partial_fulfill}</MenuItem>\n                                            </Select>\n                            </FormControl>\n                {\n                    orders.length>0?\n                    <TableContainer component={Paper}>\n                    <Table className={classes.table} aria-label=\"simple table\" h>\n                    <TableHead >\n                        <TableRow>\n                            <TableCell align='left' className={classes.header} >#ID</TableCell>\n                            <TableCell align='left' className={classes.header} >{lang.shipping_adr}</TableCell>\n                            <TableCell align='center' className={classes.header} >{lang.client_name}</TableCell>\n                            <TableCell align='center' className={classes.header} >{lang.country} </TableCell>\n                            <TableCell align='center' className={classes.header} >{lang.status}</TableCell>\n                            <TableCell align='center' className={classes.header} >{lang.fullfillment_mode}</TableCell>\n                            <TableCell align='center' className={classes.header} >{lang.items_number}</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {filtredData.map((row,index) => (\n                                   <CustomRow row={row} fetch={fetch}/>\n                        ))}\n                    </TableBody>\n                    </Table>\n                </TableContainer>\n                :\n\n                <EmptyArrayHolder text={lang.no_orders} />\n                }\n               \n      </Grid>\n    )\n}\n\nexport default OrdersTable\n","/Users/Mahmoud/Documents/React/ERP/erp_logistio/src/Components/Orders/CustomRow.js",["493","494","495","496","497","498","499","500","501","502","503","504","505","506","507","508","509","510","511","512","513","514","515","516","517","518"],"import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport LinkIcon from '@material-ui/icons/Link';\nimport { Link } from 'react-router-dom';\nimport { Button, Grid, TextField, CircularProgress, IconButton } from '@material-ui/core'\nimport AttachmentsLink from '../AttachmentsLink';\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\nimport axios from 'axios'\nimport {uri} from '../../Url_base'\nimport useToken from '../../Hooks/useToken';\nimport Swal from 'sweetalert2'\nimport Avatar from '@material-ui/core/Avatar';\nimport NotificationsActiveIcon from '@material-ui/icons/NotificationsActive';\nimport EditIcon from '@material-ui/icons/Edit';\nimport SaveIcon from '@material-ui/icons/Save';\nimport {motion} from 'framer-motion';\nimport productPlaceHolder from '../../Assets/img/productPlaceHolder.png'\nimport CustomModal from './CustomModal';\n\nconst lngc = window.localStorage.getItem('lang')?window.localStorage.getItem('lang'):'EN';\nconst lang = require(`../../Language/${lngc}.json`)\n\n\nfunction CustomRow({row,fetch,productId}) {\n  const [open, setOpen] = React.useState(false);\n\nconst handleClose = ()=>{\n    setOpen(false)\n}\n\nconst handleOpen = ()=>{\n  setOpen(true)\n}\n    \n\nconsole.log('ROWWW CUSTOM -> ',row)\n\n    \n    \n  \n\n    return (\n      <>\n              <TableRow key={row} hover onClick={handleOpen} style={{cursor:'pointer'}}>\n              <TableCell align='center' key={'ac1'} >\n                  {row.order_id?row.order_id:'-'}\n              </TableCell>\n              <TableCell align='center' key={'ac1'} >\n                  {row.shipping_infos[0].address}\n              </TableCell>\n              <TableCell align='center' key={'ac1'} >\n                  {`${row.shipping_infos[0].first_name} ${row.shipping_infos[0].last_name}` }\n              </TableCell>\n              <TableCell align='center' key={'ac1'} >\n                  {`${row.shipping_infos[0].country} / ${row.shipping_infos[0].city}`}\n              </TableCell>\n              <TableCell align='center' key={'ac1'} >\n                  {row.status}\n              </TableCell>\n              <TableCell align='center' key={'ac1'} >\n                  {row.fulfillment_mode}\n              </TableCell>\n              <TableCell align='center' key={'ac1'} >\n                  {row.order_items.length}\n              </TableCell>\n          </TableRow>\n                      <CustomModal open={open} handleClose={handleClose} order={row} fetch={fetch} />\n</>\n    )\n}\n\nexport default CustomRow\n","/Users/Mahmoud/Documents/React/ERP/erp_logistio/src/Components/Orders/CustomModal.js",["519","520","521","522","523"],"import React from 'react'\nimport Modal from '@material-ui/core/Modal';\nimport { Grid, Paper, TextField,Button } from '@material-ui/core';\nimport { Language, Rowing } from '@material-ui/icons';\nimport AddressTable from './AddressTable';\nimport OrderItem from './OrderItem';\nimport {motion} from 'framer-motion'\nimport axios from 'axios'\nimport {uri} from \"../../Url_base\";\nimport useToken from '../../Hooks/useToken';\nimport Swal from 'sweetalert2'\nimport CustomSnackbar from '../CustomSnackBar';\nimport InfoIcon from '@material-ui/icons/Info';\nconst lngc = window.localStorage.getItem('lang')?window.localStorage.getItem('lang'):'EN';\nconst lang = require(`../../Language/${lngc}.json`);\n\n\n\n\nconst reducer = (state,action)=>{\n    switch (action.type) {\n        case 'tracking':\n            return {...state,tracking_id:action.value}\n            case 'price':\n                return {...state,order_price:action.value}\n        \n        default:\n            return state\n    }\n}\nfunction CustomModal({open,handleClose,order,fetch}) {\n\n    const [status, setStatus] = React.useState('');\n    const [setToken,getToken] = useToken();\n    const initOrderInfo = {\n        tracking_id:order.tracking_number?order.tracking_number:'',\n        order_price:order.shipping_cost?order.shipping_cost:0\n    };\n    const [orderInfo, dispatch] = React.useReducer(reducer, initOrderInfo)\n\n    const spanColorbg = {\n        background:'white',\n        height:'30px',\n        borderRadius:'8px',\n        width:'100%',\n        display:'flex',\n        alignItems:'center',\n        padding:'5px'\n    }\n\n    const spanColorType = {\n        background:'white',\n        height:'30px',\n        borderRadius:'8px',\n        width:'100%',\n        display:'flex',\n        alignItems:'center',\n        padding:'5px',\n        marginBottom:'10px',\n        marginTop:'10px'\n\n    }\n\n\n    const _updateOrder = ()=>{\n    axios.patch(`${uri.link}/orders/`, \n\t    { \n            id:order._id,\n\t\t    tracking: orderInfo.tracking_id, \n\t\t    cost: orderInfo.order_price\n\t    }, \n\t{\n        headers:{'auth-token':`${getToken()}`}\n\n    }).then(res=>{\n        if(res.status===200){\n            fetch(true);\n            setStatus(200)\n        }\n                // return  <CustomSnackbar  content='Order updated!!' type=\"success\"/>\n            else\n            setStatus('error')\n                // return <CustomSnackbar  content='Ops, order update failed!' type=\"error\"/>\n\n    })\n    .catch(function (error) {\n        // handle error\n        handleClose()\n        console.log(error);\n        Swal.fire({\n            icon: 'error',\n            title: 'Oops...',\n            text: 'Something went wrong!',\n          })\n          \n          \n    });\n    }\n\n    const isItemDS = ()=>{\n        let isValid = false\n        order.order_items.map(item=>{\n            if(item.product.type_shopping==='ds')\n                isValid = true;\n            else\n                isValid = false;\n        })\n        return isValid\n    }\n\n\n    const create_purchase = ()=>{\n        console.log('create purchase ehre')\n    }\n\n    // const get_client_store = ()=>{\n    //    let storeId =  order.order_items[0].store_id;\n    //    let store = order.client.accounts.filter(elem => elem.id===storeId);\n    //    return `${store.name} ${store.url?`(${store.url})`:''}`\n\n    // }\n\n    console.log(\"ORDER --------->\",order)\n    return (\n        <Modal\n            open={open}\n            onClose={handleClose}\n            style={{display:'flex',justifyContent:'center',alignItems:'center',overflowY:'auto'}}\n\n        >\n            \n            \n            <Grid item md={10} >\n                <Paper elevation={3} style={{display:'flex', padding:'20px',overflowY:'auto',height:'650px',background:'rgb(243,245,247)',flexDirection:'column'}}>\n                    <h1 style={{color:'#303030',opacity:'90%'}}>{lang.order} {`#${order.order_id}`}</h1>\n                    {\n                status===200?\n                <CustomSnackbar  content='Order updated!!' type=\"success\"/>\n                :\n                status==='error'?\n                <CustomSnackbar  content='Ops, order update failed!' type=\"error\"/>\n                : null\n            }\n            \n                    <Grid item md={12} style={{display:'flex',justifyContent:\"space-around\",maxHeight:'50px',marginTop:'7px',marginBottom:'7px'}}>\n                        <Grid item md={4}><span style={spanColorbg}><b>{lang.fullfillment_mode} </b> : {order.fulfillment_mode}</span></Grid>\n                        <Grid item md={4}><span style={spanColorbg}><b>{lang.fullfillment_status}</b> : {order.status}</span></Grid>\n                    </Grid>\n\n                    <Grid item md={4} >\n                        <span style={spanColorType}><InfoIcon style={{marginRight:'10px',color:'rgb(146,203,247)'}}/><b>{lang.shipping_type} </b> : {order.shipping_type}</span>\n\n                    </Grid>\n                    {\n                        order.status!=='fulfilled' && isItemDS() && \n                        <Button variant=\"contained\" style={{textTransform:'capitalize',fontWeight:'bold', marginBottom:'10px'}} color='default' onClick={create_purchase}>Create purchase</Button>\n                    }\n\n                    <Grid item md={12} style={{display:order.fulfillment_mode==='fulfill_all'?'flex':'none',background:'white',borderRadius:'8px',flexDirection:'column',padding:'10px',maxHeight:'400px',marginBottom:'10px'}}>\n                            <span style={{color:'#303030',opacity:'60%',fontWeight:'bold',fontSize:'18px',marginBottom:'10px'}}>{lang.order_info}</span>\n                            <span style={{marginLeft:'7px',marginBottom:'7px',alignItems:'center', display:'flex'}}><b>{lang.track_number}</b> :   <TextField defaultValue={order.tracking_number}  size='small'  onChange={(e)=>dispatch({type:'tracking',value:e.target.value})} />\n </span>\n                            <span style={{marginLeft:'7px',marginBottom:'7px',alignItems:'center', display:'flex'}}><b>{lang.shipping_price}</b> :   <TextField defaultValue={order.shipping_cost}  size='small' onChange={(e)=>dispatch({type:'price',value:e.target.value})} />\n </span>\n                        \n <motion.Button\n                    \n                    whileHover={{scale:1.1 }}\n                            variant=\"contained\"\n                            \n                            style={{marginTop:'15px'}}\n                            onClick={_updateOrder}\n                            style={{width:'300px',alignSelf:'center',background:'rgb(65,84,179)',border:'0px',borderRadius:'5px',height:'30px',marginTop:'15px',color:'white',cursor:'pointer',fontWeight:'bold'}}\n                        >\n                            {lang.save_it}\n                    </motion.Button>\n\n                    </Grid>\n                    <Grid item md={12} style={{display:'flex',background:'white',borderRadius:'8px',flexDirection:'column',padding:'10px',maxHeight:'400px',marginBottom:'10px'}}>\n                            <span style={{color:'#303030',opacity:'60%',fontWeight:'bold',fontSize:'18px',marginBottom:'10px'}}>{lang.logitio_client}</span>\n                            <span style={{marginLeft:'7px',marginBottom:'7px'}}><b>{lang.logistio_client_store}</b> : maaa </span>\n                            <span style={{marginLeft:'7px',marginBottom:'7px'}}><b>{lang.logistio_client_username}</b> : {order.client.username} </span>\n                            <span style={{marginLeft:'7px',marginBottom:'7px'}}><b>{lang.logistio_client_fullname}</b> : {`${order.client.first_name} ${order.client.last_name}` } </span>\n                            <span style={{marginLeft:'7px',marginBottom:'7px'}}><b>{lang.logistio_client_email}</b> : {order.client.email} </span>\n\n\n                    </Grid>\n                    <Grid item md={12} style={{display:'flex',background:'white',borderRadius:'8px',flexDirection:'column',padding:'10px',maxHeight:'400px'}}>\n                            <span style={{color:'#303030',opacity:'60%',fontWeight:'bold',fontSize:'18px',marginBottom:'10px'}}>{lang.cli_info}</span>\n                            <span style={{marginLeft:'7px',marginBottom:'7px'}}><b>{lang.cli_email}</b> : {order.shipping_infos[0].email} </span>\n                            <span style={{marginLeft:'7px',marginBottom:'7px'}}><b>{lang.cli_fn}</b> : {order.shipping_infos[0].first_name} </span>\n                            <span style={{marginLeft:'7px',marginBottom:'7px'}}><b>{lang.cli_ln}</b> : {order.shipping_infos[0].last_name} </span>\n\n                            <span style={{color:'#303030',opacity:'60%',fontWeight:'bold',fontSize:'15px',marginBottom:'10px',marginTop:'15px'}}>{lang.shippingInfo}</span>\n\n                                <AddressTable adrs={order.shipping_infos} />\n\n                    </Grid>\n                            <span style={{color:'#303030',opacity:'60%',fontWeight:'bold',fontSize:'18px',marginBottom:'10px',marginTop:'10px'}}>{lang.order_items}</span>\n                            {\n                                order.order_items.map(row=>{\n                                        return   <OrderItem product={row} disabled={order.fulfillment_mode==='fulfill_all'?true:false} order_id={order._id} fetch={fetch} />\n\n                                })\n                            }\n\n                </Paper>\n            </Grid>\n      </Modal>\n    )\n}\n\nexport default CustomModal\n","/Users/Mahmoud/Documents/React/ERP/erp_logistio/src/Components/Orders/AddressTable.js",["524","525","526","527","528","529","530"],"import React from 'react'\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport LinkIcon from '@material-ui/icons/Link';\nimport { Link } from 'react-router-dom';\nimport { Grid, TextField } from '@material-ui/core'\nimport AttachmentsLink from '../AttachmentsLink';\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\nimport CustomRow from './CustomRow';\nimport EmptyArrayHolder from '../EmptyArrayHolder'\nimport CustomModal from './CustomModal';\nconst lngc = window.localStorage.getItem('lang')?window.localStorage.getItem('lang'):'EN';\nconst lang = require(`../../Language/${lngc}.json`)\n\nconst useStyles = makeStyles({\n    table: {\n      minWidth: 350,\n    },\n    header:{\n        fontWeight:'bold'\n    }\n  });\nfunction AddressTable({adrs=[]}) {\n    const classes = useStyles();\n\n\n    // const filtredData = stocks.filter(row =>{\n    //     try {\n    //         return row.product.name.includes(searchInput)\n\n    //     } catch (error) {\n    //         throw new Error('Error appeared while filtring data')\n    //     }\n    // })\n    return (\n        <Grid item md={12} style={{marginTop:'5px',height:'385px',overflowY:'auto',marginBottom:'10px',padding:'5px'}}>\n                \n                {\n                    adrs.length>0?\n                    <TableContainer component={Paper} style={{background:'rgb(243,245,247)'}}>\n                    <Table className={classes.table} aria-label=\"simple table\" h>\n                    <TableHead >\n                        <TableRow>\n                            <TableCell align='left' className={classes.header} >{lang.adr}</TableCell>\n                            <TableCell align='center' className={classes.header} >{lang.country}</TableCell>\n                            <TableCell align='center' className={classes.header} >{lang.city}</TableCell>\n                            <TableCell align='center' className={classes.header} >{lang.zip_code}</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {adrs.map((row,index) => (\n                                   <TableRow>\n                                        <TableCell align='left'  >{row.address}</TableCell>\n                                        <TableCell align='center'  >{row.country}</TableCell>\n                                        <TableCell align='center'  >{row.city} </TableCell>\n                                        <TableCell align='center'  >{row.zip_code}</TableCell>\n                                    </TableRow>\n                               \n                        ))}\n                    </TableBody>\n                    </Table>\n                </TableContainer>\n                :\n\n                <EmptyArrayHolder text=\"No Address here \" />\n                }\n               \n      </Grid>\n    )\n}\n\nexport default AddressTable\n","/Users/Mahmoud/Documents/React/ERP/erp_logistio/src/Components/Orders/OrderItem.js",["531","532","533","534","535","536","537","538","539","540","541","542","543","544","545","546","547","548","549","550"],"import React from 'react'\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Avatar from '@material-ui/core/Avatar';\nimport AccordionActions from '@material-ui/core/AccordionActions';\nimport Button from '@material-ui/core/Button';\nimport LinkIcon from '@material-ui/icons/Link';\nimport IconButton from '@material-ui/core/IconButton';\nimport Switch from '@material-ui/core/Switch';\nimport { withStyles } from '@material-ui/core/styles';\nimport SaveAltIcon from '@material-ui/icons/SaveAlt';\nimport ArchiveIcon from '@material-ui/icons/Archive';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport WatchLaterIcon from '@material-ui/icons/WatchLater';\nimport LocalShippingIcon from '@material-ui/icons/LocalShipping';\nimport Paper from '@material-ui/core/Paper';\nimport CheckIcon from '@material-ui/icons/Check';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport PaymentIcon from '@material-ui/icons/Payment'; \nimport LocalOfferIcon from '@material-ui/icons/LocalOffer';\nimport Variants from './Variants'\nimport { TextField } from '@material-ui/core';\nimport {motion} from 'framer-motion'\nimport axios from 'axios'\nimport Swal from 'sweetalert2'\nimport useToken from '../../Hooks/useToken';\nimport {uri} from '../../Url_base'\nimport CustomSnackbar from '../CustomSnackBar';\nconst lngc = window.localStorage.getItem('lang')?window.localStorage.getItem('lang'):'EN';\nconst lang = require(`../../Language/${lngc}.json`)\n\n\n\nconst reducer = (state,action)=>{\n    switch (action.type) {\n        case 'tracking':\n            return {...state,tracking_id:action.value}\n            case 'price':\n                return {...state,order_price:action.value}\n        \n        default:\n            return state\n    }\n}\nfunction OrderItem({product,disabled,order_id,fetch}) {\n    const initItemInfo = {\n        tracking_id:product.tracking_number?product.tracking_number:'',\n        order_price:product.shipping_cost?product.shipping_cost:0\n    };\n    const [setToken,getToken] = useToken();\n    const [status, setStatus] = React.useState('')\n    const [itemInfo, dispatch] = React.useReducer(reducer, initItemInfo)\n\n    const _updateItem = ()=>{\n        axios.patch(`${uri.link}/orders/`, \n            { \n                id:order_id,\n                item:{\n                    id:product._id,\n                    tracking: itemInfo.tracking_id, \n                    cost: itemInfo.order_price\n                }\n                            }, \n        {\n            headers:{'auth-token':`${getToken()}`}\n    \n        }).then(res=>{\n                    res.status===200?\n                    setStatus(200)\n                    // <CustomSnackbar  content='Order updated!' type=\"success\"/>\n                    :\n                    setStatus('error')\n                    fetch(true)\n                    // <CustomSnackbar  content='Ops, order update failed!' type=\"error\"/>\n\n        })\n        .catch(function (error) {\n            // handle error\n            console.log(error);\n            setStatus('error')\n            // <CustomSnackbar  content='Ops, Server Error!' type=\"error\"/>\n\n              \n        });\n        }\n    return (\n\n        <Accordion >\n            {\n                status===200?\n                     <CustomSnackbar  content='Order updated!' type=\"success\"/>\n                :\n                status==='error'?\n                     <CustomSnackbar  content='Ops, order update failed!' type=\"error\"/>\n                :\n                null\n            }\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel1a-content\"\n          id=\"panel1a-header\"\n        >\n            <section style={{width:'100%'}}>\n                <Avatar alt=\"gun\" src={product?.product?.media[0]?.link}  variant='square'/>\n                <Typography>{product.product.name}</Typography>\n            </section>\n            <div style={{marginLeft:'25px',width:'100%',display:'flex',alignItems:'flex-start',justifyContent:'space-between'}}>\n                <section>\n                    <span style={{color:'#303030',opacity:'65%'}}>SKU : </span><span style={{color:'#303030',opacity:'85%',fontWeight:'bold'}}>{product.product.sku}</span>\n                </section>\n            </div>\n\n        </AccordionSummary>\n        <AccordionDetails style={{display:'flex',flexDirection:'column'}}>\n\n        <Grid item md={12} style={{display:disabled?'none':'flex',background:'white',borderRadius:'8px',flexDirection:'column',padding:'10px',maxHeight:'400px',marginBottom:'10px'}}>\n                            <span style={{color:'#303030',opacity:'60%',fontWeight:'bold',fontSize:'18px',marginBottom:'10px'}}>Item information</span>\n                            <span style={{marginLeft:'7px',marginBottom:'7px',alignItems:'center', display:'flex'}}><b>Tracking number</b> :   <TextField  size='small' defaultValue={product.tracking_number} onChange={(e)=>{dispatch({type:'tracking',value:e.target.value})}}   />\n </span>\n                            <span style={{marginLeft:'7px',marginBottom:'7px',alignItems:'center', display:'flex'}}><b>Shipping Price</b> :   <TextField  size='small' defaultValue={product.shipping_cost} onChange={(e)=>{dispatch({type:'price',value:e.target.value})}}/>\n </span>\n                        \n <motion.Button\n                    \n                    whileHover={{scale:1.1 }}\n                            variant=\"contained\"\n                            \n                            style={{marginTop:'15px'}}\n                            onClick={_updateItem}\n                            style={{width:'300px',alignSelf:'center',background:'rgb(65,84,179)',border:'0px',borderRadius:'5px',height:'30px',marginTop:'15px',color:'white',cursor:'pointer',fontWeight:'bold'}}\n                        >\n                            {lang.save}\n                    </motion.Button>\n\n                    </Grid>\n            <section >\n                <span style={{color:'#303030',opacity:'65%',marginRight:'5px',fontWeight:'bold',fontSize:'14px',marginBottom:'10px'}}>{lang.quantity} :                {product.quantity}\n</span>\n              \n                {/* style={{backgroundColor:'#f0f0f2',width:'200px',display:'flex',flexDirection:'column',height:'160px',padding:'10px',marginTop:'10px',justifyContent:'space-around'}} */}\n                {/* <Paper elevation={0}  style={{background:'red',width:'100%'}}  > */}\n                        {/* here */}\n                        <Grid item md={10} style={{width:'100%'}}>\n                            <Variants options={product.product.options} variants={product.product.variants} />\n                        </Grid>\n                {/* </Paper> */}\n            </section>\n           \n        </AccordionDetails>\n\n     \n      </Accordion>\n    )\n}\n\nexport default OrderItem\n","/Users/Mahmoud/Documents/React/ERP/erp_logistio/src/Components/Orders/Variants.js",["551","552","553","554","555","556","557","558","559","560"],"import React from 'react'\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport LinkIcon from '@material-ui/icons/Link';\nimport { Link } from 'react-router-dom';\nimport { Grid, TextField } from '@material-ui/core'\n\nconst lngc = window.localStorage.getItem('lang')?window.localStorage.getItem('lang'):'EN';\nconst lang = require(`../../Language/${lngc}.json`)\n\nconst useStyles = makeStyles({\n    table: {\n      minWidth: 350,\n    },\n    header:{\n        fontWeight:'bold'\n    }\n  });\nfunction Variants({variants=[],options=[]}) {\n    const classes = useStyles();\n\n\n\n    console.log('OPTIONS::::::',options.reverse())\n\n    console.log('VARIANTS::::::',variants)\n    return (\n        // <Grid item md={10} style={{marginTop:'5px',height:'183px',overflowY:'auto'}}>\n                <TableContainer component={Paper} style={{background:'rgb(243,245,247)',width:'100%'}}>\n                <Table aria-label=\"simple table\">\n                <TableHead >\n                    <TableRow>\n                    <TableCell align='left' className={classes.header} >#ID</TableCell>\n                        \n                    {\n                            options.map(elem=>{\n                                if(elem.type==='option1')\n                                return   <TableCell align='center' className={classes.header} >{elem.name}</TableCell>\n\n                            })\n                        }\n                        {\n                            options.map(elem=>{\n                                if(elem.type==='option2')\n                                return   <TableCell align='center' className={classes.header} >{elem.name}</TableCell>\n\n                            })\n                        }\n                        {\n                            options.map(elem=>{\n                                if(elem.type==='option3')\n                                return   <TableCell align='center' className={classes.header} >{elem.name}</TableCell>\n\n                            })\n                        }\n                        {\n                            options.length==1?\n                            <>\n                            <TableCell align='center' className={classes.header} >{'-'}</TableCell>\n                            <TableCell align='center' className={classes.header} >{'-'}</TableCell>\n                            </>\n                            :\n                            options.length==2?\n                            <TableCell align='center' className={classes.header} >{'-'}</TableCell>\n                            :\n                            options.length==0?\n                            <>\n                            <TableCell align='center' className={classes.header} >{'-'}</TableCell>\n                            <TableCell align='center' className={classes.header} >{'-'}</TableCell>\n                            <TableCell align='center' className={classes.header} >{'-'}</TableCell>\n                            </>\n                            :\n                            null\n                        }\n                                 <TableCell align='center' className={classes.header} >{lang.quantity}</TableCell>\n\n\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                        {\n                            variants.map(row=>{\n                               return   <TableRow>\n                                            <TableCell>\n                                                {row?.vid} \n                                            </TableCell>\n\n                                            <TableCell align='center'>\n                                                {row.option1?row.option1:'-'} \n                                            </TableCell>\n\n                                            <TableCell align='center'>\n                                                {row.option2?row.option2:'-'} \n                                            </TableCell>\n\n                                            <TableCell align='center'>\n                                                {row.option3?row.option3:'-'} \n                                            </TableCell>\n\n                                            <TableCell align='center'>\n                                                {row.quantity?row.quantity:'-'} \n                                            </TableCell>\n                                         </TableRow>\n                            })\n                        }\n                </TableBody>\n                </Table>\n            </TableContainer>\n    //   </Grid>\n    )\n}\n\nexport default Variants\n","/Users/Mahmoud/Documents/React/ERP/erp_logistio/src/Components/CustomSnackBar.js",["561","562"],"import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { makeStyles } from '@material-ui/core/styles';\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    '& > * + *': {\n      marginTop: theme.spacing(2),\n    },\n  },\n}));\n\nexport default function CustomSnackbar({content,type}) {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n\n  // const handleClick = () => {\n  //   setOpen(true);\n  // };\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  return (\n      <Snackbar open={open} autoHideDuration={6000} onClose={handleClose} anchorOrigin={{\n        vertical: 'bottom',\n        horizontal: 'left',\n      }}>\n        <Alert onClose={handleClose} severity={type} >\n          {content}\n        </Alert>\n       </Snackbar>\n      /* <Alert severity=\"error\">This is an error message!</Alert>\n      <Alert severity=\"warning\">This is a warning message!</Alert>\n      <Alert severity=\"info\">This is an information message!</Alert>\n      <Alert severity=\"success\">This is a success message!</Alert>  */\n  );\n}","/Users/Mahmoud/Documents/React/ERP/erp_logistio/src/Pages/Purchases/PurchasesContainer.js",["563","564","565"],"import React from 'react'\nimport axios from 'axios'\nimport {uri} from '../../Url_base'\nimport useToken from '../../Hooks/useToken'\nimport Purchases from './Purchases'\nimport {motion} from 'framer-motion'\nfunction PurchasesContainer() {\n    const contentVariant = {\n        hidden:{\n            scale:0,\n        },\n        visible:{\n            scale:1,\n            transition:{\n                type:'tween',\n                duration:0.4,  \n            }\n        },   \n    }\n    const [purchases, setPurchases] = React.useState([])\n     const [loading, setLoading] = React.useState(false)\n     const [setToken,getToken] = useToken();\n\n     const [selectedDate, setSelectedDate] = React.useState(new Date());\n    \n     const handleDateChange = (date) => {\n         setSelectedDate(date);\n       };\n    const _fetch = (mounted)=>{\n        setLoading(true);\n        console.log('REFETCH HERE ------>')\n        axios.get(`${uri.link}/purchases/`,{\n            headers:{'auth-token':`${getToken()}`}\n        })\n           .then(function (response) {\n               setLoading(false)\n               if(mounted){\n                    console.log('PURCHASES DATA',response.data)\n                    setPurchases(response.data)\n               }\n           })\n           .catch(function (error) {\n               // handle error\n               setLoading(false)\n               console.log(error);\n           });\n    }\n\n\n    const fake = [\n        {\n            _id:'PP1',\n            date:'12/3/1200',\n            sku:'p1_r',\n            quantity:40,\n            client:{first_name:'mahmoud',last_name:'omrani'},\n            status:'Pending'\n        },\n        {\n            _id:'PP1',\n            date:'12/3/1200',\n            sku:'p1_r',\n            quantity:40,\n            client:{first_name:'mahmoud',last_name:'omrani'},\n            status:'Pending'\n        },\n        {\n            _id:'PP1',\n            date:'12/3/1200',\n            sku:'p1_r',\n            quantity:40,\n            client:{first_name:'mahmoud',last_name:'omrani'},\n            status:'Pending'\n        },\n        {\n            _id:'PP1',\n            date:'12/3/1200',\n            sku:'p1_r',\n            quantity:40,\n            client:{first_name:'mahmoud',last_name:'omrani'},\n            status:'Pending'\n        }\n    ]\n\n    React.useEffect(() => {\n        console.log('HERE FETCH PURCHASES')\n        let mounted = true;\n            _fetch(mounted)\n       return ()=>{\n           mounted=false\n       }\n    }, [])\n\n    return (\n        <motion.div variants={contentVariant} initial='hidden' animate='visible'>\n            <Purchases data = {purchases} loading={loading} handleDateChange={handleDateChange} selectedDate={selectedDate}/>\n        </motion.div>\n    )\n}\n\nexport default PurchasesContainer\n","/Users/Mahmoud/Documents/React/ERP/erp_logistio/src/Pages/Purchases/Purchases.js",[],"/Users/Mahmoud/Documents/React/ERP/erp_logistio/src/Components/Purchases/PurchasesTable.js",["566","567","568","569","570"],"import React from 'react'\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport LinkIcon from '@material-ui/icons/Link';\nimport { Link } from 'react-router-dom';\nimport { Grid, TextField } from '@material-ui/core'\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\nimport CustomRow from './CustomRow';\nimport DateFnsUtils from '@date-io/date-fns';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\nimport 'date-fns';\nimport EmptyArrayHolder from '../EmptyArrayHolder';\n\n\nconst lngc = window.localStorage.getItem('lang')?window.localStorage.getItem('lang'):'EN';\nconst lang = require(`../../Language/${lngc}.json`)\n\nconst useStyles = makeStyles({\n    table: {\n      minWidth: 350,\n    },\n    header:{\n        fontWeight:'bold'\n    }\n  });\nfunction PurchasesTable({purchases=[],fetch,selectedDate,handleDateChange}) {\n    const classes = useStyles();\n    return (\n        <Grid item md={12} style={{marginTop:'5px',height:'183px',overflowY:'auto',marginBottom:'10px'}}>\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\n      <Grid style={{marginBottom:'10px'}}>\n        <KeyboardDatePicker\n          disableToolbar\n          variant=\"inline\"\n          format=\"dd/MM/yyyy\"\n          margin=\"normal\"\n          id=\"date-picker-inline\"\n          label={lang.date}\n          value={selectedDate}\n          onChange={handleDateChange}\n          KeyboardButtonProps={{\n            'aria-label': 'change date',\n          }}\n        />\n        </Grid>\n        </MuiPickersUtilsProvider>\n        {\n          purchases.length>0?\n        \n                <TableContainer component={Paper}>\n                <Table className={classes.table} aria-label=\"simple table\">\n                <TableHead >\n                    <TableRow>\n                        <TableCell align='left' className={classes.header} >#ID</TableCell>\n                        <TableCell align='center' className={classes.header} >{lang.submission_date}</TableCell>\n                        <TableCell align='center' className={classes.header} >{lang.sku}</TableCell>\n                        <TableCell align='center' className={classes.header} >{lang.client}</TableCell>\n                        <TableCell align='center' className={classes.header} >{lang.status}</TableCell>\n\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {purchases.map((row,index) => (\n                        <CustomRow row={row} key={row} />\n                    ))}\n                </TableBody>\n                </Table>\n            </TableContainer>\n            :\n            <EmptyArrayHolder text={lang.no_purchases} />\n     \n                    }\n      </Grid>\n    )\n}\n\nexport default PurchasesTable\n","/Users/Mahmoud/Documents/React/ERP/erp_logistio/src/Components/Purchases/CustomRow.js",["571","572","573","574","575","576","577","578","579","580","581","582","583","584","585","586","587","588","589","590","591","592","593","594","595","596"],"import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport LinkIcon from '@material-ui/icons/Link';\nimport { Link } from 'react-router-dom';\nimport { Button, Grid, TextField, CircularProgress, IconButton } from '@material-ui/core'\nimport AttachmentsLink from '../AttachmentsLink';\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\nimport axios from 'axios'\nimport {uri} from '../../Url_base'\nimport useToken from '../../Hooks/useToken';\nimport Swal from 'sweetalert2'\nimport Avatar from '@material-ui/core/Avatar';\nimport NotificationsActiveIcon from '@material-ui/icons/NotificationsActive';\nimport EditIcon from '@material-ui/icons/Edit';\nimport SaveIcon from '@material-ui/icons/Save';\nimport {motion} from 'framer-motion';\nimport productPlaceHolder from '../../Assets/img/productPlaceHolder.png'\nimport StatusBadge from '../StatusBadge';\nimport CustomModal from './CustomModal';\n\nconst lngc = window.localStorage.getItem('lang')?window.localStorage.getItem('lang'):'EN';\nconst lang = require(`../../Language/${lngc}.json`)\n\n\nfunction CustomRow({row}) {\n  const [open, setOpen] = React.useState(false);\n\nconst handleClose = ()=>{\n    setOpen(false)\n}\n\nconst handleOpen = ()=>{\n  setOpen(true)\n}\n    \n\nconsole.log('ROWWW CUSTOM -> ',row)\n\n    \n    \n  \n\n    return (\n      <>\n              <TableRow key={row} hover onClick={handleOpen} style={{cursor:'pointer'}}>\n              <TableCell align='left' key={'p1'} >\n                  {row.purchase_id?row.purchase_id:'-'}\n              </TableCell>\n\n              <TableCell align='center' key={'p2'} >\n                  {new Date().toDateString()}\n              </TableCell>\n\n              <TableCell align='center' key={'p3'} >\n                  {row.product.sku}\n              </TableCell>\n\n\n              <TableCell align='center' key={'p5'} >\n                  {`${row.client.first_name} ${row.client.last_name}` }\n              </TableCell>\n\n             \n              <TableCell align='center' key={'p6'} >\n                  <StatusBadge status={row.status} />\n              </TableCell>\n          </TableRow>\n                      <CustomModal  open={open} handleClose={handleClose} purchase={row}  />\n</>\n    )\n}\n\nexport default CustomRow\n","/Users/Mahmoud/Documents/React/ERP/erp_logistio/src/Components/StatusBadge.js",[],"/Users/Mahmoud/Documents/React/ERP/erp_logistio/src/Components/Purchases/CustomModal.js",["597","598","599","600","601","602","603","604","605","606","607","608","609","610","611"],"import React from 'react'\nimport Modal from '@material-ui/core/Modal';\nimport { Grid, Paper, TextField,Button } from '@material-ui/core';\nimport { Language, Rowing } from '@material-ui/icons';\nimport {motion} from 'framer-motion'\nimport axios from 'axios'\nimport {uri} from \"../../Url_base\";\nimport useToken from '../../Hooks/useToken';\nimport Swal from 'sweetalert2'\nimport CustomSnackbar from '../CustomSnackBar';\nimport InfoIcon from '@material-ui/icons/Info';\nimport Avatar from '@material-ui/core/Avatar';\nimport { makeStyles } from '@material-ui/core/styles';\nimport StatusBadge from '../StatusBadge';\nimport VariantsTable from './VariantsTable';\n\nconst useStyles = makeStyles((theme) => ({\n    large: {\n      width: theme.spacing(15),\n      height: theme.spacing(15),\n    },\n  }));\nconst lngc = window.localStorage.getItem('lang')?window.localStorage.getItem('lang'):'EN';\nconst lang = require(`../../Language/${lngc}.json`);\n\n\n\n\n// const reducer = (state,action)=>{\n//     switch (action.type) {\n//         case 'tracking':\n//             return {...state,tracking_id:action.value}\n//             case 'price':\n//                 return {...state,order_price:action.value}\n        \n//         default:\n//             return state\n//     }\n// }\nfunction CustomModal({open,handleClose,purchase}) {\n    const classes = useStyles();\n\n    // const [status, setStatus] = React.useState('');\n    // console.log('aaaaaaaaaaaaaaaaaaaaaaa',order)\n    // const [setToken,getToken] = useToken();\n    // const initOrderInfo = {\n    //     tracking_id:order.tracking_number?order.tracking_number:'',\n    //     order_price:order.shipping_cost?order.shipping_cost:0\n    // };\n    // const [orderInfo, dispatch] = React.useReducer(reducer, initOrderInfo)\n\n    const spanColorbg = {\n        background:'white',\n        height:'30px',\n        borderRadius:'8px',\n        width:'100%',\n        display:'flex',\n        alignItems:'center',\n        padding:'5px'\n    }\n\n    const spanColorType = {\n        background:'white',\n        height:'30px',\n        borderRadius:'8px',\n        width:'100%',\n        display:'flex',\n        alignItems:'center',\n        padding:'5px',\n        marginBottom:'10px',\n        marginTop:'10px'\n\n    }\n\n\n    // const _updateOrder = ()=>{\n    // axios.patch(`${uri.link}/orders/`, \n\t//     { \n    //         id:order._id,\n\t// \t    tracking: orderInfo.tracking_id, \n\t// \t    cost: orderInfo.order_price\n\t//     }, \n\t// {\n    //     headers:{'auth-token':`${getToken()}`}\n\n    // }).then(res=>{\n    //     if(res.status===200){\n    //         fetch(true);\n    //         setStatus(200)\n    //     }\n    //             // return  <CustomSnackbar  content='Order updated!!' type=\"success\"/>\n    //         else\n    //         setStatus('error')\n    //             // return <CustomSnackbar  content='Ops, order update failed!' type=\"error\"/>\n\n    // })\n    // .catch(function (error) {\n    //     // handle error\n    //     handleClose()\n    //     console.log(error);\n    //     Swal.fire({\n    //         icon: 'error',\n    //         title: 'Oops...',\n    //         text: 'Something went wrong!',\n    //       })\n          \n          \n    // });\n    // }\n\n\n    const variant = [\n\n        {option1:'red',option2:'s',option3:'coton'},\n        {option1:'green',option2:'xs',option3:'coton'},\n        {option1:'black',option2:'xl',option3:'coton'},\n        {option1:'red',option2:'s',option3:'coton'},\n        {option1:'green',option2:'xs',option3:'coton'},\n        {option1:'black',option2:'xl',option3:'coton'}\n    ]\n\n    const options  = [\n        {name:'color'},\n        {name:'size'},\n        {name:'type'}\n\n\n    ]\n    return (\n        <Modal\n            open={open}\n            onClose={handleClose}\n            style={{display:'flex',justifyContent:'center',alignItems:'center',overflowY:'auto'}}\n\n        >\n            \n            \n            <Grid item md={10} >\n                <Paper elevation={3} style={{display:'flex', padding:'20px',overflowY:'auto',height:'650px',background:'rgb(243,245,247)',flexDirection:'column'}}>\n                    <h1 style={{color:'#303030',opacity:'90%'}}>{`${lang.purchase} #${purchase.purchase_id}`}</h1>\n                   \n                    <Grid item md={12}>\n                        <span style={{padding:'10px',background:'white',borderRadius:'10px',marginBottom:'35px',fontWeight:'bold'}}>{new Date().toDateString()}</span>\n                        <section style={{display:'flex',padding:'15px',background:'white',borderRadius:'15px',marginTop:'20px'}}>\n                        <Avatar alt=\"Remy Sharp\" src={purchase.product.media[0].link} className={classes.large} variant='square' />\n                        <section style={{display:\"flex\",flexDirection:'column',padding:'10px'}}>\n                            <StatusBadge status={purchase.status} align='center' marginBottom='10px' />\n                            <span><b>{lang.product_name}</b> :{purchase.product.name}  </span>\n                            <span><b>{lang.sku}</b> : {purchase.product.sku} </span>\n                        </section>\n                        </section>\n                        \n                        <h4 style={{color:'#303030',opacity:'90%',marginLeft:'15px'}}>{lang.item_variants}</h4>\n\n                        <section style={{display:'flex',padding:'15px',background:'white',borderRadius:'15px',marginTop:'20px',justifyContent:'center',height:'290px'}}>\n                            {/* <VariantsTable variants={purchase.variants} options={purchase.options} /> */}\n                            <VariantsTable variants={purchase.product_variants} options={purchase.product.options} />\n\n                        </section>\n                    </Grid>\n                </Paper>\n            </Grid>\n      </Modal>\n    )\n}\n\nexport default CustomModal\n","/Users/Mahmoud/Documents/React/ERP/erp_logistio/src/Components/Purchases/VariantsTable.js",["612","613","614","615","616","617","618","619","620","621"],"import React from 'react'\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport LinkIcon from '@material-ui/icons/Link';\nimport { Link } from 'react-router-dom';\nimport { Grid, TextField } from '@material-ui/core'\n\nconst lngc = window.localStorage.getItem('lang')?window.localStorage.getItem('lang'):'EN';\nconst lang = require(`../../Language/${lngc}.json`)\n\nconst useStyles = makeStyles({\n    table: {\n      minWidth: 350,\n      background:'rgb(243,245,247)'\n    },\n    header:{\n        fontWeight:'bold'\n    }\n  });\nfunction VariantsTable({variants=[],options=[]}) {\n    const classes = useStyles();\n\n    const get_header_name = (v)=>{\n            return lang[v]\n    }\n\n    console.log('Options :::',options)\n    return (\n        <Grid item md={10} style={{marginTop:'5px',height:'255px',overflowY:'auto'}}>\n                <TableContainer component={Paper}>\n                <Table  className={classes.table} aria-label=\"simple table\">\n                <TableHead  >\n                    <TableRow>\n                    {\n                            options.map(elem=>{\n                                if(elem.type==='option1')\n                                return   <TableCell align='center' className={classes.header} >{elem.name}</TableCell>\n\n                            })\n                        }\n                        {\n                            options.map(elem=>{\n                                if(elem.type==='option2')\n                                return   <TableCell align='center' className={classes.header} >{elem.name}</TableCell>\n\n                            })\n                        }\n                        {\n                            options.map(elem=>{\n                                if(elem.type==='option3')\n                                return   <TableCell align='center' className={classes.header} >{elem.name}</TableCell>\n\n                            })\n                        }\n                        {\n                            options.length==1?\n                            <>\n                            <TableCell align='center' className={classes.header} >{'-'}</TableCell>\n                            <TableCell align='center' className={classes.header} >{'-'}</TableCell>\n                            </>\n                            :\n                            options.length==2?\n                            <TableCell align='center' className={classes.header} >{'-'}</TableCell>\n                            :\n                            options.length==0?\n                            <>\n                            <TableCell align='center' className={classes.header} >{'-'}</TableCell>\n                            <TableCell align='center' className={classes.header} >{'-'}</TableCell>\n                            <TableCell align='center' className={classes.header} >{'-'}</TableCell>\n                            </>\n                            :\n                            null\n                        }\n             \n                        <TableCell align='center' className={classes.header} >{lang.quantity}</TableCell>\n                        {/* <TableCell align='center' className={classes.header} >{lang.price}</TableCell> */}\n\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {\n                        variants.map(row=>{\n\n                            return <TableRow key={row}>\n                                    \n                                    <TableCell align='center' >\n                                            {row?.option1?row.option1:'-'}\n                                    </TableCell>\n                                    <TableCell align='center'>\n                                            {row?.option2?row.option2:'-'}\n                                    </TableCell>\n                                    <TableCell align='center'>\n                                            {row?.option3?row.option3:'-'}\n                                    </TableCell>\n                                    <TableCell align='center'>\n                                            {row?.quantity?row?.quantity:'-'}\n                                    </TableCell>\n                            </TableRow>\n                        })\n                    }\n                \n\n                </TableBody>\n                </Table>\n            </TableContainer>\n      </Grid>\n    )\n}\n\nexport default VariantsTable\n","/Users/Mahmoud/Documents/React/ERP/erp_logistio/src/Pages/Home/Overview.js",["622","623","624","625","626","627","628","629"],"import { Button, Container, Grid, Paper } from '@material-ui/core'\nimport React,{useEffect,useState,useRef} from 'react'\nimport {ConnectedUser}  from '../../App'\nimport CustomCard from '../../Components/CustomCard'\nimport LocalMallIcon from '@material-ui/icons/LocalMall';\nimport SyncDisabledIcon from '@material-ui/icons/SyncDisabled';\nimport SyncProblemIcon from '@material-ui/icons/SyncProblem';\nimport { Doughnut, Line } from 'react-chartjs-2';\nimport useMonth from '../../Hooks/useMonth'\nimport UpdateIcon from '@material-ui/icons/Update';\nimport SupervisedUserCircleIcon from '@material-ui/icons/SupervisedUserCircle';\nimport { DateRange } from 'react-date-range';\nimport 'react-date-range/dist/styles.css'; // main css file\nimport 'react-date-range/dist/theme/default.css'; // theme css file\nimport '../../Assets/css/Overview.css';\nimport axios from 'axios'\nimport useToken from '../../Hooks/useToken';\nimport {uri} from \"../../Url_base\";\n\nconst lngc = window.localStorage.getItem('lang')?window.localStorage.getItem('lang'):'EN';\nconst lang = require(`../../Language/${lngc}.json`);\n\nfunction useOutsideAlerter(ref, toggleDate) {\n    useEffect(() => {\n      /**\n       * Alert if clicked on outside of element\n       */\n      function handleClickOutside(event) {\n        if (ref.current && !ref.current.contains(event.target)) {\n          toggleDate(false)\n        }\n      }\n      // Bind the event listener\n      document.addEventListener(\"mousedown\", handleClickOutside);\n      return () => {\n        // Unbind the event listener on clean up\n        document.removeEventListener(\"mousedown\", handleClickOutside);\n      };\n    }, [ref]);\n  }\n\nfunction Overview() {\n    const wrapperRef = useRef(null);\n    const [setToken,getToken] = useToken();\n    const [productsStats, setproductsStats] = useState({});\n    const [toggleDate, setToggleDate] = useState(false);\n    const [currentFocus, setCurrentFocus] = useState([]);\n    const [chosedDate, setChosedDate] = useState([{\n        startDate: new Date(),\n        endDate: new Date(),\n        key: 'selection'\n      }]);\n      const [activeBtn, setActiveBtn] = useState(window.localStorage.getItem(\"activeBtn\") ? JSON.parse(window.localStorage.getItem(\"activeBtn\")) : {\n        today: 1, last7days: 0, last30day: 0, last60day: 0, month: 0, other: 0\n      });\n    useOutsideAlerter(wrapperRef, setToggleDate);\n\n    const mnths = [{ num: 0, add: 2 },\n    { num: 1, add: 0 },\n    { num: 2, add: 2 },\n    { num: 3, add: 1 },\n    { num: 4, add: 2 },\n    { num: 5, add: 1 },\n    { num: 6, add: 2 },\n    { num: 7, add: 2 },\n    { num: 8, add: 1 },\n    { num: 9, add: 2 },\n    { num: 10, add: 1 },\n    { num: 11, add: 2 }\n    ]\n\n  const getToAddOnMonths = (int) => {\n    let res = 0;\n    mnths.map(x => {\n      if (x.num === int)\n        res = x.add;\n    })\n    return res\n  }\n     // Handl the choice of the user , date buttons : today , last 7 days , ect ...\n  const buttonHandler = (startDate, endDate) => {\n    setChosedDate([{\n      startDate: startDate,\n      endDate: endDate,\n      key: 'selection'\n    }]);\n    setToggleDate(false)\n    window.localStorage.setItem(\"start\", startDate);\n    window.localStorage.setItem(\"end\", endDate);\n  };\n    const context = React.useContext(ConnectedUser);\n    const data = {\n        labels: ['13/02', '14/02', '15/02', '16/02','17/02', '18/02', '19/02', '20/02','21/02', '22/02', '23/02', '24/02','25/02', '26/02', '27/02'],\n        datasets: [\n          {\n            label: '# Orders this day',\n            data: [12, 19, 3, 5, 2, 3,12, 19, 3, 5, 2, 3,12, 19, 3],\n            fill: false,\n            backgroundColor: 'rgba(36,38,76,0.3)',\n            borderColor: 'rgb(36,38,76)',\n          },\n          \n        ],\n      };\n\n      const data2 = {\n        labels: ['Client one', 'Client two', 'Client three', 'Client four'],\n        datasets: [\n          {\n            label: '# Client Orders',\n            data: [8, 19, 53, 15],\n            fill: false,\n            backgroundColor: ['#16193B','#35478C','#4E7AC7','#7FB2F0'],\n            borderColor: ['#16193B','#35478C','#4E7AC7','#7FB2F0'],\n          },\n        ],\n      };\n      var optionsLine = {\n        responsive:true,\n        // legend: {\n        //     labels: {\n        //        fontSize:12,\n        //        fontColor:'rgb(36,38,76)'\n        //     }\n        // },\n        legend:false,        \n\n        \n        scales: {\n           \n            yAxes: [{\n                gridLines: {\n                    color: \"rgba(0, 0, 0, 0)\",\n                }   \n            }]\n        }\n    }\n    var optionsPie = {\n        responsive:true,\n        legend:false,        \n    }\n\n    //   const options = {\n    //     scales: {\n    //       yAxes: [\n    //         {\n    //           ticks: {\n    //             beginAtZero: true,\n    //           },\n    //         },\n    //       ],\n    //     },\n    //   }\n\n  \n\n\n    const _fetchProducts = (mounted)=>{\n        // setLoading(true);\n        console.log('REFETCH HERE ------>')\n        axios.get(`${uri.link}/stats/overall`,{\n            headers:{'auth-token':`${getToken()}`}\n        })\n           .then(function (response) {\n            //    setLoading(false)\n               if(mounted){\n                    console.log('DASHBOARD DATA',response.data)\n                    // setOrders(response.data)\n                    setproductsStats(response.data)\n               }\n           })\n           .catch(function (error) {\n               // handle error\n            //    setLoading(false)\n               console.log(error);\n           });\n    }\n\n    \n    React.useEffect(() => {\n        let mounted = true;\n        _fetchProducts(mounted)\n       return ()=>{\n           mounted=false\n       }\n    }, [])\n\n\n      useEffect(() => {\n          if(currentFocus[1]===0)\n            setToggleDate(false)\n      }, [currentFocus])\n      \n\n      console.log('CHOSED',chosedDate)\n    return (\n            <Container maxWidth=\"lg\" style={{display:'flex',flexDirection:'column',overflowY:'auto',height:'100%'}}>\n                    <h3>Overview</h3>\n\n                <Grid item md={12} style={{display:'flex',maxHeight:'153px'}}> \n                    <CustomCard type={lang.unfill_orders} number={2408}>\n                        <LocalMallIcon style={{fontSize:'40px',color:'rgb(36,38,76)'}}/>\n                    </CustomCard>\n                    <CustomCard type={lang.refused_products} number={productsStats.refused_prods}>\n                        <SyncDisabledIcon style={{fontSize:'40px',color:'rgb(36,38,76)'}}/>\n                    </CustomCard>\n                    <CustomCard type={lang.pending_products} number={productsStats.pending_prods}>\n                        <SyncProblemIcon style={{fontSize:'40px',color:'rgb(36,38,76)'}}/>\n                    </CustomCard>\n                    <CustomCard type={lang.order_time} number='3 Days'>\n                        <UpdateIcon style={{fontSize:'40px',color:'rgb(36,38,76)'}}/>\n                    </CustomCard>\n                </Grid>\n                <div ref={wrapperRef} style={{marginTop:'50px',width:'220px'}}>\n            <Button style={{background:'#35478C',color:'white'}} variant='contained' onClick={() => setToggleDate(!toggleDate)} >\n\n              {chosedDate[0] !== null\n                ? [\n                  chosedDate[0].startDate.toLocaleString(\"en\", {\n                    month: \"short\",\n                  }),\n                  \" \",\n                  chosedDate[0].startDate.getDate(),\n                  \" \",\n                  chosedDate[0].startDate.getFullYear(),\n                  \"  -  \",\n                  chosedDate[0].endDate && chosedDate[0].endDate.toLocaleString(\"en\", {\n                    month: \"short\",\n                  }),\n                  \" \",\n                  chosedDate[0].endDate && chosedDate[0].endDate.getDate(),\n                  \" \",\n                  chosedDate[0].endDate && chosedDate[0].endDate.getFullYear(),\n                ]\n                : null}\n            </Button>\n                {toggleDate && ( \n                <div style={{ position: \"absolute\" }}>\n                <div className=\"calenderDivStyle\">\n                    <div className=\"btnsCalendar\">\n                        <DateRange\n                            editableDateInputs={true}\n                            moveRangeOnFirstSelection={false}\n                            onRangeFocusChange={item => { setCurrentFocus(item) }}\n                            onChange={item => { setChosedDate([item.selection]); }}\n                            moveRangeOnFirstSelection={false}\n                            ranges={chosedDate}\n                            dragSelectionEnabled={true}\n                            rangeColors={[\"#35478C\"]}\n                        />\n                    </div>\n                    <div className=\"calendarDiv\">\n                    <div className=\"btnCalendarContainer\">\n                      <Button\n\n                        className={activeBtn.today ? \"dateBtns activeBtnDate\" : \"dateBtns\"}\n                        onClick={() => {\n                          buttonHandler(new Date(new Date()),\n\n                            new Date(new Date()));\n                          ;\n                          setActiveBtn({ today: 1, last7days: 0, last30day: 0, last60day: 0, month: 0, other: 0 })\n                          window.localStorage.setItem(\"activeBtn\", JSON.stringify({ today: 1, last7days: 0, last30day: 0, last60day: 0, month: 0, other: 0 }));\n                        }}\n                      >\n                        Today\n      </Button>\n\n                      <Button\n\n                        className={activeBtn.last7days ? \"dateBtns activeBtnDate\" : \"dateBtns\"}\n                        onClick={() => {\n                          buttonHandler(\n                            new Date(new Date(\n                              new Date().getTime() - 6 * 24 * 60 * 60 * 1000\n                            )),\n                            new Date(new Date())\n                          );\n                          setActiveBtn({ today: 0, last7days: 1, last30day: 0, last60day: 0, month: 0, other: 0 })\n                          window.localStorage.setItem(\"activeBtn\", JSON.stringify({ today: 0, last7days: 1, last30day: 0, last60day: 0, month: 0, other: 0 }));\n\n                        }}\n                      >\n                        Last 7 Days\n      </Button>\n\n                      <Button\n\n                        className={activeBtn.last30day ? \"dateBtns activeBtnDate\" : \"dateBtns\"}\n                        onClick={() => {\n                          buttonHandler(\n                            new Date(new Date(\n                              new Date().getTime() - 29 * 24 * 60 * 60 * 1000\n                            )),\n                            new Date(new Date())\n                          );\n                          setActiveBtn({ today: 0, last7days: 0, last30day: 1, last60day: 0, month: 0, other: 0 })\n                          window.localStorage.setItem(\"activeBtn\", JSON.stringify({ today: 0, last7days: 0, last30day: 1, last60day: 0, month: 0, other: 0 }));\n\n                        }}\n                      >\n                        Last 30 Days\n      </Button>\n\n                      <Button\n\n                        className={activeBtn.last60day ? \"dateBtns activeBtnDate\" : \"dateBtns\"}\n                        onClick={() => {\n                          buttonHandler(\n                            new Date(new Date(\n                              new Date().getTime() - 59 * 24 * 60 * 60 * 1000\n                            )),\n                            new Date(new Date())\n                          );\n                          setActiveBtn({ today: 0, last7days: 0, last30day: 0, last60day: 1, month: 0, other: 0 })\n                          window.localStorage.setItem(\"activeBtn\", JSON.stringify({ today: 0, last7days: 0, last30day: 0, last60day: 1, month: 0, other: 0 }));\n\n                        }}\n                      >\n                        Last 60 Days\n      </Button>\n\n                      <Button\n\n                        className={activeBtn.month ? \"dateBtns activeBtnDate\" : \"dateBtns\"}\n                        onClick={() => {\n                          buttonHandler(\n                            new Date(new Date(\n                              new Date().getFullYear(),\n                              new Date().getMonth(),\n                              getToAddOnMonths(new Date().getMonth())\n                            )),\n\n                            new Date(new Date())\n                          );\n                          setActiveBtn({ today: 0, last7days: 0, last30day: 0, last60day: 0, month: 1, other: 0 })\n                          window.localStorage.setItem(\"activeBtn\", JSON.stringify({ today: 0, last7days: 0, last30day: 0, last60day: 0, month: 1, other: 0 }));\n\n                        }}\n                      >\n                        This month\n      </Button>\n                    </div>\n                    </div>    \n                </div>\n                </div>)}\n                </div>\n               \n                <div style={{display:'flex',marginTop:'25px',justifyContent:'space-around'}}>\n                    <Grid item md={6} style={{padding:'10px'}}> \n                        {/* <h3 style={{color:'rgb(36,38,76)'}}>Last 15 days Orders </h3> */}\n                        <Paper elevation={3} style={{display:'flex',height:'340px',borderRadius:'10px',background:'rgb(243,245,247)',flexDirection:'column',padding:'10px 10px 30px 10px'}}>\n                            <section style={{display:'flex',width:'100%',justifyContent:'space-between',alignItems:'center',height:'30px',marginBottom:'10px'}}>\n                                <h3 style={{color:'rgb(36,38,76)'}}>Last 15 days Orders </h3>\n                                <section style={{display:'flex',justifyContent:'center',alignItems:'center'}}>\n                                    <div style={{background:'rgb(36,38,76)',width:'7px',height:'7px',borderRadius:'100%',marginRight:'5px'}}></div>\n                                    <span style={{fontSize:'13px',color:'rgb(36,38,76)'}}>{lang.orders_this_day}</span>\n                                </section>\n                            </section>\n                            <Line\n                                options={optionsLine}\n                                redraw\n                                data={data}\n                            />\n                        </Paper>\n                    </Grid>\n\n                    <Grid item md={6} style={{padding:'10px'}}>\n \n                        <Paper elevation={3} style={{display:'flex',height:'340px',borderRadius:'10px',background:'rgb(243,245,247)',flexDirection:'column',padding:'10px 10px 30px 10px'}}>\n                           \n                    <div style={{height:'20px',alignItems:'center',display:'flex',padding:'8px',width:'90%',justifyContent:'flex-start'}}>\n                                <SupervisedUserCircleIcon  style={{marginRight:'10px',color:'rgb(36,38,76)',fontSize:'30px'}}/>\n                                <span style={{fontSize:'20px',color:'#303030',color:'rgb(36,38,76)'}}><b>{lang.top_clients}</b></span>\n                            </div>\n                            <Grid item md={12} style={{marginTop:'10px',display:'flex'}}>\n                                <secion style={{width:'75%',justifyContent:'center',alignItems:'center',display:'flex'}}>\n                                    <Doughnut data={data2} options={optionsPie}/>\n                                </secion>\n                                <section style={{width:'25%',justifyContent:'center',alignItems:'flex-start',display:'flex',flexDirection:'column'}}>\n                                    <li  style={{color:'#16193B',fontSize:'25px',listStylePosition:'inside'}}><span style={{fontSize:'15px',color:'rgb(36,38,76)'}}>{lang.client1}</span></li>\n                                    <li  style={{color:'#35478C',fontSize:'25px'}}><span style={{fontSize:'15px',color:'rgb(36,38,76)'}}>{lang.client2}</span></li>\n                                    <li  style={{color:'#4E7AC7',fontSize:'25px'}}><span style={{fontSize:'15px',color:'rgb(36,38,76)'}}>{lang.client3}</span></li>\n                                    <li  style={{color:'#7FB2F0',fontSize:'25px'}}><span style={{fontSize:'15px',color:'rgb(36,38,76)'}}>{lang.client4}</span></li>\n                                </section>\n                            </Grid>\n                        </Paper>\n                    </Grid>\n                </div>\n            </Container>\n    )\n}\n\nexport default Overview\n\n\n// <div style={{background:'white',borderRadius:'5px',height:'20px',alignItems:'center',display:'flex',padding:'8px',width:'90%'}}>\n//                                 <UpdateIcon style={{marginRight:'10px'}}/>\n//                                 <span><b>Average order treatment time: </b> 2days</span>\n//                             </div>","/Users/Mahmoud/Documents/React/ERP/erp_logistio/src/Components/CustomCard.js",["630","631","632","633"],"import { Divider, Grid, Paper } from '@material-ui/core'\nimport React from 'react'\nimport LocalMallIcon from '@material-ui/icons/LocalMall';\nimport {motion} from 'framer-motion'\nfunction CustomCard({number,type,children}) {\n\n    const contentVariant = {\n        hidden:{\n            scale:0,\n        },\n        visible:{\n            scale:1,\n            transition:{\n                type:'tween',\n                duration:0.4,  \n            }\n        },   \n    }\n    return (\n        <Grid item md = {3} style={{borderRadius:'10px',marginLeft:'15px',height:'130px'}}>\n            <Paper elevation={3} style={{display:'flex',height:'130px',borderRadius:'10px',padding:'10px',background:'rgb(243,245,247)'}}>\n                <section style={{width:'75%',display:'flex',flexDirection:'column',justifyContent:'center',height:'100%',alignItems:'center',marginTop:'5px'}}>\n                        <span style={{paddingLeft:'10px',fontWeight:'bold',fontSize:'25px',color:'#303030'}}>{number?number:'-'}</span>\n                        <span style={{paddingLeft:'10px',fontSize:'13px',color:'#303030',opacity:'60%'}}><b>{type}</b></span>\n                </section>\n                \n                <section style={{width:'25%',display:'flex',justifyContent:'center',flexDirection:'column',alignItems:'center',height:'100%',marginBottom:'5px'}}>\n                    <div style={{background:'white',width:'60px',height:'60px',borderRadius:'100%',display:'flex',flexDirection:'column',justifyContent:'center',alignItems:'center'}}>\n                        {/* <LocalMallIcon style={{fontSize:'40px',color:'white'}}/> */}\n                        {children}\n                    </div>\n                </section>\n                {/* <Divider variant=\"middle\" />\n                */}\n                \n            </Paper>\n        </Grid>\n           \n    )\n}\n\nexport default CustomCard\n","/Users/Mahmoud/Documents/React/ERP/erp_logistio/src/Hooks/useMonth.js",["634"],"import React from 'react'\n\nfunction useMonth() {\n    const months = [\n        {\n            key:0,\n            name: \"January\"\n        },\n        {\n            key:1,\n            name: \"February\"\n        },\n        {\n            key:2,\n            name: \"March\"\n        },\n        {\n            key:3,\n            name: \"April\"\n        },\n        {\n            key:4,\n            name: \"May\"\n        },\n        {\n            key:5,\n            name: \"June\"\n        },\n        {\n            key:6,\n            name: \"July\"\n        },\n        {\n            key:7,\n            name: \"August\"\n        },\n        {\n            key:8,\n            name: \"September\"\n        },\n        {\n            key:9,\n            name: \"October\"\n        },\n        {\n            key:10,\n            name: \"November\"\n        },\n        {\n            key:11,\n            name: \"December\"\n        }\n    ]\n    const get_month = ()=>{\n        let  currentMonth = new Date().getMonth();\n       return  months.filter(elem=> {\n            return elem.key===currentMonth\n        })[0].name\n\n    }\n\n    return  get_month()\n}\n\nexport default useMonth\n","/Users/Mahmoud/Documents/React/ERP/erp_logistio/src/Pages/Settings/Profile.js",["635","636","637","638","639","640","641"],"import { Container, Paper, TextField, Button, Grid, Avatar } from '@material-ui/core'\nimport React from 'react'\nimport {ConnectedUser}  from '../../App'\nimport {motion} from 'framer-motion'\nimport { makeStyles } from '@material-ui/core/styles';\nimport CustomSnackbar from '../../Components/CustomSnackBar';\nimport img from '../../Assets/img/Logistio - logomark.png'\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport AlternateEmailIcon from '@material-ui/icons/AlternateEmail';\nimport  avatar from '../../Assets/img/avatar.png';\nimport axios from 'axios';\nimport {uri} from \"../../Url_base\";\nimport useToken from '../../Hooks/useToken';\nimport { useLocation } from \"react-router-dom\";\n\nconst lngc = window.localStorage.getItem('lang')?window.localStorage.getItem('lang'):'EN';\nconst lang = require(`../../Language/${lngc}.json`)\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      display: 'flex',\n      '& > *': {\n        margin: theme.spacing(1),\n      },\n    },\n    small: {\n      width: theme.spacing(3),\n      height: theme.spacing(3),\n    },\n    large: {\n      width: theme.spacing(20),\n      height: theme.spacing(20),\n      padding:'15px',\n      background:'white'\n\n    },\n  }));\n  \nconst initPassword = {\n    current:'',\n    new:'',\n    confirm:'',\n    error:''\n}\nconst reducer = (state,action)=>{\n        switch (action.type) {\n            case 'current':\n                return {...state,current:action.value}\n                case 'new':\n                    return {...state,new:action.value}\n                    case 'confirm':\n                        return {...state,confirm:action.value}\n                        case 'error':\n                            return {...state,error:action.value}         \n            default:\n                return state\n        }\n}\nfunction Profile() {\n    const context = React.useContext(ConnectedUser);\n    const [passwords, dispatch] = React.useReducer(reducer, initPassword)\n    const [status, setStatus] = React.useState('');\n    const [setToken,getToken] = useToken();\n    const location = useLocation();\n    console.log('CONETXT HERE',context)\n    const styleInputPassword = {\n        marginBottom:'10px',\n        width:'450px',\n        marginLeft:'35px',\n        marginBottom:'25px'\n    };\n    const styleInput = {\n        marginBottom:'10px',\n    };\n\n    const verify = ()=>{\n        if(passwords.new.length>0 && passwords.confirm.length>0){\n            if(passwords.new === passwords.confirm){\n                dispatch({type:'error',value:false})\n            }\n            else{\n                dispatch({type:'error',value:true})\n    \n            }\n        }\n        else{\n            dispatch({type:'error',value:true})\n        }\n       \n    }\n\n    const _persist = ()=>{\n        verify()\n        if(passwords.error === false || passwords.error !== ''  ){\n            axios.patch(`${uri.link}/users/${context[0].userName}`, {\n                password:passwords.new\n              },\n              {\n                headers:{'auth-token':`${getToken()}`}\n              }).then(function (res) {\n                if(res.status===200){\n                    setStatus(200);\n                    // setToken(res.data.token)\n                }\n                    else\n                    setStatus('error')\n              })\n              .catch(function (error) {\n                  setStatus('error')\n              });\n        }\n    }\n\n    const classes = useStyles();\n\n\n    return (\n        <Container maxWidth=\"lg\" style={{display:'flex',flexDirection:'column',overflowY:'auto',height:'100%'}}>\n            <h1 style={{color:'rgb(36,38,76)',paddingTop:'50px',fontWeight:'normal'}}>{lang.user_profile}</h1>\n            {\n                location.state === 'new' && \n                <span style={{background:'#303030',borderRadius:'10px',width:'100%',padding:'10px',color:'white',fontWeight:'bold'}}>ℹ️ Please update your password now.</span>\n            }\n            {\n                passwords.error && \n                    <CustomSnackbar type='error' content=\"passwords doesn't match each others\" />\n            }\n                <Paper elevation={0} style={{marginTop:'15px',background:'rgb(243,245,247)',borderRadius:'15px',padding:'30px',display:'flex',flexDirection:'row',height:'400px',justifyContent:'center',alignItems:'center'}}>\n                    {\n                        status===200?\n                        <CustomSnackbar  content='Password updated!!' type=\"success\"/>\n                        :\n                        status==='error'?\n                        <CustomSnackbar  content='Ops, password update failed!' type=\"error\"/>\n                        : null\n                    }\n                    \n                    <Grid item md={4} style={{display:'flex',flexDirection:'column',alignItems:'center',borderRadius:'10px',padding:'15px'}}>\n                        {/* <TextField style={styleInput} id=\"username\" label=\"Username\"   variant='filled' disabled defaultValue={context[0].userName} />\n                        <TextField style={styleInput} id=\"email\" label=\"Email\" disabled variant='filled' /> */}\n                        <Avatar src={img} className={classes.large} variant='circle'/>\n                            <section style={{display:'flex',flexDirection:'column',padding:'7px',justifyContent:'space-around',alignItems:'center',width:'100%'}}>\n                                    <section style={{display:'flex',alignItems:'center',marginTop:'10px',color:'rgb(36,38,76)',fontWeight:'550',fontSize:'30px',textTransform:'capitalize'}}>{context[0].userName}</section>\n                                    <section style={{display:'flex',alignItems:'center',marginTop:'5px',color:'#303030',opacity:'75%'}}>aa@gmail.com</section>\n                            </section>\n                    </Grid>\n                    <Grid item md={8}>\n                    <section style={{display:'flex',justifyContent:'flex-start',flexDirection:'column',alignItems:'flex-start'}}>\n                        <TextField  size='medium' style={styleInputPassword} id=\"Current password\" label={lang.current_password} variant='standard' onChange={(e)=>dispatch({type:'current',value:e.target.value})}/>\n                        <TextField size='medium' style={styleInputPassword} id=\"New password\" label={lang.new_password} variant='standard' onChange={(e)=>dispatch({type:'new',value:e.target.value})} />\n                        <TextField size='medium' style={styleInputPassword} id=\"Confirm password\" label={lang.confirm_password} variant='standard' onChange={(e)=>dispatch({type:'confirm',value:e.target.value})} />\n                     <motion.Button\n                    \n                    whileHover={{background:'rgb(48,154,232)',transition:{duration:'0.5'} }}\n                            variant=\"contained\"\n                            onClick={_persist}\n                            style={{marginLeft:'35px',width:'450px',background:'rgb(65,84,179)',border:'0px',borderRadius:'5px',height:'40px',marginTop:'25px',color:'white',cursor:'pointer',fontWeight:'bold',fontSize:'15px'}}\n                        >\n                            {lang.save_password}\n                    </motion.Button>\n                    </section>\n                   \n                    </Grid>\n                  \n                </Paper>\n\n        </Container>\n\n    )\n}\n\nexport default Profile\n","/Users/Mahmoud/Documents/React/ERP/erp_logistio/src/Pages/Home/Password_reset.js",["642","643","644","645"],"import { Container, TextField,Button, Paper, Grid, Avatar } from '@material-ui/core'\nimport React from 'react'\nimport {ConnectedUser}  from '../../App'\nimport Loader from '../../Components/Loader'\nimport axios from 'axios'\nimport {uri} from \"../../Url_base\";\nimport { useLocation,useParams } from 'react-router-dom'\nimport CustomSnackbar from '../../Components/CustomSnackBar'\nimport logo from '../../Assets/img/Logistio logo.svg';\nimport { makeStyles } from '@material-ui/core/styles';\n\n\nconst lngc = window.localStorage.getItem('lang')?window.localStorage.getItem('lang'):'EN';\nconst lang = require(`../../Language/${lngc}.json`)\n\nconst useStyles = makeStyles((theme) => ({\n    avatar: {\n      margin: theme.spacing(1),\n      marginBottom: theme.spacing(5),\n      width:200,\n      height:50\n    },\n  }));\nfunction Test() {\n    const classes = useStyles();\n    const context = React.useContext(ConnectedUser)\n    const [password, setpassword] = React.useState('');\n    const [status, setStatus] = React.useState('');\n    const location = useLocation();\n    const {id} = useParams();\n    console.log('LOCATION------>',id)\n\n\nconst _reset = ()=>{\n    axios.post(`${uri.link}/password_reset/${id}`, {\n        password:password,\n      }\n      , \n        {\n            headers:{'auth-token':`${id}`}\n        }).then(function (res) {\n        if(res.status===200){\n            setStatus(200);\n            console.log('RESTE RESPONSE -------->',res.data)\n        }\n            else\n            setStatus('error')\n      })\n      .catch(function (error) {\n          setStatus('error')\n      });\n}\n\n    return (\n        <div  style={{background:'rgb(243,245,247)',width:'100%',display:'flex',justifyContent:'center',height:'100vh',alignItems:'center'}}>\n               {\n                        status===200?\n                        <CustomSnackbar  content='Password reseted !' type=\"success\"/>\n                        :\n                        status==='error'?\n                        <CustomSnackbar  content='Ops, link is invalid or expired!' type=\"error\"/>\n                        : null\n                    }\n                        <Grid item md = {6}>\n                            <Paper elevation={0} style={{display:'flex',flexDirection:'column',padding:'15px',justifyContent:'space-around',alignItems:'center',height:'60vh'}} >\n                                <Avatar className={classes.avatar} src={logo} variant='square' />\n                                <TextField id=\"outlined-basic\" label={lang.new_password} variant=\"outlined\" onChange={(e)=>setpassword(e.target.value)} fullWidth/>\n                                <span style={{color:'#303030',opacity:'50%',alignSelf:'flex-start',marginTop:'-65px',fontSize:\"13px\"}}>{lang.reset_hint}</span>\n                                <Button variant=\"contained\" style={{background:'black',color:'white'}} onClick={_reset} fullWidth>\n                                    {lang.change_password}\n                                </Button>\n                            </Paper>\n                        </Grid>\n        </div>\n    )\n}\n\nexport default Test\n","/Users/Mahmoud/Documents/React/ERP/erp_logistio/src/Components/user/UserListRow.js",[],{"ruleId":"646","severity":1,"message":"647","line":6,"column":27,"nodeType":"648","messageId":"649","endLine":6,"endColumn":33},{"ruleId":"650","replacedBy":"651"},{"ruleId":"652","replacedBy":"653"},{"ruleId":"646","severity":1,"message":"654","line":2,"column":33,"nodeType":"648","messageId":"649","endLine":2,"endColumn":41},{"ruleId":"646","severity":1,"message":"655","line":8,"column":10,"nodeType":"648","messageId":"649","endLine":8,"endColumn":25},{"ruleId":"646","severity":1,"message":"656","line":6,"column":8,"nodeType":"648","messageId":"649","endLine":6,"endColumn":24},{"ruleId":"646","severity":1,"message":"657","line":7,"column":8,"nodeType":"648","messageId":"649","endLine":7,"endColumn":16},{"ruleId":"646","severity":1,"message":"658","line":12,"column":8,"nodeType":"648","messageId":"649","endLine":12,"endColumn":22},{"ruleId":"646","severity":1,"message":"659","line":17,"column":8,"nodeType":"648","messageId":"649","endLine":17,"endColumn":24},{"ruleId":"646","severity":1,"message":"660","line":20,"column":8,"nodeType":"648","messageId":"649","endLine":20,"endColumn":18},{"ruleId":"646","severity":1,"message":"661","line":122,"column":19,"nodeType":"648","messageId":"649","endLine":122,"endColumn":27},{"ruleId":"662","severity":1,"message":"663","line":173,"column":4,"nodeType":"664","endLine":173,"endColumn":6,"suggestions":"665"},{"ruleId":"646","severity":1,"message":"666","line":1,"column":10,"nodeType":"648","messageId":"649","endLine":1,"endColumn":17},{"ruleId":"646","severity":1,"message":"667","line":8,"column":25,"nodeType":"648","messageId":"649","endLine":8,"endColumn":29},{"ruleId":"646","severity":1,"message":"668","line":9,"column":8,"nodeType":"648","messageId":"649","endLine":9,"endColumn":12},{"ruleId":"646","severity":1,"message":"669","line":12,"column":8,"nodeType":"648","messageId":"649","endLine":12,"endColumn":13},{"ruleId":"646","severity":1,"message":"670","line":13,"column":9,"nodeType":"648","messageId":"649","endLine":13,"endColumn":12},{"ruleId":"646","severity":1,"message":"655","line":15,"column":17,"nodeType":"648","messageId":"649","endLine":15,"endColumn":32},{"ruleId":"646","severity":1,"message":"671","line":25,"column":11,"nodeType":"648","messageId":"649","endLine":25,"endColumn":19},{"ruleId":"662","severity":1,"message":"672","line":88,"column":10,"nodeType":"664","endLine":88,"endColumn":12,"suggestions":"673"},{"ruleId":"662","severity":1,"message":"672","line":94,"column":10,"nodeType":"664","endLine":94,"endColumn":27,"suggestions":"674"},{"ruleId":"662","severity":1,"message":"675","line":94,"column":11,"nodeType":"676","endLine":94,"endColumn":26},{"ruleId":"646","severity":1,"message":"677","line":99,"column":17,"nodeType":"648","messageId":"649","endLine":99,"endColumn":19},{"ruleId":"646","severity":1,"message":"678","line":1,"column":8,"nodeType":"648","messageId":"649","endLine":1,"endColumn":13},{"ruleId":"646","severity":1,"message":"679","line":3,"column":8,"nodeType":"648","messageId":"649","endLine":3,"endColumn":14},{"ruleId":"646","severity":1,"message":"680","line":4,"column":8,"nodeType":"648","messageId":"649","endLine":4,"endColumn":15},{"ruleId":"646","severity":1,"message":"681","line":5,"column":8,"nodeType":"648","messageId":"649","endLine":5,"endColumn":18},{"ruleId":"646","severity":1,"message":"682","line":6,"column":8,"nodeType":"648","messageId":"649","endLine":6,"endColumn":14},{"ruleId":"646","severity":1,"message":"683","line":7,"column":8,"nodeType":"648","messageId":"649","endLine":7,"endColumn":18},{"ruleId":"646","severity":1,"message":"684","line":8,"column":8,"nodeType":"648","messageId":"649","endLine":8,"endColumn":16},{"ruleId":"646","severity":1,"message":"685","line":13,"column":8,"nodeType":"648","messageId":"649","endLine":13,"endColumn":21},{"ruleId":"646","severity":1,"message":"686","line":14,"column":8,"nodeType":"648","messageId":"649","endLine":14,"endColumn":25},{"ruleId":"646","severity":1,"message":"687","line":15,"column":8,"nodeType":"648","messageId":"649","endLine":15,"endColumn":17},{"ruleId":"646","severity":1,"message":"688","line":18,"column":10,"nodeType":"648","messageId":"649","endLine":18,"endColumn":16},{"ruleId":"646","severity":1,"message":"689","line":58,"column":19,"nodeType":"648","messageId":"649","endLine":58,"endColumn":31},{"ruleId":"690","severity":1,"message":"691","line":58,"column":85,"nodeType":"692","messageId":"693","endLine":58,"endColumn":87},{"ruleId":"646","severity":1,"message":"666","line":2,"column":8,"nodeType":"648","messageId":"649","endLine":2,"endColumn":15},{"ruleId":"646","severity":1,"message":"694","line":4,"column":8,"nodeType":"648","messageId":"649","endLine":4,"endColumn":17},{"ruleId":"646","severity":1,"message":"695","line":5,"column":8,"nodeType":"648","messageId":"649","endLine":5,"endColumn":16},{"ruleId":"646","severity":1,"message":"696","line":13,"column":8,"nodeType":"648","messageId":"649","endLine":13,"endColumn":26},{"ruleId":"646","severity":1,"message":"697","line":18,"column":10,"nodeType":"648","messageId":"649","endLine":18,"endColumn":16},{"ruleId":"646","severity":1,"message":"698","line":18,"column":18,"nodeType":"648","messageId":"649","endLine":18,"endColumn":23},{"ruleId":"646","severity":1,"message":"671","line":136,"column":7,"nodeType":"648","messageId":"649","endLine":136,"endColumn":15},{"ruleId":"699","severity":1,"message":"700","line":162,"column":9,"nodeType":"701","endLine":162,"endColumn":69},{"ruleId":"646","severity":1,"message":"647","line":3,"column":22,"nodeType":"648","messageId":"649","endLine":3,"endColumn":28},{"ruleId":"646","severity":1,"message":"697","line":4,"column":5,"nodeType":"648","messageId":"649","endLine":4,"endColumn":11},{"ruleId":"646","severity":1,"message":"667","line":6,"column":5,"nodeType":"648","messageId":"649","endLine":6,"endColumn":9},{"ruleId":"646","severity":1,"message":"702","line":8,"column":5,"nodeType":"648","messageId":"649","endLine":8,"endColumn":15},{"ruleId":"646","severity":1,"message":"703","line":9,"column":5,"nodeType":"648","messageId":"649","endLine":9,"endColumn":16},{"ruleId":"704","severity":1,"message":"705","line":16,"column":26,"nodeType":"706","messageId":"707","endLine":16,"endColumn":28},{"ruleId":"646","severity":1,"message":"708","line":57,"column":21,"nodeType":"648","messageId":"649","endLine":57,"endColumn":31},{"ruleId":"646","severity":1,"message":"709","line":60,"column":12,"nodeType":"648","messageId":"649","endLine":60,"endColumn":20},{"ruleId":"662","severity":1,"message":"710","line":99,"column":8,"nodeType":"664","endLine":99,"endColumn":10,"suggestions":"711"},{"ruleId":"662","severity":1,"message":"710","line":169,"column":8,"nodeType":"664","endLine":169,"endColumn":10,"suggestions":"712"},{"ruleId":"646","severity":1,"message":"678","line":1,"column":8,"nodeType":"648","messageId":"649","endLine":1,"endColumn":13},{"ruleId":"646","severity":1,"message":"660","line":2,"column":8,"nodeType":"648","messageId":"649","endLine":2,"endColumn":18},{"ruleId":"646","severity":1,"message":"669","line":3,"column":8,"nodeType":"648","messageId":"649","endLine":3,"endColumn":13},{"ruleId":"704","severity":1,"message":"705","line":14,"column":27,"nodeType":"706","messageId":"707","endLine":14,"endColumn":29},{"ruleId":"646","severity":1,"message":"713","line":3,"column":8,"nodeType":"648","messageId":"649","endLine":3,"endColumn":13},{"ruleId":"646","severity":1,"message":"714","line":4,"column":8,"nodeType":"648","messageId":"649","endLine":4,"endColumn":17},{"ruleId":"646","severity":1,"message":"715","line":5,"column":8,"nodeType":"648","messageId":"649","endLine":5,"endColumn":17},{"ruleId":"646","severity":1,"message":"716","line":6,"column":8,"nodeType":"648","messageId":"649","endLine":6,"endColumn":22},{"ruleId":"646","severity":1,"message":"717","line":7,"column":8,"nodeType":"648","messageId":"649","endLine":7,"endColumn":17},{"ruleId":"646","severity":1,"message":"718","line":8,"column":8,"nodeType":"648","messageId":"649","endLine":8,"endColumn":16},{"ruleId":"646","severity":1,"message":"719","line":9,"column":8,"nodeType":"648","messageId":"649","endLine":9,"endColumn":13},{"ruleId":"646","severity":1,"message":"720","line":10,"column":10,"nodeType":"648","messageId":"649","endLine":10,"endColumn":16},{"ruleId":"646","severity":1,"message":"656","line":10,"column":18,"nodeType":"648","messageId":"649","endLine":10,"endColumn":34},{"ruleId":"646","severity":1,"message":"697","line":10,"column":50,"nodeType":"648","messageId":"649","endLine":10,"endColumn":56},{"ruleId":"646","severity":1,"message":"721","line":11,"column":8,"nodeType":"648","messageId":"649","endLine":11,"endColumn":19},{"ruleId":"646","severity":1,"message":"655","line":30,"column":10,"nodeType":"648","messageId":"649","endLine":30,"endColumn":25},{"ruleId":"646","severity":1,"message":"722","line":81,"column":11,"nodeType":"648","messageId":"649","endLine":81,"endColumn":18},{"ruleId":"646","severity":1,"message":"709","line":82,"column":12,"nodeType":"648","messageId":"649","endLine":82,"endColumn":20},{"ruleId":"646","severity":1,"message":"723","line":87,"column":22,"nodeType":"648","messageId":"649","endLine":87,"endColumn":35},{"ruleId":"662","severity":1,"message":"710","line":119,"column":8,"nodeType":"664","endLine":119,"endColumn":10,"suggestions":"724"},{"ruleId":"725","severity":1,"message":"726","line":154,"column":13,"nodeType":"727","messageId":"693","endLine":154,"endColumn":21},{"ruleId":"646","severity":1,"message":"728","line":208,"column":11,"nodeType":"648","messageId":"649","endLine":208,"endColumn":19},{"ruleId":"646","severity":1,"message":"729","line":216,"column":11,"nodeType":"648","messageId":"649","endLine":216,"endColumn":14},{"ruleId":"690","severity":1,"message":"691","line":219,"column":35,"nodeType":"692","messageId":"693","endLine":219,"endColumn":37},{"ruleId":"690","severity":1,"message":"691","line":229,"column":30,"nodeType":"692","messageId":"693","endLine":229,"endColumn":32},{"ruleId":"646","severity":1,"message":"697","line":1,"column":44,"nodeType":"648","messageId":"649","endLine":1,"endColumn":50},{"ruleId":"646","severity":1,"message":"682","line":1,"column":96,"nodeType":"648","messageId":"649","endLine":1,"endColumn":102},{"ruleId":"646","severity":1,"message":"730","line":10,"column":18,"nodeType":"648","messageId":"649","endLine":10,"endColumn":22},{"ruleId":"646","severity":1,"message":"659","line":1,"column":26,"nodeType":"648","messageId":"649","endLine":1,"endColumn":42},{"ruleId":"731","severity":1,"message":"732","line":64,"column":7,"nodeType":"733","messageId":"734","endLine":64,"endColumn":13},{"ruleId":"646","severity":1,"message":"709","line":113,"column":10,"nodeType":"648","messageId":"649","endLine":113,"endColumn":18},{"ruleId":"646","severity":1,"message":"735","line":147,"column":9,"nodeType":"648","messageId":"649","endLine":147,"endColumn":18},{"ruleId":"646","severity":1,"message":"736","line":153,"column":9,"nodeType":"648","messageId":"649","endLine":153,"endColumn":18},{"ruleId":"646","severity":1,"message":"730","line":1,"column":18,"nodeType":"648","messageId":"649","endLine":1,"endColumn":22},{"ruleId":"646","severity":1,"message":"737","line":4,"column":11,"nodeType":"648","messageId":"649","endLine":4,"endColumn":21},{"ruleId":"646","severity":1,"message":"730","line":1,"column":10,"nodeType":"648","messageId":"649","endLine":1,"endColumn":14},{"ruleId":"646","severity":1,"message":"738","line":14,"column":7,"nodeType":"648","messageId":"649","endLine":14,"endColumn":11},{"ruleId":"646","severity":1,"message":"709","line":36,"column":12,"nodeType":"648","messageId":"649","endLine":36,"endColumn":20},{"ruleId":"704","severity":1,"message":"705","line":39,"column":33,"nodeType":"706","messageId":"707","endLine":39,"endColumn":35},{"ruleId":"704","severity":1,"message":"705","line":107,"column":37,"nodeType":"706","messageId":"707","endLine":107,"endColumn":39},{"ruleId":"646","severity":1,"message":"739","line":45,"column":14,"nodeType":"648","messageId":"649","endLine":45,"endColumn":24},{"ruleId":"725","severity":1,"message":"740","line":40,"column":155,"nodeType":"727","messageId":"693","endLine":40,"endColumn":162},{"ruleId":"646","severity":1,"message":"741","line":11,"column":8,"nodeType":"648","messageId":"649","endLine":11,"endColumn":16},{"ruleId":"646","severity":1,"message":"667","line":12,"column":10,"nodeType":"648","messageId":"649","endLine":12,"endColumn":14},{"ruleId":"646","severity":1,"message":"742","line":13,"column":16,"nodeType":"648","messageId":"649","endLine":13,"endColumn":25},{"ruleId":"646","severity":1,"message":"743","line":14,"column":8,"nodeType":"648","messageId":"649","endLine":14,"endColumn":23},{"ruleId":"646","severity":1,"message":"744","line":15,"column":8,"nodeType":"648","messageId":"649","endLine":15,"endColumn":24},{"ruleId":"646","severity":1,"message":"741","line":11,"column":8,"nodeType":"648","messageId":"649","endLine":11,"endColumn":16},{"ruleId":"646","severity":1,"message":"667","line":12,"column":10,"nodeType":"648","messageId":"649","endLine":12,"endColumn":14},{"ruleId":"646","severity":1,"message":"742","line":13,"column":16,"nodeType":"648","messageId":"649","endLine":13,"endColumn":25},{"ruleId":"704","severity":1,"message":"745","line":38,"column":45,"nodeType":"706","messageId":"746","endLine":38,"endColumn":47},{"ruleId":"704","severity":1,"message":"745","line":45,"column":45,"nodeType":"706","messageId":"746","endLine":45,"endColumn":47},{"ruleId":"704","severity":1,"message":"745","line":52,"column":45,"nodeType":"706","messageId":"746","endLine":52,"endColumn":47},{"ruleId":"690","severity":1,"message":"691","line":59,"column":43,"nodeType":"692","messageId":"693","endLine":59,"endColumn":45},{"ruleId":"690","severity":1,"message":"691","line":65,"column":43,"nodeType":"692","messageId":"693","endLine":65,"endColumn":45},{"ruleId":"690","severity":1,"message":"691","line":68,"column":43,"nodeType":"692","messageId":"693","endLine":68,"endColumn":45},{"ruleId":"646","severity":1,"message":"747","line":4,"column":8,"nodeType":"648","messageId":"649","endLine":4,"endColumn":17},{"ruleId":"646","severity":1,"message":"667","line":12,"column":10,"nodeType":"648","messageId":"649","endLine":12,"endColumn":14},{"ruleId":"748","severity":1,"message":"749","line":46,"column":33,"nodeType":"701","endLine":46,"endColumn":63},{"ruleId":"646","severity":1,"message":"737","line":2,"column":10,"nodeType":"648","messageId":"649","endLine":2,"endColumn":20},{"ruleId":"646","severity":1,"message":"713","line":3,"column":8,"nodeType":"648","messageId":"649","endLine":3,"endColumn":13},{"ruleId":"646","severity":1,"message":"714","line":4,"column":8,"nodeType":"648","messageId":"649","endLine":4,"endColumn":17},{"ruleId":"646","severity":1,"message":"716","line":6,"column":8,"nodeType":"648","messageId":"649","endLine":6,"endColumn":22},{"ruleId":"646","severity":1,"message":"717","line":7,"column":8,"nodeType":"648","messageId":"649","endLine":7,"endColumn":17},{"ruleId":"646","severity":1,"message":"719","line":9,"column":8,"nodeType":"648","messageId":"649","endLine":9,"endColumn":13},{"ruleId":"646","severity":1,"message":"741","line":10,"column":8,"nodeType":"648","messageId":"649","endLine":10,"endColumn":16},{"ruleId":"646","severity":1,"message":"667","line":11,"column":10,"nodeType":"648","messageId":"649","endLine":11,"endColumn":14},{"ruleId":"646","severity":1,"message":"730","line":12,"column":18,"nodeType":"648","messageId":"649","endLine":12,"endColumn":22},{"ruleId":"646","severity":1,"message":"750","line":18,"column":8,"nodeType":"648","messageId":"649","endLine":18,"endColumn":12},{"ruleId":"646","severity":1,"message":"709","line":25,"column":12,"nodeType":"648","messageId":"649","endLine":25,"endColumn":20},{"ruleId":"690","severity":1,"message":"691","line":36,"column":29,"nodeType":"692","messageId":"693","endLine":36,"endColumn":31},{"ruleId":"662","severity":1,"message":"751","line":44,"column":8,"nodeType":"664","endLine":44,"endColumn":15,"suggestions":"752"},{"ruleId":"646","severity":1,"message":"737","line":2,"column":10,"nodeType":"648","messageId":"649","endLine":2,"endColumn":20},{"ruleId":"646","severity":1,"message":"713","line":3,"column":8,"nodeType":"648","messageId":"649","endLine":3,"endColumn":13},{"ruleId":"646","severity":1,"message":"714","line":4,"column":8,"nodeType":"648","messageId":"649","endLine":4,"endColumn":17},{"ruleId":"646","severity":1,"message":"716","line":6,"column":8,"nodeType":"648","messageId":"649","endLine":6,"endColumn":22},{"ruleId":"646","severity":1,"message":"717","line":7,"column":8,"nodeType":"648","messageId":"649","endLine":7,"endColumn":17},{"ruleId":"646","severity":1,"message":"719","line":9,"column":8,"nodeType":"648","messageId":"649","endLine":9,"endColumn":13},{"ruleId":"646","severity":1,"message":"741","line":10,"column":8,"nodeType":"648","messageId":"649","endLine":10,"endColumn":16},{"ruleId":"646","severity":1,"message":"667","line":11,"column":10,"nodeType":"648","messageId":"649","endLine":11,"endColumn":14},{"ruleId":"646","severity":1,"message":"730","line":12,"column":28,"nodeType":"648","messageId":"649","endLine":12,"endColumn":32},{"ruleId":"646","severity":1,"message":"750","line":17,"column":8,"nodeType":"648","messageId":"649","endLine":17,"endColumn":12},{"ruleId":"646","severity":1,"message":"709","line":24,"column":12,"nodeType":"648","messageId":"649","endLine":24,"endColumn":20},{"ruleId":"690","severity":1,"message":"691","line":36,"column":29,"nodeType":"692","messageId":"693","endLine":36,"endColumn":31},{"ruleId":"662","severity":1,"message":"751","line":44,"column":8,"nodeType":"664","endLine":44,"endColumn":15,"suggestions":"753"},{"ruleId":"754","severity":1,"message":"755","line":14,"column":5,"nodeType":"756","messageId":"757","endLine":23,"endColumn":6},{"ruleId":"646","severity":1,"message":"709","line":40,"column":12,"nodeType":"648","messageId":"649","endLine":40,"endColumn":20},{"ruleId":"662","severity":1,"message":"758","line":88,"column":8,"nodeType":"664","endLine":88,"endColumn":10,"suggestions":"759"},{"ruleId":"662","severity":1,"message":"760","line":95,"column":8,"nodeType":"664","endLine":95,"endColumn":10,"suggestions":"761"},{"ruleId":"646","severity":1,"message":"659","line":1,"column":18,"nodeType":"648","messageId":"649","endLine":1,"endColumn":34},{"ruleId":"646","severity":1,"message":"762","line":1,"column":47,"nodeType":"648","messageId":"649","endLine":1,"endColumn":57},{"ruleId":"646","severity":1,"message":"763","line":5,"column":8,"nodeType":"648","messageId":"649","endLine":5,"endColumn":16},{"ruleId":"646","severity":1,"message":"764","line":6,"column":8,"nodeType":"648","messageId":"649","endLine":6,"endColumn":22},{"ruleId":"646","severity":1,"message":"765","line":8,"column":8,"nodeType":"648","messageId":"649","endLine":8,"endColumn":14},{"ruleId":"646","severity":1,"message":"709","line":22,"column":12,"nodeType":"648","messageId":"649","endLine":22,"endColumn":20},{"ruleId":"766","severity":1,"message":"767","line":139,"column":29,"nodeType":"768","endLine":139,"endColumn":211},{"ruleId":"646","severity":1,"message":"741","line":11,"column":8,"nodeType":"648","messageId":"649","endLine":11,"endColumn":16},{"ruleId":"646","severity":1,"message":"667","line":12,"column":10,"nodeType":"648","messageId":"649","endLine":12,"endColumn":14},{"ruleId":"646","severity":1,"message":"743","line":14,"column":8,"nodeType":"648","messageId":"649","endLine":14,"endColumn":23},{"ruleId":"646","severity":1,"message":"744","line":15,"column":8,"nodeType":"648","messageId":"649","endLine":15,"endColumn":24},{"ruleId":"646","severity":1,"message":"737","line":2,"column":10,"nodeType":"648","messageId":"649","endLine":2,"endColumn":20},{"ruleId":"646","severity":1,"message":"713","line":3,"column":8,"nodeType":"648","messageId":"649","endLine":3,"endColumn":13},{"ruleId":"646","severity":1,"message":"714","line":4,"column":8,"nodeType":"648","messageId":"649","endLine":4,"endColumn":17},{"ruleId":"646","severity":1,"message":"716","line":6,"column":8,"nodeType":"648","messageId":"649","endLine":6,"endColumn":22},{"ruleId":"646","severity":1,"message":"717","line":7,"column":8,"nodeType":"648","messageId":"649","endLine":7,"endColumn":17},{"ruleId":"646","severity":1,"message":"719","line":9,"column":8,"nodeType":"648","messageId":"649","endLine":9,"endColumn":13},{"ruleId":"646","severity":1,"message":"741","line":10,"column":8,"nodeType":"648","messageId":"649","endLine":10,"endColumn":16},{"ruleId":"646","severity":1,"message":"667","line":11,"column":10,"nodeType":"648","messageId":"649","endLine":11,"endColumn":14},{"ruleId":"646","severity":1,"message":"682","line":12,"column":10,"nodeType":"648","messageId":"649","endLine":12,"endColumn":16},{"ruleId":"646","severity":1,"message":"730","line":12,"column":18,"nodeType":"648","messageId":"649","endLine":12,"endColumn":22},{"ruleId":"646","severity":1,"message":"743","line":13,"column":8,"nodeType":"648","messageId":"649","endLine":13,"endColumn":23},{"ruleId":"646","severity":1,"message":"744","line":14,"column":8,"nodeType":"648","messageId":"649","endLine":14,"endColumn":24},{"ruleId":"646","severity":1,"message":"738","line":27,"column":7,"nodeType":"648","messageId":"649","endLine":27,"endColumn":11},{"ruleId":"646","severity":1,"message":"709","line":41,"column":12,"nodeType":"648","messageId":"649","endLine":41,"endColumn":20},{"ruleId":"646","severity":1,"message":"769","line":45,"column":12,"nodeType":"648","messageId":"649","endLine":45,"endColumn":21},{"ruleId":"646","severity":1,"message":"770","line":45,"column":23,"nodeType":"648","messageId":"649","endLine":45,"endColumn":35},{"ruleId":"646","severity":1,"message":"771","line":49,"column":11,"nodeType":"648","messageId":"649","endLine":49,"endColumn":26},{"ruleId":"646","severity":1,"message":"688","line":2,"column":9,"nodeType":"648","messageId":"649","endLine":2,"endColumn":15},{"ruleId":"646","severity":1,"message":"772","line":7,"column":9,"nodeType":"648","messageId":"649","endLine":7,"endColumn":24},{"ruleId":"650","replacedBy":"773"},{"ruleId":"652","replacedBy":"774"},{"ruleId":"646","severity":1,"message":"720","line":1,"column":10,"nodeType":"648","messageId":"649","endLine":1,"endColumn":16},{"ruleId":"646","severity":1,"message":"730","line":1,"column":18,"nodeType":"648","messageId":"649","endLine":1,"endColumn":22},{"ruleId":"646","severity":1,"message":"775","line":3,"column":8,"nodeType":"648","messageId":"649","endLine":3,"endColumn":15},{"ruleId":"646","severity":1,"message":"737","line":4,"column":10,"nodeType":"648","messageId":"649","endLine":4,"endColumn":20},{"ruleId":"646","severity":1,"message":"776","line":7,"column":8,"nodeType":"648","messageId":"649","endLine":7,"endColumn":14},{"ruleId":"646","severity":1,"message":"709","line":10,"column":12,"nodeType":"648","messageId":"649","endLine":10,"endColumn":20},{"ruleId":"662","severity":1,"message":"777","line":62,"column":8,"nodeType":"664","endLine":62,"endColumn":10,"suggestions":"778"},{"ruleId":"646","severity":1,"message":"779","line":4,"column":8,"nodeType":"648","messageId":"649","endLine":4,"endColumn":22},{"ruleId":"646","severity":1,"message":"741","line":11,"column":8,"nodeType":"648","messageId":"649","endLine":11,"endColumn":16},{"ruleId":"646","severity":1,"message":"667","line":12,"column":10,"nodeType":"648","messageId":"649","endLine":12,"endColumn":14},{"ruleId":"646","severity":1,"message":"743","line":14,"column":8,"nodeType":"648","messageId":"649","endLine":14,"endColumn":23},{"ruleId":"646","severity":1,"message":"744","line":15,"column":8,"nodeType":"648","messageId":"649","endLine":15,"endColumn":24},{"ruleId":"646","severity":1,"message":"721","line":18,"column":8,"nodeType":"648","messageId":"649","endLine":18,"endColumn":19},{"ruleId":"646","severity":1,"message":"780","line":22,"column":3,"nodeType":"648","messageId":"649","endLine":22,"endColumn":21},{"ruleId":"646","severity":1,"message":"737","line":2,"column":10,"nodeType":"648","messageId":"649","endLine":2,"endColumn":20},{"ruleId":"646","severity":1,"message":"713","line":3,"column":8,"nodeType":"648","messageId":"649","endLine":3,"endColumn":13},{"ruleId":"646","severity":1,"message":"714","line":4,"column":8,"nodeType":"648","messageId":"649","endLine":4,"endColumn":17},{"ruleId":"646","severity":1,"message":"716","line":6,"column":8,"nodeType":"648","messageId":"649","endLine":6,"endColumn":22},{"ruleId":"646","severity":1,"message":"717","line":7,"column":8,"nodeType":"648","messageId":"649","endLine":7,"endColumn":17},{"ruleId":"646","severity":1,"message":"719","line":9,"column":8,"nodeType":"648","messageId":"649","endLine":9,"endColumn":13},{"ruleId":"646","severity":1,"message":"741","line":10,"column":8,"nodeType":"648","messageId":"649","endLine":10,"endColumn":16},{"ruleId":"646","severity":1,"message":"667","line":11,"column":10,"nodeType":"648","messageId":"649","endLine":11,"endColumn":14},{"ruleId":"646","severity":1,"message":"682","line":12,"column":10,"nodeType":"648","messageId":"649","endLine":12,"endColumn":16},{"ruleId":"646","severity":1,"message":"730","line":12,"column":18,"nodeType":"648","messageId":"649","endLine":12,"endColumn":22},{"ruleId":"646","severity":1,"message":"742","line":12,"column":24,"nodeType":"648","messageId":"649","endLine":12,"endColumn":33},{"ruleId":"646","severity":1,"message":"659","line":12,"column":35,"nodeType":"648","messageId":"649","endLine":12,"endColumn":51},{"ruleId":"646","severity":1,"message":"683","line":12,"column":53,"nodeType":"648","messageId":"649","endLine":12,"endColumn":63},{"ruleId":"646","severity":1,"message":"743","line":13,"column":8,"nodeType":"648","messageId":"649","endLine":13,"endColumn":23},{"ruleId":"646","severity":1,"message":"744","line":14,"column":8,"nodeType":"648","messageId":"649","endLine":14,"endColumn":24},{"ruleId":"646","severity":1,"message":"669","line":15,"column":8,"nodeType":"648","messageId":"649","endLine":15,"endColumn":13},{"ruleId":"646","severity":1,"message":"670","line":16,"column":9,"nodeType":"648","messageId":"649","endLine":16,"endColumn":12},{"ruleId":"646","severity":1,"message":"781","line":17,"column":8,"nodeType":"648","messageId":"649","endLine":17,"endColumn":16},{"ruleId":"646","severity":1,"message":"750","line":18,"column":8,"nodeType":"648","messageId":"649","endLine":18,"endColumn":12},{"ruleId":"646","severity":1,"message":"720","line":19,"column":8,"nodeType":"648","messageId":"649","endLine":19,"endColumn":14},{"ruleId":"646","severity":1,"message":"782","line":20,"column":8,"nodeType":"648","messageId":"649","endLine":20,"endColumn":31},{"ruleId":"646","severity":1,"message":"783","line":21,"column":8,"nodeType":"648","messageId":"649","endLine":21,"endColumn":16},{"ruleId":"646","severity":1,"message":"784","line":22,"column":8,"nodeType":"648","messageId":"649","endLine":22,"endColumn":16},{"ruleId":"646","severity":1,"message":"688","line":23,"column":9,"nodeType":"648","messageId":"649","endLine":23,"endColumn":15},{"ruleId":"646","severity":1,"message":"785","line":24,"column":8,"nodeType":"648","messageId":"649","endLine":24,"endColumn":26},{"ruleId":"646","severity":1,"message":"738","line":28,"column":7,"nodeType":"648","messageId":"649","endLine":28,"endColumn":11},{"ruleId":"646","severity":1,"message":"786","line":4,"column":10,"nodeType":"648","messageId":"649","endLine":4,"endColumn":18},{"ruleId":"646","severity":1,"message":"787","line":4,"column":20,"nodeType":"648","messageId":"649","endLine":4,"endColumn":26},{"ruleId":"646","severity":1,"message":"709","line":34,"column":12,"nodeType":"648","messageId":"649","endLine":34,"endColumn":20},{"ruleId":"704","severity":1,"message":"705","line":102,"column":35,"nodeType":"706","messageId":"707","endLine":102,"endColumn":37},{"ruleId":"766","severity":1,"message":"767","line":173,"column":29,"nodeType":"768","endLine":173,"endColumn":211},{"ruleId":"646","severity":1,"message":"741","line":11,"column":8,"nodeType":"648","messageId":"649","endLine":11,"endColumn":16},{"ruleId":"646","severity":1,"message":"667","line":12,"column":10,"nodeType":"648","messageId":"649","endLine":12,"endColumn":14},{"ruleId":"646","severity":1,"message":"742","line":13,"column":16,"nodeType":"648","messageId":"649","endLine":13,"endColumn":25},{"ruleId":"646","severity":1,"message":"743","line":14,"column":8,"nodeType":"648","messageId":"649","endLine":14,"endColumn":23},{"ruleId":"646","severity":1,"message":"744","line":15,"column":8,"nodeType":"648","messageId":"649","endLine":15,"endColumn":24},{"ruleId":"646","severity":1,"message":"788","line":16,"column":8,"nodeType":"648","messageId":"649","endLine":16,"endColumn":17},{"ruleId":"646","severity":1,"message":"721","line":18,"column":8,"nodeType":"648","messageId":"649","endLine":18,"endColumn":19},{"ruleId":"646","severity":1,"message":"737","line":3,"column":10,"nodeType":"648","messageId":"649","endLine":3,"endColumn":20},{"ruleId":"646","severity":1,"message":"789","line":10,"column":8,"nodeType":"648","messageId":"649","endLine":10,"endColumn":24},{"ruleId":"646","severity":1,"message":"682","line":11,"column":8,"nodeType":"648","messageId":"649","endLine":11,"endColumn":14},{"ruleId":"646","severity":1,"message":"741","line":12,"column":8,"nodeType":"648","messageId":"649","endLine":12,"endColumn":16},{"ruleId":"646","severity":1,"message":"683","line":13,"column":8,"nodeType":"648","messageId":"649","endLine":13,"endColumn":18},{"ruleId":"646","severity":1,"message":"697","line":14,"column":8,"nodeType":"648","messageId":"649","endLine":14,"endColumn":14},{"ruleId":"646","severity":1,"message":"790","line":15,"column":10,"nodeType":"648","messageId":"649","endLine":15,"endColumn":20},{"ruleId":"646","severity":1,"message":"791","line":16,"column":8,"nodeType":"648","messageId":"649","endLine":16,"endColumn":19},{"ruleId":"646","severity":1,"message":"792","line":17,"column":8,"nodeType":"648","messageId":"649","endLine":17,"endColumn":19},{"ruleId":"646","severity":1,"message":"793","line":18,"column":8,"nodeType":"648","messageId":"649","endLine":18,"endColumn":23},{"ruleId":"646","severity":1,"message":"794","line":19,"column":8,"nodeType":"648","messageId":"649","endLine":19,"endColumn":22},{"ruleId":"646","severity":1,"message":"795","line":20,"column":8,"nodeType":"648","messageId":"649","endLine":20,"endColumn":25},{"ruleId":"646","severity":1,"message":"719","line":21,"column":8,"nodeType":"648","messageId":"649","endLine":21,"endColumn":13},{"ruleId":"646","severity":1,"message":"796","line":22,"column":8,"nodeType":"648","messageId":"649","endLine":22,"endColumn":17},{"ruleId":"646","severity":1,"message":"797","line":23,"column":8,"nodeType":"648","messageId":"649","endLine":23,"endColumn":17},{"ruleId":"646","severity":1,"message":"798","line":24,"column":8,"nodeType":"648","messageId":"649","endLine":24,"endColumn":19},{"ruleId":"646","severity":1,"message":"799","line":25,"column":8,"nodeType":"648","messageId":"649","endLine":25,"endColumn":22},{"ruleId":"646","severity":1,"message":"750","line":30,"column":8,"nodeType":"648","messageId":"649","endLine":30,"endColumn":12},{"ruleId":"646","severity":1,"message":"709","line":55,"column":12,"nodeType":"648","messageId":"649","endLine":55,"endColumn":20},{"ruleId":"766","severity":1,"message":"767","line":135,"column":29,"nodeType":"768","endLine":135,"endColumn":211},{"ruleId":"646","severity":1,"message":"741","line":11,"column":8,"nodeType":"648","messageId":"649","endLine":11,"endColumn":16},{"ruleId":"646","severity":1,"message":"667","line":12,"column":10,"nodeType":"648","messageId":"649","endLine":12,"endColumn":14},{"ruleId":"646","severity":1,"message":"730","line":13,"column":10,"nodeType":"648","messageId":"649","endLine":13,"endColumn":14},{"ruleId":"646","severity":1,"message":"742","line":13,"column":16,"nodeType":"648","messageId":"649","endLine":13,"endColumn":25},{"ruleId":"704","severity":1,"message":"745","line":43,"column":45,"nodeType":"706","messageId":"746","endLine":43,"endColumn":47},{"ruleId":"704","severity":1,"message":"745","line":50,"column":45,"nodeType":"706","messageId":"746","endLine":50,"endColumn":47},{"ruleId":"704","severity":1,"message":"745","line":57,"column":45,"nodeType":"706","messageId":"746","endLine":57,"endColumn":47},{"ruleId":"690","severity":1,"message":"691","line":64,"column":43,"nodeType":"692","messageId":"693","endLine":64,"endColumn":45},{"ruleId":"690","severity":1,"message":"691","line":70,"column":43,"nodeType":"692","messageId":"693","endLine":70,"endColumn":45},{"ruleId":"690","severity":1,"message":"691","line":73,"column":43,"nodeType":"692","messageId":"693","endLine":73,"endColumn":45},{"ruleId":"646","severity":1,"message":"682","line":2,"column":8,"nodeType":"648","messageId":"649","endLine":2,"endColumn":14},{"ruleId":"646","severity":1,"message":"722","line":21,"column":9,"nodeType":"648","messageId":"649","endLine":21,"endColumn":16},{"ruleId":"646","severity":1,"message":"709","line":22,"column":13,"nodeType":"648","messageId":"649","endLine":22,"endColumn":21},{"ruleId":"646","severity":1,"message":"800","line":50,"column":11,"nodeType":"648","messageId":"649","endLine":50,"endColumn":15},{"ruleId":"662","severity":1,"message":"777","line":92,"column":8,"nodeType":"664","endLine":92,"endColumn":10,"suggestions":"801"},{"ruleId":"646","severity":1,"message":"741","line":11,"column":8,"nodeType":"648","messageId":"649","endLine":11,"endColumn":16},{"ruleId":"646","severity":1,"message":"667","line":12,"column":10,"nodeType":"648","messageId":"649","endLine":12,"endColumn":14},{"ruleId":"646","severity":1,"message":"742","line":13,"column":16,"nodeType":"648","messageId":"649","endLine":13,"endColumn":25},{"ruleId":"646","severity":1,"message":"744","line":14,"column":8,"nodeType":"648","messageId":"649","endLine":14,"endColumn":24},{"ruleId":"646","severity":1,"message":"780","line":19,"column":3,"nodeType":"648","messageId":"649","endLine":19,"endColumn":21},{"ruleId":"646","severity":1,"message":"737","line":2,"column":10,"nodeType":"648","messageId":"649","endLine":2,"endColumn":20},{"ruleId":"646","severity":1,"message":"713","line":3,"column":8,"nodeType":"648","messageId":"649","endLine":3,"endColumn":13},{"ruleId":"646","severity":1,"message":"714","line":4,"column":8,"nodeType":"648","messageId":"649","endLine":4,"endColumn":17},{"ruleId":"646","severity":1,"message":"716","line":6,"column":8,"nodeType":"648","messageId":"649","endLine":6,"endColumn":22},{"ruleId":"646","severity":1,"message":"717","line":7,"column":8,"nodeType":"648","messageId":"649","endLine":7,"endColumn":17},{"ruleId":"646","severity":1,"message":"719","line":9,"column":8,"nodeType":"648","messageId":"649","endLine":9,"endColumn":13},{"ruleId":"646","severity":1,"message":"741","line":10,"column":8,"nodeType":"648","messageId":"649","endLine":10,"endColumn":16},{"ruleId":"646","severity":1,"message":"667","line":11,"column":10,"nodeType":"648","messageId":"649","endLine":11,"endColumn":14},{"ruleId":"646","severity":1,"message":"682","line":12,"column":10,"nodeType":"648","messageId":"649","endLine":12,"endColumn":16},{"ruleId":"646","severity":1,"message":"730","line":12,"column":18,"nodeType":"648","messageId":"649","endLine":12,"endColumn":22},{"ruleId":"646","severity":1,"message":"742","line":12,"column":24,"nodeType":"648","messageId":"649","endLine":12,"endColumn":33},{"ruleId":"646","severity":1,"message":"659","line":12,"column":35,"nodeType":"648","messageId":"649","endLine":12,"endColumn":51},{"ruleId":"646","severity":1,"message":"683","line":12,"column":53,"nodeType":"648","messageId":"649","endLine":12,"endColumn":63},{"ruleId":"646","severity":1,"message":"743","line":13,"column":8,"nodeType":"648","messageId":"649","endLine":13,"endColumn":23},{"ruleId":"646","severity":1,"message":"744","line":14,"column":8,"nodeType":"648","messageId":"649","endLine":14,"endColumn":24},{"ruleId":"646","severity":1,"message":"669","line":15,"column":8,"nodeType":"648","messageId":"649","endLine":15,"endColumn":13},{"ruleId":"646","severity":1,"message":"670","line":16,"column":9,"nodeType":"648","messageId":"649","endLine":16,"endColumn":12},{"ruleId":"646","severity":1,"message":"781","line":17,"column":8,"nodeType":"648","messageId":"649","endLine":17,"endColumn":16},{"ruleId":"646","severity":1,"message":"750","line":18,"column":8,"nodeType":"648","messageId":"649","endLine":18,"endColumn":12},{"ruleId":"646","severity":1,"message":"720","line":19,"column":8,"nodeType":"648","messageId":"649","endLine":19,"endColumn":14},{"ruleId":"646","severity":1,"message":"782","line":20,"column":8,"nodeType":"648","messageId":"649","endLine":20,"endColumn":31},{"ruleId":"646","severity":1,"message":"783","line":21,"column":8,"nodeType":"648","messageId":"649","endLine":21,"endColumn":16},{"ruleId":"646","severity":1,"message":"784","line":22,"column":8,"nodeType":"648","messageId":"649","endLine":22,"endColumn":16},{"ruleId":"646","severity":1,"message":"688","line":23,"column":9,"nodeType":"648","messageId":"649","endLine":23,"endColumn":15},{"ruleId":"646","severity":1,"message":"785","line":24,"column":8,"nodeType":"648","messageId":"649","endLine":24,"endColumn":26},{"ruleId":"646","severity":1,"message":"738","line":29,"column":7,"nodeType":"648","messageId":"649","endLine":29,"endColumn":11},{"ruleId":"646","severity":1,"message":"742","line":3,"column":23,"nodeType":"648","messageId":"649","endLine":3,"endColumn":32},{"ruleId":"646","severity":1,"message":"682","line":3,"column":33,"nodeType":"648","messageId":"649","endLine":3,"endColumn":39},{"ruleId":"646","severity":1,"message":"786","line":4,"column":10,"nodeType":"648","messageId":"649","endLine":4,"endColumn":18},{"ruleId":"646","severity":1,"message":"787","line":4,"column":20,"nodeType":"648","messageId":"649","endLine":4,"endColumn":26},{"ruleId":"646","severity":1,"message":"688","line":5,"column":9,"nodeType":"648","messageId":"649","endLine":5,"endColumn":15},{"ruleId":"646","severity":1,"message":"669","line":6,"column":8,"nodeType":"648","messageId":"649","endLine":6,"endColumn":13},{"ruleId":"646","severity":1,"message":"670","line":7,"column":9,"nodeType":"648","messageId":"649","endLine":7,"endColumn":12},{"ruleId":"646","severity":1,"message":"781","line":8,"column":8,"nodeType":"648","messageId":"649","endLine":8,"endColumn":16},{"ruleId":"646","severity":1,"message":"750","line":9,"column":8,"nodeType":"648","messageId":"649","endLine":9,"endColumn":12},{"ruleId":"646","severity":1,"message":"802","line":10,"column":8,"nodeType":"648","messageId":"649","endLine":10,"endColumn":22},{"ruleId":"646","severity":1,"message":"803","line":11,"column":8,"nodeType":"648","messageId":"649","endLine":11,"endColumn":16},{"ruleId":"646","severity":1,"message":"804","line":52,"column":11,"nodeType":"648","messageId":"649","endLine":52,"endColumn":22},{"ruleId":"646","severity":1,"message":"805","line":62,"column":11,"nodeType":"648","messageId":"649","endLine":62,"endColumn":24},{"ruleId":"646","severity":1,"message":"806","line":112,"column":11,"nodeType":"648","messageId":"649","endLine":112,"endColumn":18},{"ruleId":"646","severity":1,"message":"807","line":122,"column":11,"nodeType":"648","messageId":"649","endLine":122,"endColumn":18},{"ruleId":"646","severity":1,"message":"741","line":11,"column":8,"nodeType":"648","messageId":"649","endLine":11,"endColumn":16},{"ruleId":"646","severity":1,"message":"667","line":12,"column":10,"nodeType":"648","messageId":"649","endLine":12,"endColumn":14},{"ruleId":"646","severity":1,"message":"742","line":13,"column":16,"nodeType":"648","messageId":"649","endLine":13,"endColumn":25},{"ruleId":"646","severity":1,"message":"808","line":30,"column":11,"nodeType":"648","messageId":"649","endLine":30,"endColumn":26},{"ruleId":"704","severity":1,"message":"745","line":42,"column":45,"nodeType":"706","messageId":"746","endLine":42,"endColumn":47},{"ruleId":"704","severity":1,"message":"745","line":49,"column":45,"nodeType":"706","messageId":"746","endLine":49,"endColumn":47},{"ruleId":"704","severity":1,"message":"745","line":56,"column":45,"nodeType":"706","messageId":"746","endLine":56,"endColumn":47},{"ruleId":"690","severity":1,"message":"691","line":63,"column":43,"nodeType":"692","messageId":"693","endLine":63,"endColumn":45},{"ruleId":"690","severity":1,"message":"691","line":69,"column":43,"nodeType":"692","messageId":"693","endLine":69,"endColumn":45},{"ruleId":"690","severity":1,"message":"691","line":72,"column":43,"nodeType":"692","messageId":"693","endLine":72,"endColumn":45},{"ruleId":"646","severity":1,"message":"809","line":9,"column":8,"nodeType":"648","messageId":"649","endLine":9,"endColumn":16},{"ruleId":"662","severity":1,"message":"810","line":39,"column":8,"nodeType":"664","endLine":39,"endColumn":13,"suggestions":"811"},{"ruleId":"646","severity":1,"message":"709","line":44,"column":12,"nodeType":"648","messageId":"649","endLine":44,"endColumn":20},{"ruleId":"704","severity":1,"message":"705","line":74,"column":17,"nodeType":"706","messageId":"707","endLine":74,"endColumn":19},{"ruleId":"646","severity":1,"message":"812","line":91,"column":11,"nodeType":"648","messageId":"649","endLine":91,"endColumn":18},{"ruleId":"662","severity":1,"message":"813","line":186,"column":8,"nodeType":"664","endLine":186,"endColumn":10,"suggestions":"814"},{"ruleId":"766","severity":1,"message":"767","line":246,"column":29,"nodeType":"768","endLine":246,"endColumn":62},{"ruleId":"725","severity":1,"message":"815","line":374,"column":79,"nodeType":"727","messageId":"693","endLine":374,"endColumn":84},{"ruleId":"646","severity":1,"message":"666","line":1,"column":10,"nodeType":"648","messageId":"649","endLine":1,"endColumn":17},{"ruleId":"646","severity":1,"message":"816","line":3,"column":8,"nodeType":"648","messageId":"649","endLine":3,"endColumn":21},{"ruleId":"646","severity":1,"message":"688","line":4,"column":9,"nodeType":"648","messageId":"649","endLine":4,"endColumn":15},{"ruleId":"646","severity":1,"message":"817","line":7,"column":11,"nodeType":"648","messageId":"649","endLine":7,"endColumn":25},{"ruleId":"646","severity":1,"message":"678","line":1,"column":8,"nodeType":"648","messageId":"649","endLine":1,"endColumn":13},{"ruleId":"646","severity":1,"message":"682","line":1,"column":39,"nodeType":"648","messageId":"649","endLine":1,"endColumn":45},{"ruleId":"646","severity":1,"message":"686","line":8,"column":8,"nodeType":"648","messageId":"649","endLine":8,"endColumn":25},{"ruleId":"646","severity":1,"message":"818","line":9,"column":8,"nodeType":"648","messageId":"649","endLine":9,"endColumn":26},{"ruleId":"646","severity":1,"message":"819","line":10,"column":9,"nodeType":"648","messageId":"649","endLine":10,"endColumn":15},{"ruleId":"646","severity":1,"message":"709","line":63,"column":12,"nodeType":"648","messageId":"649","endLine":63,"endColumn":20},{"ruleId":"725","severity":1,"message":"820","line":70,"column":9,"nodeType":"727","messageId":"693","endLine":70,"endColumn":21},{"ruleId":"646","severity":1,"message":"821","line":72,"column":11,"nodeType":"648","messageId":"649","endLine":72,"endColumn":21},{"ruleId":"646","severity":1,"message":"822","line":1,"column":10,"nodeType":"648","messageId":"649","endLine":1,"endColumn":19},{"ruleId":"646","severity":1,"message":"776","line":4,"column":8,"nodeType":"648","messageId":"649","endLine":4,"endColumn":14},{"ruleId":"646","severity":1,"message":"812","line":26,"column":11,"nodeType":"648","messageId":"649","endLine":26,"endColumn":18},{"ruleId":"646","severity":1,"message":"671","line":29,"column":11,"nodeType":"648","messageId":"649","endLine":29,"endColumn":19},"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","no-native-reassign",["823"],"no-negated-in-lhs",["824"],"'Redirect' is defined but never used.","'AnimatePresence' is defined but never used.","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'AssignmentIcon' is defined but never used.","'CircularProgress' is defined but never used.","'useGetUser' is defined but never used.","'getToken' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["825"],"'Divider' is defined but never used.","'Link' is defined but never used.","'Test' is defined but never used.","'axios' is defined but never used.","'uri' is defined but never used.","'location' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'user_context'. Either include it or remove the dependency array.",["826"],["827"],"React Hook React.useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","MemberExpression","'sr' is assigned a value but never used.","'React' is defined but never used.","'AppBar' is defined but never used.","'Toolbar' is defined but never used.","'Typography' is defined but never used.","'Button' is defined but never used.","'IconButton' is defined but never used.","'MenuIcon' is defined but never used.","'ExitToAppIcon' is defined but never used.","'AccountCircleIcon' is defined but never used.","'FormGroup' is defined but never used.","'motion' is defined but never used.","'setIsEnglish' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'InboxIcon' is defined but never used.","'MailIcon' is defined but never used.","'MonetizationOnIcon' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useHistory' is defined but never used.","'useLocation' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'setnewRole' is assigned a value but never used.","'setToken' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'getToken'. Either include it or remove the dependency array.",["828"],["829"],"'Table' is defined but never used.","'TableBody' is defined but never used.","'TableCell' is defined but never used.","'TableContainer' is defined but never used.","'TableHead' is defined but never used.","'TableRow' is defined but never used.","'Paper' is defined but never used.","'Avatar' is defined but never used.","'CustomModal' is defined but never used.","'classes' is assigned a value but never used.","'setIsAccepted' is assigned a value but never used.",["830"],"no-dupe-keys","Duplicate key 'variants'.","ObjectExpression","'variants' is assigned a value but never used.","'res' is assigned a value but never used.","'Grid' is defined but never used.","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","'lableSpan' is assigned a value but never used.","'valueSpan' is assigned a value but never used.","'makeStyles' is defined but never used.","'lang' is assigned a value but never used.","'createData' is defined but never used.","Duplicate key 'padding'.","'LinkIcon' is defined but never used.","'TextField' is defined but never used.","'AttachmentsLink' is defined but never used.","'TextareaAutosize' is defined but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","'InputBase' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","'Swal' is defined but never used.","React Hook React.useEffect has a missing dependency: '_isDisabled'. Either include it or remove the dependency array.",["831"],["832"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","React Hook React.useEffect has a missing dependency: 'getStock'. Either include it or remove the dependency array.",["833"],"React Hook React.useEffect has a missing dependency: 'getBulkProducts'. Either include it or remove the dependency array.",["834"],"'InputLabel' is defined but never used.","'MenuItem' is defined but never used.","'FormHelperText' is defined but never used.","'Select' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'_disabled' is assigned a value but never used.","'set_disabled' is assigned a value but never used.","'quantityHandler' is assigned a value but never used.","'svgPathVariants' is assigned a value but never used.",["823"],["824"],"'erroImg' is defined but never used.","'Loader' is defined but never used.","React Hook React.useEffect has a missing dependency: '_fetch'. Either include it or remove the dependency array.",["835"],"'CustomSnackBar' is defined but never used.","'KeyboardTimePicker' is defined but never used.","'useToken' is defined but never used.","'NotificationsActiveIcon' is defined but never used.","'EditIcon' is defined but never used.","'SaveIcon' is defined but never used.","'productPlaceHolder' is defined but never used.","'Language' is defined but never used.","'Rowing' is defined but never used.","'CustomRow' is defined but never used.","'AccordionActions' is defined but never used.","'withStyles' is defined but never used.","'SaveAltIcon' is defined but never used.","'ArchiveIcon' is defined but never used.","'CheckCircleIcon' is defined but never used.","'WatchLaterIcon' is defined but never used.","'LocalShippingIcon' is defined but never used.","'CheckIcon' is defined but never used.","'ClearIcon' is defined but never used.","'PaymentIcon' is defined but never used.","'LocalOfferIcon' is defined but never used.","'fake' is assigned a value but never used.",["836"],"'CustomSnackbar' is defined but never used.","'InfoIcon' is defined but never used.","'spanColorbg' is assigned a value but never used.","'spanColorType' is assigned a value but never used.","'variant' is assigned a value but never used.","'options' is assigned a value but never used.","'get_header_name' is assigned a value but never used.","'useMonth' is defined but never used.","React Hook useEffect has a missing dependency: 'toggleDate'. Either include it or remove the dependency array. If 'toggleDate' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["837"],"'context' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: '_fetchProducts'. Either include it or remove the dependency array.",["838"],"Duplicate key 'color'.","'LocalMallIcon' is defined but never used.","'contentVariant' is assigned a value but never used.","'AlternateEmailIcon' is defined but never used.","'avatar' is defined but never used.","Duplicate key 'marginBottom'.","'styleInput' is assigned a value but never used.","'Container' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"839","fix":"840"},{"desc":"841","fix":"842"},{"desc":"841","fix":"843"},{"desc":"844","fix":"845"},{"desc":"844","fix":"846"},{"desc":"844","fix":"847"},{"desc":"848","fix":"849"},{"desc":"848","fix":"850"},{"desc":"851","fix":"852"},{"desc":"853","fix":"854"},{"desc":"855","fix":"856"},{"desc":"855","fix":"857"},{"desc":"858","fix":"859"},{"desc":"860","fix":"861"},"Update the dependencies array to be: [history]",{"range":"862","text":"863"},"Update the dependencies array to be: [user_context]",{"range":"864","text":"865"},{"range":"866","text":"865"},"Update the dependencies array to be: [getToken]",{"range":"867","text":"868"},{"range":"869","text":"868"},{"range":"870","text":"868"},"Update the dependencies array to be: [_isDisabled, price]",{"range":"871","text":"872"},{"range":"873","text":"872"},"Update the dependencies array to be: [getStock]",{"range":"874","text":"875"},"Update the dependencies array to be: [getBulkProducts]",{"range":"876","text":"877"},"Update the dependencies array to be: [_fetch]",{"range":"878","text":"879"},{"range":"880","text":"879"},"Update the dependencies array to be: [ref, toggleDate]",{"range":"881","text":"882"},"Update the dependencies array to be: [_fetchProducts]",{"range":"883","text":"884"},[4672,4674],"[history]",[2438,2440],"[user_context]",[2554,2571],[2802,2804],"[getToken]",[4741,4743],[3883,3885],[1665,1672],"[_isDisabled, price]",[1588,1595],[2151,2153],"[getStock]",[2305,2307],"[getBulkProducts]",[1645,1647],"[_fetch]",[2477,2479],[1639,1644],"[ref, toggleDate]",[5705,5707],"[_fetchProducts]"]